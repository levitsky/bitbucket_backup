{"rendered": {"description": {"raw": "Rewrote `XML._handle_param` to return a namedtuple `xml._XMLParam` to carry more information, and to make the structure more consistent.\r\n\r\nEncapsulated the process of adding a \\*Param tag's data into a function \\(`XML._insert_param`\\) and rewrote it to handle `xml._XMLParam` instead of a raw `dict`.\r\n\r\nBetter handle cases where `recursive=False` but the current element contains \\*Param tags that are relevant, with `XML._find_immediate_params`.\r\n\r\n---\r\n\r\nThis also includes a new configuration variable for testing, `XML._promote_empty_param_to_name` to cause elements which contain only one parameter child which has no value will also have its value written to the name key, e.g. `info[\"name\"] = param.name`. It's set to `False` currently because it will involve destructively updating the test case data, but I think you might want to test with it enabled to see if you think it\u2019s worth the duplication.\r\n\r\n---\r\n\r\nFix: Remove patching of warnings module internals from `mzid` as it caused tests to fail.", "markup": "markdown", "html": "<p>Rewrote <code>XML._handle_param</code> to return a namedtuple <code>xml._XMLParam</code> to carry more information, and to make the structure more consistent.</p>\n<p>Encapsulated the process of adding a *Param tag's data into a function (<code>XML._insert_param</code>) and rewrote it to handle <code>xml._XMLParam</code> instead of a raw <code>dict</code>.</p>\n<p>Better handle cases where <code>recursive=False</code> but the current element contains *Param tags that are relevant, with <code>XML._find_immediate_params</code>.</p>\n<hr />\n<p>This also includes a new configuration variable for testing, <code>XML._promote_empty_param_to_name</code> to cause elements which contain only one parameter child which has no value will also have its value written to the name key, e.g. <code>info[\"name\"] = param.name</code>. It's set to <code>False</code> currently because it will involve destructively updating the test case data, but I think you might want to test with it enabled to see if you think it\u2019s worth the duplication.</p>\n<hr />\n<p>Fix: Remove patching of warnings module internals from <code>mzid</code> as it caused tests to fail.</p>", "type": "rendered"}, "title": {"raw": "Feature: Implement XML parameter repackaging for detecting empty parameters", "markup": "markdown", "html": "<p>Feature: Implement XML parameter repackaging for detecting empty parameters</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Rewrote `XML._handle_param` to return a namedtuple `xml._XMLParam` to carry more information, and to make the structure more consistent.\r\n\r\nEncapsulated the process of adding a \\*Param tag's data into a function \\(`XML._insert_param`\\) and rewrote it to handle `xml._XMLParam` instead of a raw `dict`.\r\n\r\nBetter handle cases where `recursive=False` but the current element contains \\*Param tags that are relevant, with `XML._find_immediate_params`.\r\n\r\n---\r\n\r\nThis also includes a new configuration variable for testing, `XML._promote_empty_param_to_name` to cause elements which contain only one parameter child which has no value will also have its value written to the name key, e.g. `info[\"name\"] = param.name`. It's set to `False` currently because it will involve destructively updating the test case data, but I think you might want to test with it enabled to see if you think it\u2019s worth the duplication.\r\n\r\n---\r\n\r\nFix: Remove patching of warnings module internals from `mzid` as it caused tests to fail.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/30/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:99950bd1a72c%0Dbc45c900a3cc?from_pullrequest_id=30"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/30/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/30"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:99950bd1a72c%0Dbc45c900a3cc?from_pullrequest_id=30"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/30/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30/statuses_page=1.json"}}, "title": "Feature: Implement XML parameter repackaging for detecting empty parameters", "close_source_branch": false, "reviewers": [{"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}], "id": 30, "destination": {"commit": {"hash": "bc45c900a3cc", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/bc45c900a3cc.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/bc45c900a3cc"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "4.0"}}, "created_on": "2018-12-29T19:50:30.727533+00:00", "summary": {"raw": "Rewrote `XML._handle_param` to return a namedtuple `xml._XMLParam` to carry more information, and to make the structure more consistent.\r\n\r\nEncapsulated the process of adding a \\*Param tag's data into a function \\(`XML._insert_param`\\) and rewrote it to handle `xml._XMLParam` instead of a raw `dict`.\r\n\r\nBetter handle cases where `recursive=False` but the current element contains \\*Param tags that are relevant, with `XML._find_immediate_params`.\r\n\r\n---\r\n\r\nThis also includes a new configuration variable for testing, `XML._promote_empty_param_to_name` to cause elements which contain only one parameter child which has no value will also have its value written to the name key, e.g. `info[\"name\"] = param.name`. It's set to `False` currently because it will involve destructively updating the test case data, but I think you might want to test with it enabled to see if you think it\u2019s worth the duplication.\r\n\r\n---\r\n\r\nFix: Remove patching of warnings module internals from `mzid` as it caused tests to fail.", "markup": "markdown", "html": "<p>Rewrote <code>XML._handle_param</code> to return a namedtuple <code>xml._XMLParam</code> to carry more information, and to make the structure more consistent.</p>\n<p>Encapsulated the process of adding a *Param tag's data into a function (<code>XML._insert_param</code>) and rewrote it to handle <code>xml._XMLParam</code> instead of a raw <code>dict</code>.</p>\n<p>Better handle cases where <code>recursive=False</code> but the current element contains *Param tags that are relevant, with <code>XML._find_immediate_params</code>.</p>\n<hr />\n<p>This also includes a new configuration variable for testing, <code>XML._promote_empty_param_to_name</code> to cause elements which contain only one parameter child which has no value will also have its value written to the name key, e.g. <code>info[\"name\"] = param.name</code>. It's set to <code>False</code> currently because it will involve destructively updating the test case data, but I think you might want to test with it enabled to see if you think it\u2019s worth the duplication.</p>\n<hr />\n<p>Fix: Remove patching of warnings module internals from <code>mzid</code> as it caused tests to fail.</p>", "type": "rendered"}, "source": {"commit": {"hash": "99950bd1a72c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/99950bd1a72c"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/99950bd1a72c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "4.0"}}, "comment_count": 16, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2019-01-03T22:06:01.652863+00:00", "type": "participant", "approved": false, "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"role": "PARTICIPANT", "participated_on": "2019-01-03T14:19:19.508589+00:00", "type": "participant", "approved": false, "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}}], "reason": "", "updated_on": "2019-01-03T22:06:01.665924+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "99950bd1a72c", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/99950bd1a72c.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/99950bd1a72c"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}