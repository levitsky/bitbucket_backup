{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/35/comments/121403502.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/35/_/diff#comment-121403502"}}, "parent": {"id": 121402810, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/35/comments/121402810.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/35/_/diff#comment-121402810"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 35, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/35.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/35"}}, "title": "Unit primitive slots"}, "content": {"raw": "The string types might be slower because of the extra hashing on\nconstruction, and cvstr are so common that the performance difference adds\nup. I think an alternative might be to cache the whole instance rather than\njust the extra attributes. I will take some measurements too.", "markup": "markdown", "html": "<p>The string types might be slower because of the extra hashing on\nconstruction, and cvstr are so common that the performance difference adds\nup. I think an alternative might be to cache the whole instance rather than\njust the extra attributes. I will take some measurements too.</p>", "type": "rendered"}, "created_on": "2019-10-19T13:20:12.657137+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2019-10-19T13:20:15.721497+00:00", "type": "pullrequest_comment", "id": 121403502}