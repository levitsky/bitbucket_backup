{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/14/comments/53031102.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/14/_/diff#comment-53031102"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 14, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/14.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/14"}}, "title": "Compression factoring"}, "content": {"raw": "I was planning to do more with this, but it was better to get the basic functionality out and up for review before going too far.\n\nThis essentially lets us only pay for decoding the binary arrays if we want to access the array data. It does cost a bit of abstraction, rather than providing a transparent view of the file contents with no middle-man it introduces a class that essentially tries to negotiate only one point of access with the consumer of the scan data, rather than all points of access. Of course, you only pay for it if you opt to not decode in the first place, and don't need to interact with the namedtuple if it's not important to you to decode it later.\n\nI also started stubbing in logic for more compression methods. We know there is Numpress and in the past year CV terms were added for layered compression methods. The BinaryDataArrayTransformer can have new decompression methods registered at run time without needing to make them built into Pyteomics.\n\n\n", "markup": "markdown", "html": "<p>I was planning to do more with this, but it was better to get the basic functionality out and up for review before going too far.</p>\n<p>This essentially lets us only pay for decoding the binary arrays if we want to access the array data. It does cost a bit of abstraction, rather than providing a transparent view of the file contents with no middle-man it introduces a class that essentially tries to negotiate only one point of access with the consumer of the scan data, rather than all points of access. Of course, you only pay for it if you opt to not decode in the first place, and don't need to interact with the namedtuple if it's not important to you to decode it later.</p>\n<p>I also started stubbing in logic for more compression methods. We know there is Numpress and in the past year CV terms were added for layered compression methods. The BinaryDataArrayTransformer can have new decompression methods registered at run time without needing to make them built into Pyteomics.</p>", "type": "rendered"}, "created_on": "2018-01-05T02:01:48.839970+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2018-01-05T02:01:49.042823+00:00", "type": "pullrequest_comment", "id": 53031102}