{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30/comments/86867360.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/30/_/diff#comment-86867360"}}, "parent": {"id": 86778753, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30/comments/86778753.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/30/_/diff#comment-86778753"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/30"}}, "title": "Feature: Implement XML parameter repackaging for detecting empty parameters"}, "content": {"raw": "I\u2019m pretty sure Bitbucket never notified me of your reply. Sorry about that.\n\nI agree that having one or several parameters affects the output layout. What I was saying is that even with duplication, you still get slightly different results in this case \\(\u201cname\u201d present or missing\\) which can lead to exceptions in some code.\n\nSo we have three options and two \\(maybe three\\) qualities to optimize: robustness, convenience and cleanness/simplicity. \\(Simplicity of the dict layout affects convenience, duplication does not\\)\n\nDepending on the scenario, one or the other may be more important. In one-off scripts or interactive sessions, robustness is not as important as when writing end-user software for publication. We can probably use two private configuration parameters to choose between all three behaviors. In that case, though, it makes sense to me to opt for convenience by default, so that quick things are still quick to do.\n\nWould that make sense to you? It does smell a little bit of over-engineering or at least over-thinking, but then it\u2019s really hard to make decisions knowing so little about the user base and their cases. I understand I\u2019d have to document all of this if we go for it, too.", "markup": "markdown", "html": "<p>I\u2019m pretty sure Bitbucket never notified me of your reply. Sorry about that.</p>\n<p>I agree that having one or several parameters affects the output layout. What I was saying is that even with duplication, you still get slightly different results in this case (\u201cname\u201d present or missing) which can lead to exceptions in some code.</p>\n<p>So we have three options and two (maybe three) qualities to optimize: robustness, convenience and cleanness/simplicity. (Simplicity of the dict layout affects convenience, duplication does not)</p>\n<p>Depending on the scenario, one or the other may be more important. In one-off scripts or interactive sessions, robustness is not as important as when writing end-user software for publication. We can probably use two private configuration parameters to choose between all three behaviors. In that case, though, it makes sense to me to opt for convenience by default, so that quick things are still quick to do.</p>\n<p>Would that make sense to you? It does smell a little bit of over-engineering or at least over-thinking, but then it\u2019s really hard to make decisions knowing so little about the user base and their cases. I understand I\u2019d have to document all of this if we go for it, too.</p>", "type": "rendered"}, "created_on": "2019-01-02T12:46:31.369413+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": "2019-01-02T12:47:34.579010+00:00", "type": "pullrequest_comment", "id": 86867360}