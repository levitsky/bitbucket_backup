{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30/comments/86778753.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/30/_/diff#comment-86778753"}}, "parent": {"id": 86778652, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30/comments/86778652.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/30/_/diff#comment-86778652"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 30, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/30"}}, "title": "Feature: Implement XML parameter repackaging for detecting empty parameters"}, "content": {"raw": "You're right. In haste, I overlooked the last bit of the inner loop of\n`CVQueryEngine._walk_dict`, so `cvquery` would still work. I'm still\nconcerned about cases like this:\n```xml\n    <AdditionalSearchParams>\n      <cvParam cvRef=\"PSI-MS\" accession=\"MS:1001211\" name=\"parent mass type\nmono\"></cvParam>\n      <cvParam cvRef=\"PSI-MS\" accession=\"MS:1002494\" name=\"cross-linking\nsearch\"></cvParam>\n      <cvParam cvRef=\"PSI-MS\" accession=\"MS:1001256\" name=\"fragment mass\ntype mono\"></cvParam>\n    </AdditionalSearchParams>\n```\nThe `<AdditionalSearchParams>` element contains 1 or more params. In this\ncase, the produced dict is\n```python\n{'cross-linking search': '',\n 'fragment mass type mono': '',\n 'parent mass type mono': ''}\n```\nWhile if it only had one parameter, it would be\n```python\n{'name': 'cross-linking search'}\n```\nThis kind of inconsistency is problematic too. Duplication prevents this,\nbut makes things less \"clean\". Of course, using `cvquery` here would solve\nthe problem, but that's an ugly solution too.", "markup": "markdown", "html": "<p>You're right. In haste, I overlooked the last bit of the inner loop of\n<code>CVQueryEngine._walk_dict</code>, so <code>cvquery</code> would still work. I'm still\nconcerned about cases like this:</p>\n<div class=\"codehilite language-xml\"><pre><span></span>    <span class=\"nt\">&lt;AdditionalSearchParams&gt;</span>\n      <span class=\"nt\">&lt;cvParam</span> <span class=\"na\">cvRef=</span><span class=\"s\">&quot;PSI-MS&quot;</span> <span class=\"na\">accession=</span><span class=\"s\">&quot;MS:1001211&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;parent mass type</span>\n<span class=\"s\">mono&quot;</span><span class=\"nt\">&gt;&lt;/cvParam&gt;</span>\n      <span class=\"nt\">&lt;cvParam</span> <span class=\"na\">cvRef=</span><span class=\"s\">&quot;PSI-MS&quot;</span> <span class=\"na\">accession=</span><span class=\"s\">&quot;MS:1002494&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;cross-linking</span>\n<span class=\"s\">search&quot;</span><span class=\"nt\">&gt;&lt;/cvParam&gt;</span>\n      <span class=\"nt\">&lt;cvParam</span> <span class=\"na\">cvRef=</span><span class=\"s\">&quot;PSI-MS&quot;</span> <span class=\"na\">accession=</span><span class=\"s\">&quot;MS:1001256&quot;</span> <span class=\"na\">name=</span><span class=\"s\">&quot;fragment mass</span>\n<span class=\"s\">type mono&quot;</span><span class=\"nt\">&gt;&lt;/cvParam&gt;</span>\n    <span class=\"nt\">&lt;/AdditionalSearchParams&gt;</span>\n</pre></div>\n\n\n<p>The <code>&lt;AdditionalSearchParams&gt;</code> element contains 1 or more params. In this\ncase, the produced dict is</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"p\">{</span><span class=\"s1\">&#39;cross-linking search&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n <span class=\"s1\">&#39;fragment mass type mono&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n <span class=\"s1\">&#39;parent mass type mono&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">}</span>\n</pre></div>\n\n\n<p>While if it only had one parameter, it would be</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"p\">{</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;cross-linking search&#39;</span><span class=\"p\">}</span>\n</pre></div>\n\n\n<p>This kind of inconsistency is problematic too. Duplication prevents this,\nbut makes things less \"clean\". Of course, using <code>cvquery</code> here would solve\nthe problem, but that's an ugly solution too.</p>", "type": "rendered"}, "created_on": "2018-12-29T23:20:06.793155+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2018-12-29T23:20:09.855516+00:00", "type": "pullrequest_comment", "id": 86778753}