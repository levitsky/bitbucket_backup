{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64811396.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64811396"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "This makes the method defined by default, though it is not be applicable to all formats. The method also fails for `referenceableParamGroupRef` which has the attribute `ref` without the preceding `_`, preventing it from being resolved. We could add an extra check for `k == 'ref'` to deal with that, but I'm not sure if that should go in an `mzML` specific implementation.", "markup": "markdown", "html": "<p>This makes the method defined by default, though it is not be applicable to all formats. The method also fails for <code>referenceableParamGroupRef</code> which has the attribute <code>ref</code> without the preceding <code>_</code>, preventing it from being resolved. We could add an extra check for <code>k == 'ref'</code> to deal with that, but I'm not sure if that should go in an <code>mzML</code> specific implementation.</p>", "type": "rendered"}, "created_on": "2018-05-21T14:01:21.358832+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2018-05-21T14:01:21.418201+00:00", "type": "pullrequest_comment", "id": 64811396}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64811661.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64811661"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "Wouldn\u2019t it make sense to add a working method for mzML and have \\`XML.\\_retrieve\\_refs\\` simply raise `NotImplementedError`?", "markup": "markdown", "html": "<p>Wouldn\u2019t it make sense to add a working method for mzML and have `XML._retrieve_refs` simply raise <code>NotImplementedError</code>?</p>", "type": "rendered"}, "created_on": "2018-05-21T14:03:07.557193+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": "2018-05-21T14:03:07.566020+00:00", "type": "pullrequest_comment", "id": 64811661}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64811875.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64811875"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "That would make blindly passing `retrieve_refs=True` unsafe, but that's fair to do. I'll re-arrange things to do that then.", "markup": "markdown", "html": "<p>That would make blindly passing <code>retrieve_refs=True</code> unsafe, but that's fair to do. I'll re-arrange things to do that then.</p>", "type": "rendered"}, "created_on": "2018-05-21T14:04:36.176655+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2018-05-21T14:04:36.225405+00:00", "type": "pullrequest_comment", "id": 64811875}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64812644.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64812644"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "Minor question: do `_ref` -style references occur in mzML or should we remove support for those in the mzML method?\n\nAlso, the stub method in XML needs a doc update, but of course I can do that myself.", "markup": "markdown", "html": "<p>Minor question: do <code>_ref</code> -style references occur in mzML or should we remove support for those in the mzML method?</p>\n<p>Also, the stub method in XML needs a doc update, but of course I can do that myself.</p>", "type": "rendered"}, "created_on": "2018-05-21T14:10:47.762350+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": "2018-05-21T14:10:47.770838+00:00", "type": "pullrequest_comment", "id": 64812644}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64813434.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64813434"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "I'll take care of the docstring, just indicate what the method is meant to do and that it must be defined in a subclass, correct?\n\nInspecting the schema, `mzML` does not contain `_ref` attributes, just `ref` attributes. \n\nIn theory, `referenceableParamGroupRef` should translate to putting all the params in the referenced group into the params in the parent element, which means it needs to be worked into the `_structures_to_flatten` system. ", "markup": "markdown", "html": "<p>I'll take care of the docstring, just indicate what the method is meant to do and that it must be defined in a subclass, correct?</p>\n<p>Inspecting the schema, <code>mzML</code> does not contain <code>_ref</code> attributes, just <code>ref</code> attributes. </p>\n<p>In theory, <code>referenceableParamGroupRef</code> should translate to putting all the params in the referenced group into the params in the parent element, which means it needs to be worked into the <code>_structures_to_flatten</code> system. </p>", "type": "rendered"}, "created_on": "2018-05-21T14:17:14.206595+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2018-05-21T14:17:14.267636+00:00", "type": "pullrequest_comment", "id": 64813434}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64814652.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64814652"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "Adding `referenceableParamGroupRef` to `_structures_to_flatten` produces undesirable flattening:\n\n\n```python\n[{'componentList': {'analyzer': [{'fourier transform ion cyclotron resonance mass spectrometer': '',\n     'order': '2'}],\n   'count': 3,\n   'detector': [{'inductive detector': '', 'order': '3'}],\n   'source': [{'electrospray inlet': '',\n     'electrospray ionization': '',\n     'order': '1'}]},\n  'id': 'IC1',\n  'referenceableParamGroupRef': [{'LTQ FT': '', # NOTE\n    'instrument serial number': 'SN06061F'}],\n  'softwareRef': {'Xcalibur': '', 'version': '1.1 Beta 7'}},\n {'componentList': {'analyzer': [{'order': '2',\n     'radial ejection linear ion trap': ''}],\n   'count': 3,\n   'detector': [{'electron multiplier': '', 'order': '3'}],\n   'source': [{'electrospray inlet': '',\n     'electrospray ionization': '',\n     'order': '1'}]},\n  'id': 'IC2',\n  'referenceableParamGroupRef': [{'LTQ FT': '',\n    'instrument serial number': 'SN06061F'}],\n  'softwareRef': {'Xcalibur': '', 'version': '1.1 Beta 7'}}]\n```\nBecomes \n\n```python\n[{'LTQ FT': 'instrument serial number', # NOTE\n  'componentList': {'analyzer': [{'fourier transform ion cyclotron resonance mass spectrometer': '',\n     'order': '2'}],\n   'count': 3,\n   'detector': [{'inductive detector': '', 'order': '3'}],\n   'source': [{'electrospray inlet': '',\n     'electrospray ionization': '',\n     'order': '1'}]},\n  'id': 'IC1',\n  'softwareRef': {'Xcalibur': '', 'version': '1.1 Beta 7'}},\n {'LTQ FT': 'instrument serial number',\n  'componentList': {'analyzer': [{'order': '2',\n     'radial ejection linear ion trap': ''}],\n   'count': 3,\n   'detector': [{'electron multiplier': '', 'order': '3'}],\n   'source': [{'electrospray inlet': '',\n     'electrospray ionization': '',\n     'order': '1'}]},\n  'id': 'IC2',\n  'softwareRef': {'Xcalibur': '', 'version': '1.1 Beta 7'}}]\n```", "markup": "markdown", "html": "<p>Adding <code>referenceableParamGroupRef</code> to <code>_structures_to_flatten</code> produces undesirable flattening:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"p\">[{</span><span class=\"s1\">&#39;componentList&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;analyzer&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;fourier transform ion cyclotron resonance mass spectrometer&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;order&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;2&#39;</span><span class=\"p\">}],</span>\n   <span class=\"s1\">&#39;count&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n   <span class=\"s1\">&#39;detector&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;inductive detector&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;order&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3&#39;</span><span class=\"p\">}],</span>\n   <span class=\"s1\">&#39;source&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;electrospray inlet&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;electrospray ionization&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;order&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1&#39;</span><span class=\"p\">}]},</span>\n  <span class=\"s1\">&#39;id&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;IC1&#39;</span><span class=\"p\">,</span>\n  <span class=\"s1\">&#39;referenceableParamGroupRef&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;LTQ FT&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"c1\"># NOTE</span>\n    <span class=\"s1\">&#39;instrument serial number&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SN06061F&#39;</span><span class=\"p\">}],</span>\n  <span class=\"s1\">&#39;softwareRef&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;Xcalibur&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;version&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1.1 Beta 7&#39;</span><span class=\"p\">}},</span>\n <span class=\"p\">{</span><span class=\"s1\">&#39;componentList&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;analyzer&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;order&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;2&#39;</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;radial ejection linear ion trap&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">}],</span>\n   <span class=\"s1\">&#39;count&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n   <span class=\"s1\">&#39;detector&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;electron multiplier&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;order&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3&#39;</span><span class=\"p\">}],</span>\n   <span class=\"s1\">&#39;source&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;electrospray inlet&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;electrospray ionization&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;order&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1&#39;</span><span class=\"p\">}]},</span>\n  <span class=\"s1\">&#39;id&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;IC2&#39;</span><span class=\"p\">,</span>\n  <span class=\"s1\">&#39;referenceableParamGroupRef&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;LTQ FT&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n    <span class=\"s1\">&#39;instrument serial number&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;SN06061F&#39;</span><span class=\"p\">}],</span>\n  <span class=\"s1\">&#39;softwareRef&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;Xcalibur&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;version&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1.1 Beta 7&#39;</span><span class=\"p\">}}]</span>\n</pre></div>\n\n\n<p>Becomes </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"p\">[{</span><span class=\"s1\">&#39;LTQ FT&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;instrument serial number&#39;</span><span class=\"p\">,</span> <span class=\"c1\"># NOTE</span>\n  <span class=\"s1\">&#39;componentList&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;analyzer&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;fourier transform ion cyclotron resonance mass spectrometer&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;order&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;2&#39;</span><span class=\"p\">}],</span>\n   <span class=\"s1\">&#39;count&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n   <span class=\"s1\">&#39;detector&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;inductive detector&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;order&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3&#39;</span><span class=\"p\">}],</span>\n   <span class=\"s1\">&#39;source&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;electrospray inlet&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;electrospray ionization&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;order&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1&#39;</span><span class=\"p\">}]},</span>\n  <span class=\"s1\">&#39;id&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;IC1&#39;</span><span class=\"p\">,</span>\n  <span class=\"s1\">&#39;softwareRef&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;Xcalibur&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;version&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1.1 Beta 7&#39;</span><span class=\"p\">}},</span>\n <span class=\"p\">{</span><span class=\"s1\">&#39;LTQ FT&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;instrument serial number&#39;</span><span class=\"p\">,</span>\n  <span class=\"s1\">&#39;componentList&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;analyzer&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;order&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;2&#39;</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;radial ejection linear ion trap&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">}],</span>\n   <span class=\"s1\">&#39;count&#39;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n   <span class=\"s1\">&#39;detector&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;electron multiplier&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;order&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;3&#39;</span><span class=\"p\">}],</span>\n   <span class=\"s1\">&#39;source&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;electrospray inlet&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;electrospray ionization&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;order&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1&#39;</span><span class=\"p\">}]},</span>\n  <span class=\"s1\">&#39;id&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;IC2&#39;</span><span class=\"p\">,</span>\n  <span class=\"s1\">&#39;softwareRef&#39;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;Xcalibur&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;version&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;1.1 Beta 7&#39;</span><span class=\"p\">}}]</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-05-21T14:24:27.810632+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2018-05-21T14:24:27.958656+00:00", "type": "pullrequest_comment", "id": 64814652}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64815008.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64815008"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "This undesirable rearrangement seems to be because `referenceableParamGroupRef` is a `list`, which gets mangled when passed to `update`", "markup": "markdown", "html": "<p>This undesirable rearrangement seems to be because <code>referenceableParamGroupRef</code> is a <code>list</code>, which gets mangled when passed to <code>update</code></p>", "type": "rendered"}, "created_on": "2018-05-21T14:27:34.934811+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2018-05-21T14:27:34.981835+00:00", "type": "pullrequest_comment", "id": 64815008}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64816103.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64816103"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "> I'll take care of the docstring, just indicate what the method is meant to do and that it must be defined in a subclass, correct?\n\nYes, and maybe also do something like `raise NotImplementedError('This method must be defined by the format-specific subclasses')`\n\nDo you see any issues with the current `_retrieve_refs` method for MzML? If not, we can go with that \\(except remove the `_ref` support\\)?\n\n\u200c", "markup": "markdown", "html": "<blockquote>\n<p>I'll take care of the docstring, just indicate what the method is meant to do and that it must be defined in a subclass, correct?</p>\n</blockquote>\n<p>Yes, and maybe also do something like <code>raise NotImplementedError('This method must be defined by the format-specific subclasses')</code></p>\n<p>Do you see any issues with the current <code>_retrieve_refs</code> method for MzML? If not, we can go with that (except remove the <code>_ref</code> support)?</p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2018-05-21T14:35:43.617904+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": "2018-05-21T14:35:43.627761+00:00", "type": "pullrequest_comment", "id": 64816103}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64816149.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64816149"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "Issue resolved by adding a bit of extra logic to `_get_info`\n\n```python\n        # flatten the excessive nesting\n        for k, v in dict(info).items():\n            if k in self._structures_to_flatten:\n                if isinstance(v, list):  # new logic\n                    for vi in v:\n                        info.update(vi)\n                else:\n                    info.update(v)\n                del info[k]\n```\n", "markup": "markdown", "html": "<p>Issue resolved by adding a bit of extra logic to <code>_get_info</code></p>\n<div class=\"codehilite language-python\"><pre><span></span>        <span class=\"c1\"># flatten the excessive nesting</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_structures_to_flatten</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>  <span class=\"c1\"># new logic</span>\n                    <span class=\"k\">for</span> <span class=\"n\">vi</span> <span class=\"ow\">in</span> <span class=\"n\">v</span><span class=\"p\">:</span>\n                        <span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">vi</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n                <span class=\"k\">del</span> <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-05-21T14:36:05.181824+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2018-05-21T14:36:05.262727+00:00", "type": "pullrequest_comment", "id": 64816149}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64817662.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64817662"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "There's more error checking that could be done in `_get_info` to deal with this added complexity, but I think it is outside the scope of this PR, which has already been breached.", "markup": "markdown", "html": "<p>There's more error checking that could be done in <code>_get_info</code> to deal with this added complexity, but I think it is outside the scope of this PR, which has already been breached.</p>", "type": "rendered"}, "created_on": "2018-05-21T14:46:59.772420+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2018-05-21T14:46:59.828899+00:00", "type": "pullrequest_comment", "id": 64817662}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64819345.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64819345"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "I think this is stable now. It passes all the unit tests including the new one I wrote for this. There may be issues for unusual structures in the formats with a lot of elements in `_structures_to_flatten`", "markup": "markdown", "html": "<p>I think this is stable now. It passes all the unit tests including the new one I wrote for this. There may be issues for unusual structures in the formats with a lot of elements in <code>_structures_to_flatten</code></p>", "type": "rendered"}, "created_on": "2018-05-21T14:59:02.945880+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2018-05-21T14:59:45.952844+00:00", "type": "pullrequest_comment", "id": 64819345}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64822314.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64822314"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "Thank you!\n\nI noticed that the `_retrieve_refs` in `__init__` kwargs is only respected in `next` calls and not in custom `iterfind` calls, so I guess we need to save it as an instance attribute in `__init__` and rely on it in `iterfind`, too. I didn\u2019t want to inflate this PR, as you noted it was getting broader than you wanted, so I\u2019ll add this myself if there are no objections.\n\nAlso we passed the 1000-th commit to pyteomics somewhere along the way, so congratulations and thanks again for all your contributions.", "markup": "markdown", "html": "<p>Thank you!</p>\n<p>I noticed that the <code>_retrieve_refs</code> in <code>__init__</code> kwargs is only respected in <code>next</code> calls and not in custom <code>iterfind</code> calls, so I guess we need to save it as an instance attribute in <code>__init__</code> and rely on it in <code>iterfind</code>, too. I didn\u2019t want to inflate this PR, as you noted it was getting broader than you wanted, so I\u2019ll add this myself if there are no objections.</p>\n<p>Also we passed the 1000-th commit to pyteomics somewhere along the way, so congratulations and thanks again for all your contributions.</p>", "type": "rendered"}, "created_on": "2018-05-21T15:23:18.831098+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": "2018-05-21T15:23:18.840835+00:00", "type": "pullrequest_comment", "id": 64822314}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64823688.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64823688"}}, "parent": {"id": 64822314, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments/64822314.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18/_/diff#comment-64822314"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 18, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`."}, "content": {"raw": "I noticed that behavior too. I have no objections to making it an object\nlevel property so that it sets the default behavior for `iterfind`.\n\nWe'll see if we break 2000 by the end of the year. Thank you for taking the\ntime to go through my PRs.\n", "markup": "markdown", "html": "<p>I noticed that behavior too. I have no objections to making it an object\nlevel property so that it sets the default behavior for <code>iterfind</code>.</p>\n<p>We'll see if we break 2000 by the end of the year. Thank you for taking the\ntime to go through my PRs.</p>", "type": "rendered"}, "created_on": "2018-05-21T15:35:22.495257+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2018-05-21T15:35:22.541080+00:00", "type": "pullrequest_comment", "id": 64823688}], "page": 1, "size": 13}