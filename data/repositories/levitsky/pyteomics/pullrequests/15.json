{"rendered": {"description": {"raw": "- Implemented new class `cvstr` in auxiliary.py to carry accession information on\r\n  otherwise plain old strings\r\n- Modified XML._handle_param to convert keys into cvstr instances to preserve\r\n  accession numbers\r\n- Implemented new class `CVQueryEngine` in auxiliary.py to carry out searching nested\r\n  dictionaries, lists, and tuples for cvstr instances. Either search a nested structure\r\n  for a key with a specific accession number, or create a flat dictionary whose keys are\r\n  the accession numbers for all cvstr keys in a nested structure with mapped values.\r\n- Added test case to exercise these components to test_mzml.py.", "markup": "markdown", "html": "<ul>\n<li>Implemented new class <code>cvstr</code> in auxiliary.py to carry accession information on\n  otherwise plain old strings</li>\n<li>Modified XML._handle_param to convert keys into cvstr instances to preserve\n  accession numbers</li>\n<li>Implemented new class <code>CVQueryEngine</code> in auxiliary.py to carry out searching nested\n  dictionaries, lists, and tuples for cvstr instances. Either search a nested structure\n  for a key with a specific accession number, or create a flat dictionary whose keys are\n  the accession numbers for all cvstr keys in a nested structure with mapped values.</li>\n<li>Added test case to exercise these components to test_mzml.py.</li>\n</ul>", "type": "rendered"}, "title": {"raw": "Preserve accession information on cvParam elements converted into dict keys", "markup": "markdown", "html": "<p>Preserve accession information on cvParam elements converted into dict keys</p>", "type": "rendered"}}, "type": "pullrequest", "description": "- Implemented new class `cvstr` in auxiliary.py to carry accession information on\r\n  otherwise plain old strings\r\n- Modified XML._handle_param to convert keys into cvstr instances to preserve\r\n  accession numbers\r\n- Implemented new class `CVQueryEngine` in auxiliary.py to carry out searching nested\r\n  dictionaries, lists, and tuples for cvstr instances. Either search a nested structure\r\n  for a key with a specific accession number, or create a flat dictionary whose keys are\r\n  the accession numbers for all cvstr keys in a nested structure with mapped values.\r\n- Added test case to exercise these components to test_mzml.py.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/15/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:b7fa1a4394be%0D65489a929af2?from_pullrequest_id=15"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/15/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/15.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/15/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/15/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/15"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/15/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:b7fa1a4394be%0D65489a929af2?from_pullrequest_id=15"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/15/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/15/statuses_page=1.json"}}, "title": "Preserve accession information on cvParam elements converted into dict keys", "close_source_branch": false, "reviewers": [{"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}], "id": 15, "destination": {"commit": {"hash": "65489a929af2", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/65489a929af2.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/65489a929af2"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2018-02-26T23:03:47.440260+00:00", "summary": {"raw": "- Implemented new class `cvstr` in auxiliary.py to carry accession information on\r\n  otherwise plain old strings\r\n- Modified XML._handle_param to convert keys into cvstr instances to preserve\r\n  accession numbers\r\n- Implemented new class `CVQueryEngine` in auxiliary.py to carry out searching nested\r\n  dictionaries, lists, and tuples for cvstr instances. Either search a nested structure\r\n  for a key with a specific accession number, or create a flat dictionary whose keys are\r\n  the accession numbers for all cvstr keys in a nested structure with mapped values.\r\n- Added test case to exercise these components to test_mzml.py.", "markup": "markdown", "html": "<ul>\n<li>Implemented new class <code>cvstr</code> in auxiliary.py to carry accession information on\n  otherwise plain old strings</li>\n<li>Modified XML._handle_param to convert keys into cvstr instances to preserve\n  accession numbers</li>\n<li>Implemented new class <code>CVQueryEngine</code> in auxiliary.py to carry out searching nested\n  dictionaries, lists, and tuples for cvstr instances. Either search a nested structure\n  for a key with a specific accession number, or create a flat dictionary whose keys are\n  the accession numbers for all cvstr keys in a nested structure with mapped values.</li>\n<li>Added test case to exercise these components to test_mzml.py.</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "b7fa1a4394be", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/b7fa1a4394be"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/b7fa1a4394be"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "default"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2018-02-27T19:25:01.865174+00:00", "type": "participant", "approved": false, "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"role": "PARTICIPANT", "participated_on": "2018-02-27T20:13:20.306946+00:00", "type": "participant", "approved": false, "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}}], "reason": "", "updated_on": "2018-02-27T20:15:37.019036+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "b7fa1a4394be", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/b7fa1a4394be.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/b7fa1a4394be"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}