{"pagelen": 100, "values": [{"hash": "b7fa1a4394be0007cc3b5de8aa6df65724836a45", "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/b7fa1a4394be0007cc3b5de8aa6df65724836a45.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/commit/b7fa1a4394be0007cc3b5de8aa6df65724836a45/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/patch/b7fa1a4394be0007cc3b5de8aa6df65724836a45"}, "html": {"href": "#!/levitsky/pyteomics/commits/b7fa1a4394be0007cc3b5de8aa6df65724836a45"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/b7fa1a4394be0007cc3b5de8aa6df65724836a45"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/commit/b7fa1a4394be0007cc3b5de8aa6df65724836a45/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/commit/b7fa1a4394be0007cc3b5de8aa6df65724836a45/statuses_page=1.json"}}, "author": {"raw": "mobiusklein <mobiusklein@gmail.com>", "type": "author", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}}, "summary": {"raw": "CVQueryEngine.query should fail if `accession` is None", "markup": "markdown", "html": "<p>CVQueryEngine.query should fail if <code>accession</code> is None</p>", "type": "rendered"}, "parents": [{"hash": "2c16aba744e9766dcbc4ba1109949dcfd956d720", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/2c16aba744e9766dcbc4ba1109949dcfd956d720.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/2c16aba744e9766dcbc4ba1109949dcfd956d720"}}}], "date": "2018-02-26T23:06:01+00:00", "message": "CVQueryEngine.query should fail if `accession` is None", "type": "commit"}, {"hash": "2c16aba744e9766dcbc4ba1109949dcfd956d720", "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/2c16aba744e9766dcbc4ba1109949dcfd956d720.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/commit/2c16aba744e9766dcbc4ba1109949dcfd956d720/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/patch/2c16aba744e9766dcbc4ba1109949dcfd956d720"}, "html": {"href": "#!/levitsky/pyteomics/commits/2c16aba744e9766dcbc4ba1109949dcfd956d720"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/2c16aba744e9766dcbc4ba1109949dcfd956d720"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/commit/2c16aba744e9766dcbc4ba1109949dcfd956d720/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/commit/2c16aba744e9766dcbc4ba1109949dcfd956d720/statuses_page=1.json"}}, "author": {"raw": "mobiusklein <mobiusklein@gmail.com>", "type": "author", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}}, "summary": {"raw": "Preserve accession information on cvParam elements converted into dict keys\n\n- Implemented new class `cvstr` in auxiliary.py to carry accession information on\n  otherwise plain old strings\n- Modified XML._handle_param to convert keys into cvstr instances to preserve\n  accession numbers\n- Implemented new class `CVQueryEngine` in auxiliary.py to carry out searching nested\n  dictionaries, lists, and tuples for cvstr instances. Either search a nested structure\n  for a key with a specific accession number, or create a flat dictionary whose keys are\n  the accession numbers for all cvstr keys in a nested structure with mapped values.\n- Added test case to exercise these components to test_mzml.py.", "markup": "markdown", "html": "<p>Preserve accession information on cvParam elements converted into dict keys</p>\n<ul>\n<li>Implemented new class <code>cvstr</code> in auxiliary.py to carry accession information on<br />\n  otherwise plain old strings</li>\n<li>Modified XML._handle_param to convert keys into cvstr instances to preserve<br />\n  accession numbers</li>\n<li>Implemented new class <code>CVQueryEngine</code> in auxiliary.py to carry out searching nested<br />\n  dictionaries, lists, and tuples for cvstr instances. Either search a nested structure<br />\n  for a key with a specific accession number, or create a flat dictionary whose keys are<br />\n  the accession numbers for all cvstr keys in a nested structure with mapped values.</li>\n<li>Added test case to exercise these components to test_mzml.py.</li>\n</ul>", "type": "rendered"}, "parents": [{"hash": "65489a929af26978f068cffc0ddc7f06305b72c0", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/65489a929af26978f068cffc0ddc7f06305b72c0.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/65489a929af26978f068cffc0ddc7f06305b72c0"}}}], "date": "2018-02-26T23:02:12+00:00", "message": "Preserve accession information on cvParam elements converted into dict keys\n\n- Implemented new class `cvstr` in auxiliary.py to carry accession information on\n  otherwise plain old strings\n- Modified XML._handle_param to convert keys into cvstr instances to preserve\n  accession numbers\n- Implemented new class `CVQueryEngine` in auxiliary.py to carry out searching nested\n  dictionaries, lists, and tuples for cvstr instances. Either search a nested structure\n  for a key with a specific accession number, or create a flat dictionary whose keys are\n  the accession numbers for all cvstr keys in a nested structure with mapped values.\n- Added test case to exercise these components to test_mzml.py.", "type": "commit"}], "page": 1}