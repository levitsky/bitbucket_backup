{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/25/comments/76039945.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/25/_/diff#comment-76039945"}}, "parent": {"id": 76037971, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/25/comments/76037971.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/25/_/diff#comment-76037971"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 25, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/25.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/25"}}, "title": "Update for 4.0"}, "content": {"raw": "Oh, slices are fun!\n\nBut if we are already building a list \\(or rather, tuple\\) of \\(key, offset\\) pairs, isn't it easier to just use its `__getitem__` for all cases except strings?\n\nThen in the reader we just get `self.index[key]` and then branch on whether it\u2019s an int or a list?", "markup": "markdown", "html": "<p>Oh, slices are fun!</p>\n<p>But if we are already building a list (or rather, tuple) of (key, offset) pairs, isn't it easier to just use its <code>__getitem__</code> for all cases except strings?</p>\n<p>Then in the reader we just get <code>self.index[key]</code> and then branch on whether it\u2019s an int or a list?</p>", "type": "rendered"}, "created_on": "2018-09-14T14:23:22.075404+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": "2018-09-14T14:23:22.083980+00:00", "type": "pullrequest_comment", "id": 76039945}