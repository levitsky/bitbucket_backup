{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/25/comments/75960505.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/25/_/diff#comment-75960505"}}, "parent": {"id": 75959773, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/25/comments/75959773.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/25/_/diff#comment-75959773"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 25, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/25.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/25"}}, "title": "Update for 4.0"}, "content": {"raw": "For `HierarchicalIndex`, you would instead do\n`index['ElementType'].from_index(1231)`. There isn't a clean way to omit\nthe first `__getitem__` call, unless we tell the hierarchical index which\nbin to direct integer queries to.\n\nSo such a `__getitem__` implementation would look something like this:\n```python\ndef __getitem__(self, ix):\n    try:\n        offset = self.index.find(ix)\n        self.seek(offset)\n        return self._generic_parse_function(ix)\n    except KeyError:\n        if isinstance(ix, int):\n            key, offset =\nself.index[self._primary_iteration_key].from_index(ix, True)\n            self.seek(offset)\n            return self._generic_parse_function(key)\n        raise\n```", "markup": "markdown", "html": "<p>For <code>HierarchicalIndex</code>, you would instead do\n<code>index['ElementType'].from_index(1231)</code>. There isn't a clean way to omit\nthe first <code>__getitem__</code> call, unless we tell the hierarchical index which\nbin to direct integer queries to.</p>\n<p>So such a <code>__getitem__</code> implementation would look something like this:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ix</span><span class=\"p\">):</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">offset</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">ix</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_generic_parse_function</span><span class=\"p\">(</span><span class=\"n\">ix</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">ix</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">offset</span> <span class=\"o\">=</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primary_iteration_key</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">from_index</span><span class=\"p\">(</span><span class=\"n\">ix</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_generic_parse_function</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n        <span class=\"k\">raise</span>\n</pre></div>", "type": "rendered"}, "created_on": "2018-09-13T23:35:17.560041+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2018-09-13T23:35:17.611375+00:00", "type": "pullrequest_comment", "id": 75960505}