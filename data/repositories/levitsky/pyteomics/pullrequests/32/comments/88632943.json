{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32/comments/88632943.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/32/_/diff#comment-88632943"}}, "parent": {"id": 88031772, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32/comments/88031772.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/32/_/diff#comment-88031772"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 32, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/32"}}, "title": "mzTab Parser"}, "content": {"raw": "This is great!\n\nIt looks to me that now `pandas` is not necessarily required with alternative table formats? In this case it makes sense to me to wrap its import in a `try`, as we do in other modules.", "markup": "markdown", "html": "<p>This is great!</p>\n<p>It looks to me that now <code>pandas</code> is not necessarily required with alternative table formats? In this case it makes sense to me to wrap its import in a <code>try</code>, as we do in other modules.</p>", "type": "rendered"}, "created_on": "2019-01-19T19:21:18.088804+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": "2019-01-19T19:21:18.098170+00:00", "type": "pullrequest_comment", "id": 88632943}