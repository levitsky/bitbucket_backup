{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32/comments/87867964.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/32/_/diff#comment-87867964"}}, "parent": {"id": 87867806, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32/comments/87867806.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/32/_/diff#comment-87867806"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 32, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/32"}}, "title": "mzTab Parser"}, "content": {"raw": "`_collapse_properties`  is the re-nesting routine. I wrote it initially looking at the `metadata` dictionary and wanted a way to go from \n\n```python\n{\n  \"ms_run[1]-format\": \"Andromeda:apl file format\",\r\n  \"ms_run[1]-location\":\t\"file://c:/users/jklein/projects/msv000080527_abelin2017/combined/andromeda/allspectra.hcd.ftms.secpep.sil0_0.apl\",\r\n  \"ms_run[1]-id_format\": \"scan number only nativeID format\"\n}\n```\n\nto \n\n```python\n{\n  \"ms_run\": [\n    {\n      \"format\": \"Andromeda:apl file format\",\r\n      \"location\": \"file://c:/users/jklein/projects/msv000080527_abelin2017/combined/andromeda/allspectra.hcd.ftms.secpep.sil0_0.apl\",\r\n      \"id_format\": \"scan number only nativeID format\"\n    }\n  ]\n}\n```\n\nThis would be good if I were translating the entire file\u2019s contents into a non-tabular structure, analogous to the hierarchical system in mzIdentML, but that requires making more assumptions than I am comfortable with at the moment. mzTab files may be ID summaries, or complete records of identifications, or summaries or complete records of quantification for both peptides and small molecules.\n\nIt should probably be made a public method.", "markup": "markdown", "html": "<p><code>_collapse_properties</code>  is the re-nesting routine. I wrote it initially looking at the <code>metadata</code> dictionary and wanted a way to go from </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"s2\">&quot;ms_run[1]-format&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Andromeda:apl file format&quot;</span><span class=\"p\">,</span>\n  <span class=\"s2\">&quot;ms_run[1]-location&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;file://c:/users/jklein/projects/msv000080527_abelin2017/combined/andromeda/allspectra.hcd.ftms.secpep.sil0_0.apl&quot;</span><span class=\"p\">,</span>\n  <span class=\"s2\">&quot;ms_run[1]-id_format&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;scan number only nativeID format&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>to </p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"s2\">&quot;ms_run&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"s2\">&quot;format&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Andromeda:apl file format&quot;</span><span class=\"p\">,</span>\n      <span class=\"s2\">&quot;location&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;file://c:/users/jklein/projects/msv000080527_abelin2017/combined/andromeda/allspectra.hcd.ftms.secpep.sil0_0.apl&quot;</span><span class=\"p\">,</span>\n      <span class=\"s2\">&quot;id_format&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;scan number only nativeID format&quot;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>This would be good if I were translating the entire file\u2019s contents into a non-tabular structure, analogous to the hierarchical system in mzIdentML, but that requires making more assumptions than I am comfortable with at the moment. mzTab files may be ID summaries, or complete records of identifications, or summaries or complete records of quantification for both peptides and small molecules.</p>\n<p>It should probably be made a public method.</p>", "type": "rendered"}, "created_on": "2019-01-12T21:27:49.170421+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2019-01-12T21:27:49.285511+00:00", "type": "pullrequest_comment", "id": 87867964}