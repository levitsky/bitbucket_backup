{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32/comments/87867975.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/32/_/diff#comment-87867975"}}, "parent": {"id": 87867806, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32/comments/87867806.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/32/_/diff#comment-87867806"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 32, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32.json"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/32"}}, "title": "mzTab Parser"}, "content": {"raw": "`_MzTabTable.as_dict` was there for debugging purposes. It might be useful for exporting the data in a format other than a `DataFrame` so I retained it. The public API does indeed not really permit its use. An extra parameter could be added to control the table format that `MzTab` exposes once parsing is done.", "markup": "markdown", "html": "<p><code>_MzTabTable.as_dict</code> was there for debugging purposes. It might be useful for exporting the data in a format other than a <code>DataFrame</code> so I retained it. The public API does indeed not really permit its use. An extra parameter could be added to control the table format that <code>MzTab</code> exposes once parsing is done.</p>", "type": "rendered"}, "created_on": "2019-01-12T21:30:07.509224+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2019-01-12T21:30:07.561840+00:00", "type": "pullrequest_comment", "id": 87867975}