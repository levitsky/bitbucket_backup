{"pagelen": 50, "values": [{"description": "In calculate_mass, ensure `composition` is always a `Composition` object (dict seems to be not good enough in some cases).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/1/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:5ea48087d728%0Dde82f8bf41c6?from_pullrequest_id=1"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/1/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/1.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/1/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/1/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/1"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/1/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:5ea48087d728%0Dde82f8bf41c6?from_pullrequest_id=1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/1/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/1/statuses_page=1.json"}}, "title": "Fix for passing a composition into calculate_mass.", "close_source_branch": false, "type": "pullrequest", "id": 1, "destination": {"commit": {"hash": "de82f8bf41c6", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/de82f8bf41c6.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/de82f8bf41c6"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "lev"}}, "created_on": "2013-03-10T16:17:19.944718+00:00", "summary": {"raw": "In calculate_mass, ensure `composition` is always a `Composition` object (dict seems to be not good enough in some cases).", "markup": "markdown", "html": "<p>In calculate_mass, ensure <code>composition</code> is always a <code>Composition</code> object (dict seems to be not good enough in some cases).</p>", "type": "rendered"}, "source": {"commit": {"hash": "5d69ccb85ebb", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jmchilton/pyteomics/commit/5d69ccb85ebb"}, "html": {"href": "https://bitbucket.org/jmchilton/pyteomics/commits/5d69ccb85ebb"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jmchilton/pyteomics"}, "html": {"href": "https://bitbucket.org/jmchilton/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c30d3b77-ec59-4231-9e94-f3f8d4e178b6}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "jmchilton/pyteomics", "uuid": "{c30d3b77-ec59-4231-9e94-f3f8d4e178b6}"}, "branch": {"name": "default"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2013-03-10T19:02:20.291889+00:00", "author": {"display_name": "John Chilton", "uuid": "{ee57e0fa-ccdf-464a-8c9e-01d0a041a628}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bee57e0fa-ccdf-464a-8c9e-01d0a041a628%7D"}, "html": {"href": "https://bitbucket.org/%7Bee57e0fa-ccdf-464a-8c9e-01d0a041a628%7D/"}, "avatar": {"href": "https://bitbucket.org/account/jmchilton/avatar/"}}, "nickname": "jmchilton", "type": "user", "account_id": null}, "merge_commit": {"hash": "5ea48087d728", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/5ea48087d728.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/5ea48087d728"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "This pull requests makes mass.Composition objects pickleable by fixing the __reduce__ method returned by defaultdict parent not to contain the int type as the first argument (which mass.Composition does not accept any more).", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/2/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:000000000000%0Df285f29af7db?from_pullrequest_id=2"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/2/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/2.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/2/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/2/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/2"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/2/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:000000000000%0Df285f29af7db?from_pullrequest_id=2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/2/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/2/statuses_page=1.json"}}, "title": "pickling of mass.Composition objects", "close_source_branch": false, "type": "pullrequest", "id": 2, "destination": {"commit": {"hash": "f285f29af7db", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/f285f29af7db.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/f285f29af7db"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2014-11-26T16:27:07.725566+00:00", "summary": {"raw": "This pull requests makes mass.Composition objects pickleable by fixing the __reduce__ method returned by defaultdict parent not to contain the int type as the first argument (which mass.Composition does not accept any more).", "markup": "markdown", "html": "<p>This pull requests makes mass.Composition objects pickleable by fixing the <strong>reduce</strong> method returned by defaultdict parent not to contain the int type as the first argument (which mass.Composition does not accept any more).</p>", "type": "rendered"}, "source": {"commit": {"hash": "97596a9b99c5", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/Sauliusl/pyteomics/commit/97596a9b99c5"}, "html": {"href": "https://bitbucket.org/Sauliusl/pyteomics/commits/97596a9b99c5"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/Sauliusl/pyteomics"}, "html": {"href": "https://bitbucket.org/Sauliusl/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{8b0020c7-d036-4a9c-ae27-5fa34c53bcbc}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "Sauliusl/pyteomics", "uuid": "{8b0020c7-d036-4a9c-ae27-5fa34c53bcbc}"}, "branch": {"name": "default"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2014-11-27T13:50:08.122860+00:00", "author": {"display_name": "Sauliusl", "uuid": "{920f19da-4c24-4a21-95f9-e79c5503ed54}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B920f19da-4c24-4a21-95f9-e79c5503ed54%7D"}, "html": {"href": "https://bitbucket.org/%7B920f19da-4c24-4a21-95f9-e79c5503ed54%7D/"}, "avatar": {"href": "https://bitbucket.org/account/Sauliusl/avatar/"}}, "nickname": "Sauliusl", "type": "user", "account_id": null}, "merge_commit": null, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Implement correction for terminal residues in calculation of charge and pI.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/3/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:000000000000%0Deb62373e2825?from_pullrequest_id=3"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/3/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/3.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/3/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/3/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/3"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/3/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:000000000000%0Deb62373e2825?from_pullrequest_id=3"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/3/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/3/statuses_page=1.json"}}, "title": "changes in electrochem", "close_source_branch": false, "type": "pullrequest", "id": 3, "destination": {"commit": {"hash": "eb62373e2825", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/eb62373e2825.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/eb62373e2825"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "julia"}}, "created_on": "2015-02-24T11:21:54.906792+00:00", "summary": {"raw": "Implement correction for terminal residues in calculation of charge and pI.", "markup": "markdown", "html": "<p>Implement correction for terminal residues in calculation of charge and pI.</p>", "type": "rendered"}, "source": {"commit": {"hash": "9a1138256f2b", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/J_Bale/pyteomics/commit/9a1138256f2b"}, "html": {"href": "https://bitbucket.org/J_Bale/pyteomics/commits/9a1138256f2b"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/J_Bale/pyteomics"}, "html": {"href": "https://bitbucket.org/J_Bale/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c59b1193-0b55-4e6a-9c92-71faffba536b}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "J_Bale/pyteomics", "uuid": "{c59b1193-0b55-4e6a-9c92-71faffba536b}"}, "branch": {"name": "julia"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2015-02-24T14:05:39.526910+00:00", "author": {"display_name": "Julia Bubis", "uuid": "{c4a05952-8c8d-4ea4-8b67-d4227ca0d711}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc4a05952-8c8d-4ea4-8b67-d4227ca0d711%7D"}, "html": {"href": "https://bitbucket.org/%7Bc4a05952-8c8d-4ea4-8b67-d4227ca0d711%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/caa7e6b0833644bb7a560dd5039e1e50d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJB-4.png"}}, "nickname": "J_Bale", "type": "user", "account_id": "557058:a8d1b9af-e26a-47de-8063-8ac1b0e0993d"}, "merge_commit": null, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "This new class is derived from the original mzml.MzML reader, with a modified __init__ method\r\nto build up a byte offset index for spectra relative to the start of the file. This lets the file reader jump to the start of the spectrum immediately before parsing, removing the lengthy seek time for large files. If applied to a non-indexed MzML file, the class will fall back on its parent class methods with no loss of functionality, but without the substantial improvement in random access performance\r\nby `get_by_id`.\r\n\r\nAs a convenience notation, I also set the __getitem__ method on the IndexedMzML class to invoke `get_by_id` as the interface makes sense given the behavior, but this asymmetry with the base class may not be worth the saved characters.\r\n\r\nI added the new class to the list of callables to test in tests/test_mzml.py, where it passed the existing test suite.\r\n\r\nI made this for convenience in testing my newest problem, deisotoping and charge state determination. Every time I reset the interpreter, having to re-seek to a problematic scan took too long.\r\n\r\nAn example MzML file from the wild a year ago with an invalid index is available compressed at [https://drive.google.com/file/d/0B6adxGixQdBaZUNDaGdwNDBpMWc/view?usp=sharing](https://drive.google.com/file/d/0B6adxGixQdBaZUNDaGdwNDBpMWc/view?usp=sharing) The file is quite large, so it is compressed.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/4/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:ab67e0d4772f%0D7d603942410b?from_pullrequest_id=4"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/4/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/4.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/4/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/4/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/4"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/4/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:ab67e0d4772f%0D7d603942410b?from_pullrequest_id=4"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/4/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/4/statuses_page=1.json"}}, "title": "Added an IndexedMzML class to make random access of indexed MzML documents possible.", "close_source_branch": false, "type": "pullrequest", "id": 4, "destination": {"commit": {"hash": "7d603942410b", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/7d603942410b.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/7d603942410b"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2016-04-03T20:00:51.327156+00:00", "summary": {"raw": "This new class is derived from the original mzml.MzML reader, with a modified __init__ method\r\nto build up a byte offset index for spectra relative to the start of the file. This lets the file reader jump to the start of the spectrum immediately before parsing, removing the lengthy seek time for large files. If applied to a non-indexed MzML file, the class will fall back on its parent class methods with no loss of functionality, but without the substantial improvement in random access performance\r\nby `get_by_id`.\r\n\r\nAs a convenience notation, I also set the __getitem__ method on the IndexedMzML class to invoke `get_by_id` as the interface makes sense given the behavior, but this asymmetry with the base class may not be worth the saved characters.\r\n\r\nI added the new class to the list of callables to test in tests/test_mzml.py, where it passed the existing test suite.\r\n\r\nI made this for convenience in testing my newest problem, deisotoping and charge state determination. Every time I reset the interpreter, having to re-seek to a problematic scan took too long.\r\n\r\nAn example MzML file from the wild a year ago with an invalid index is available compressed at [https://drive.google.com/file/d/0B6adxGixQdBaZUNDaGdwNDBpMWc/view?usp=sharing](https://drive.google.com/file/d/0B6adxGixQdBaZUNDaGdwNDBpMWc/view?usp=sharing) The file is quite large, so it is compressed.", "markup": "markdown", "html": "<p>This new class is derived from the original mzml.MzML reader, with a modified <strong>init</strong> method\nto build up a byte offset index for spectra relative to the start of the file. This lets the file reader jump to the start of the spectrum immediately before parsing, removing the lengthy seek time for large files. If applied to a non-indexed MzML file, the class will fall back on its parent class methods with no loss of functionality, but without the substantial improvement in random access performance\nby <code>get_by_id</code>.</p>\n<p>As a convenience notation, I also set the <strong>getitem</strong> method on the IndexedMzML class to invoke <code>get_by_id</code> as the interface makes sense given the behavior, but this asymmetry with the base class may not be worth the saved characters.</p>\n<p>I added the new class to the list of callables to test in tests/test_mzml.py, where it passed the existing test suite.</p>\n<p>I made this for convenience in testing my newest problem, deisotoping and charge state determination. Every time I reset the interpreter, having to re-seek to a problematic scan took too long.</p>\n<p>An example MzML file from the wild a year ago with an invalid index is available compressed at <a data-is-external-link=\"true\" href=\"https://drive.google.com/file/d/0B6adxGixQdBaZUNDaGdwNDBpMWc/view?usp=sharing\" rel=\"nofollow\">https://drive.google.com/file/d/0B6adxGixQdBaZUNDaGdwNDBpMWc/view?usp=sharing</a> The file is quite large, so it is compressed.</p>", "type": "rendered"}, "source": {"commit": {"hash": "ab67e0d4772f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/ab67e0d4772f"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/ab67e0d4772f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "default"}}, "comment_count": 23, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-05-05T14:16:02.150294+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "ab67e0d4772f170bdf6251c071cb9192a06d1cd9", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/ab67e0d4772f170bdf6251c071cb9192a06d1cd9.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/ab67e0d4772f170bdf6251c071cb9192a06d1cd9"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "* Adapted the IndexedXML machinery to use parameterized identifiers instead\r\n    of the hard-coded \"id\" key.\r\n\r\n    Created initial MzXML implementation in `pyteomics.mzxml`.\r\n\r\n* Added mzxml unit tests. Everything failed.\r\n\r\n* Fixed iteration order under nested scans and implemented functional unit tests\r\n\r\n* Fixed py27 mistake about retun in a generator in MzXML.iterfind", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/5/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:f8f8f9630707%0D79678321190d?from_pullrequest_id=5"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/5/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/5.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/5/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/5/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/5"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/5/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:f8f8f9630707%0D79678321190d?from_pullrequest_id=5"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/5/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/5/statuses_page=1.json"}}, "title": "Implement infrastructure for MzXML parser", "close_source_branch": false, "type": "pullrequest", "id": 5, "destination": {"commit": {"hash": "79678321190d", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/79678321190d.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/79678321190d"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2016-08-24T19:21:52.861559+00:00", "summary": {"raw": "* Adapted the IndexedXML machinery to use parameterized identifiers instead\r\n    of the hard-coded \"id\" key.\r\n\r\n    Created initial MzXML implementation in `pyteomics.mzxml`.\r\n\r\n* Added mzxml unit tests. Everything failed.\r\n\r\n* Fixed iteration order under nested scans and implemented functional unit tests\r\n\r\n* Fixed py27 mistake about retun in a generator in MzXML.iterfind", "markup": "markdown", "html": "<ul>\n<li>\n<p>Adapted the IndexedXML machinery to use parameterized identifiers instead\n    of the hard-coded \"id\" key.</p>\n<p>Created initial MzXML implementation in <code>pyteomics.mzxml</code>.</p>\n</li>\n<li>\n<p>Added mzxml unit tests. Everything failed.</p>\n</li>\n<li>\n<p>Fixed iteration order under nested scans and implemented functional unit tests</p>\n</li>\n<li>\n<p>Fixed py27 mistake about retun in a generator in MzXML.iterfind</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "f8f8f9630707", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/f8f8f9630707"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/f8f8f9630707"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "default"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-08-26T10:21:42.739106+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "f8f8f9630707142027f09488f442842cbb1dd8d8", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/f8f8f9630707142027f09488f442842cbb1dd8d8.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/f8f8f9630707142027f09488f442842cbb1dd8d8"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "* speed up achrom.get_RCs method\r\n\r\n* speed up achrom.get_RCs_vary_lcp method", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/6/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:715a760d0d46%0Df6939f745b00?from_pullrequest_id=6"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/6/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/6.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/6/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/6/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/6"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/6/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:715a760d0d46%0Df6939f745b00?from_pullrequest_id=6"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/6/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/6/statuses_page=1.json"}}, "title": "Achrom optimizations", "close_source_branch": false, "type": "pullrequest", "id": 6, "destination": {"commit": {"hash": "f6939f745b00", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/f6939f745b00.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/f6939f745b00"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2016-08-31T14:48:18.980236+00:00", "summary": {"raw": "* speed up achrom.get_RCs method\r\n\r\n* speed up achrom.get_RCs_vary_lcp method", "markup": "markdown", "html": "<ul>\n<li>\n<p>speed up achrom.get_RCs method</p>\n</li>\n<li>\n<p>speed up achrom.get_RCs_vary_lcp method</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "715a760d0d46", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/markmipt/pyteomics_testing/commit/715a760d0d46"}, "html": {"href": "https://bitbucket.org/markmipt/pyteomics_testing/commits/715a760d0d46"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/markmipt/pyteomics_testing"}, "html": {"href": "https://bitbucket.org/markmipt/pyteomics_testing"}, "avatar": {"href": "data/bytebucket.org/ravatar/{c28da90a-b9ea-4a62-84e3-0da724766e4d}ts=default"}}, "type": "repository", "name": "pyteomics_testing", "full_name": "markmipt/pyteomics_testing", "uuid": "{c28da90a-b9ea-4a62-84e3-0da724766e4d}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-09-06T13:03:44.655966+00:00", "author": {"display_name": "Mark Ivanov", "uuid": "{f788042e-a7ff-4fd7-b89d-95d4cc4ccb87}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf788042e-a7ff-4fd7-b89d-95d4cc4ccb87%7D"}, "html": {"href": "https://bitbucket.org/%7Bf788042e-a7ff-4fd7-b89d-95d4cc4ccb87%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/c70e39102246c2e2601f69718bd5c546d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMI-4.png"}}, "nickname": "markmipt", "type": "user", "account_id": "557058:bc17ec64-6559-4c2f-86e5-07473d6de3b1"}, "merge_commit": {"hash": "715a760d0d467e89ff7d9a85da53a3c171221d49", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/715a760d0d467e89ff7d9a85da53a3c171221d49.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/715a760d0d467e89ff7d9a85da53a3c171221d49"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "mass.py Add support for: Selenocysteine 'U' and Pyrrolysine 'O'", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/7/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:330f9257a284%0D07149ee83b9b?from_pullrequest_id=7"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/7/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/7.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/7/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/7/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/7"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/7/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:330f9257a284%0D07149ee83b9b?from_pullrequest_id=7"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/7/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/7/statuses_page=1.json"}}, "title": "mass.py Add support for: Selenocysteine 'U' and Pyrrolysine 'O'", "close_source_branch": false, "type": "pullrequest", "id": 7, "destination": {"commit": {"hash": "07149ee83b9b", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/07149ee83b9b.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/07149ee83b9b"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2016-11-10T00:49:38.020473+00:00", "summary": {"raw": "mass.py Add support for: Selenocysteine 'U' and Pyrrolysine 'O'", "markup": "markdown", "html": "<p>mass.py Add support for: Selenocysteine 'U' and Pyrrolysine 'O'</p>", "type": "rendered"}, "source": {"commit": {"hash": "662c664caed1", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jjohnson/pyteomics/commit/662c664caed1"}, "html": {"href": "https://bitbucket.org/jjohnson/pyteomics/commits/662c664caed1"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/jjohnson/pyteomics"}, "html": {"href": "https://bitbucket.org/jjohnson/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{2102d600-e6b2-46c8-b59f-3f5cff9633a3}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "jjohnson/pyteomics", "uuid": "{2102d600-e6b2-46c8-b59f-3f5cff9633a3}"}, "branch": {"name": "jjohnson/masspy-add-support-for-selenocysteine-u--1478738972484"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2016-11-25T15:26:56.800741+00:00", "author": {"display_name": "James Johnson", "uuid": "{65133547-2073-458f-99c1-65fd09c9fbe6}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65133547-2073-458f-99c1-65fd09c9fbe6%7D"}, "html": {"href": "https://bitbucket.org/%7B65133547-2073-458f-99c1-65fd09c9fbe6%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:a300b2eb-30e6-4c6b-be49-3cedeba08bdd/ec4c4ba1-1ab6-4f83-acad-55a00347ed2e/128"}}, "nickname": "jjohnson", "type": "user", "account_id": "557058:a300b2eb-30e6-4c6b-be49-3cedeba08bdd"}, "merge_commit": {"hash": "330f9257a284", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/330f9257a284.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/330f9257a284"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "* Added unitint, unitfloat, and unitstr to auxiliary.py to store unit information\r\n    along side primitive values.\r\n\r\n    Altered xml.XML._handle_param to use these unit-storing primitives. Reads unit\r\n    information.\r\n\r\n    Updated unit tests for mzml and mzid to check that unit_info fields are populated.\r\n\r\n* Added parser for the \"duration\" xsd type that returns a unitfloat(\"minute\").\r\n    Updated mzxml schema to use this new converter for \"retentionTime\". Corrected\r\n    the converter for precursorMz@precursorCharge attribute definition in mzxml schema\r\n    too.\r\n\r\n* Updated test_mzxml to check that \"retentionTime\" properly converts units\r\n    using the new duration parser. Updated data.mzxml_spectra's retentionTime\r\n    fields to use minutes instead of seconds.\r\n\r\n* Added handling of BOM in ByteCountingXMLScanner", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/8/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:88bdf4fbfb43%0D4cbd0924b332?from_pullrequest_id=8"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/8/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/8.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/8/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/8/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/8"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/8/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:88bdf4fbfb43%0D4cbd0924b332?from_pullrequest_id=8"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/8/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/8/statuses_page=1.json"}}, "title": "Implementation of described work in \" cvParam Unit Awareness\"", "close_source_branch": false, "type": "pullrequest", "id": 8, "destination": {"commit": {"hash": "4cbd0924b332", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/4cbd0924b332.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/4cbd0924b332"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2017-01-05T18:50:42.321588+00:00", "summary": {"raw": "* Added unitint, unitfloat, and unitstr to auxiliary.py to store unit information\r\n    along side primitive values.\r\n\r\n    Altered xml.XML._handle_param to use these unit-storing primitives. Reads unit\r\n    information.\r\n\r\n    Updated unit tests for mzml and mzid to check that unit_info fields are populated.\r\n\r\n* Added parser for the \"duration\" xsd type that returns a unitfloat(\"minute\").\r\n    Updated mzxml schema to use this new converter for \"retentionTime\". Corrected\r\n    the converter for precursorMz@precursorCharge attribute definition in mzxml schema\r\n    too.\r\n\r\n* Updated test_mzxml to check that \"retentionTime\" properly converts units\r\n    using the new duration parser. Updated data.mzxml_spectra's retentionTime\r\n    fields to use minutes instead of seconds.\r\n\r\n* Added handling of BOM in ByteCountingXMLScanner", "markup": "markdown", "html": "<ul>\n<li>\n<p>Added unitint, unitfloat, and unitstr to auxiliary.py to store unit information\n    along side primitive values.</p>\n<p>Altered xml.XML._handle_param to use these unit-storing primitives. Reads unit\ninformation.</p>\n<p>Updated unit tests for mzml and mzid to check that unit_info fields are populated.</p>\n</li>\n<li>\n<p>Added parser for the \"duration\" xsd type that returns a unitfloat(\"minute\").\n    Updated mzxml schema to use this new converter for \"retentionTime\". Corrected\n    the converter for precursorMz@precursorCharge attribute definition in mzxml schema\n    too.</p>\n</li>\n<li>\n<p>Updated test_mzxml to check that \"retentionTime\" properly converts units\n    using the new duration parser. Updated data.mzxml_spectra's retentionTime\n    fields to use minutes instead of seconds.</p>\n</li>\n<li>\n<p>Added handling of BOM in ByteCountingXMLScanner</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "88bdf4fbfb43", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/88bdf4fbfb43"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/88bdf4fbfb43"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "default"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-01-12T13:05:38.839810+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "88bdf4fbfb43baefb2a506111877731530844526", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/88bdf4fbfb43baefb2a506111877731530844526.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/88bdf4fbfb43baefb2a506111877731530844526"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Solves #!/levitsky/pyteomics/issues/16/checking-of-string-inclusivity-in", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/9/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:d774c2850716%0D88bdf4fbfb43?from_pullrequest_id=9"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/9/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/9.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/9/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/9/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/9"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/9/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:d774c2850716%0D88bdf4fbfb43?from_pullrequest_id=9"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/9/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/9/statuses_page=1.json"}}, "title": "Handle the incredibly unlikely event that some key tag name strings appear in base64 encoded binary blobs on Python2 for mzml and mzxml's _get_info_smart", "close_source_branch": false, "type": "pullrequest", "id": 9, "destination": {"commit": {"hash": "88bdf4fbfb43", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/88bdf4fbfb43.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/88bdf4fbfb43"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2017-01-12T22:19:35.996220+00:00", "summary": {"raw": "Solves #!/levitsky/pyteomics/issues/16/checking-of-string-inclusivity-in", "markup": "markdown", "html": "<p>Solves <a href=\"#!/levitsky/pyteomics/issues/16/checking-of-string-inclusivity-in\" rel=\"nofollow\" class=\"ap-connect-link\">#!/levitsky/pyteomics/issues/16/checking-of-string-inclusivity-in</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "d774c2850716", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/d774c2850716"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/d774c2850716"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "default"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-01-12T22:36:17.815471+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "d774c28507163c49b76f6edc12150921d99fb99f", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/d774c28507163c49b76f6edc12150921d99fb99f.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/d774c28507163c49b76f6edc12150921d99fb99f"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "* Added @_keepstate to `xml.IndexedXML.get_by_id` to resolve XMLSyntaxError\r\n    encountered during interleaved `iterparse` and `get_by_id` calls.\r\n\r\n* removed stray diagnostic code", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/10/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:e665cb024cac%0Dd09c89bf92d3?from_pullrequest_id=10"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/10/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/10.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/10/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/10/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/10"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/10/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:e665cb024cac%0Dd09c89bf92d3?from_pullrequest_id=10"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/10/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/10/statuses_page=1.json"}}, "title": "Addressing XMLSyntaxError in iterfind", "close_source_branch": false, "type": "pullrequest", "id": 10, "destination": {"commit": {"hash": "d09c89bf92d3", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/d09c89bf92d3.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/d09c89bf92d3"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2017-01-16T16:13:29.695285+00:00", "summary": {"raw": "* Added @_keepstate to `xml.IndexedXML.get_by_id` to resolve XMLSyntaxError\r\n    encountered during interleaved `iterparse` and `get_by_id` calls.\r\n\r\n* removed stray diagnostic code", "markup": "markdown", "html": "<ul>\n<li>\n<p>Added @_keepstate to <code>xml.IndexedXML.get_by_id</code> to resolve XMLSyntaxError\n    encountered during interleaved <code>iterparse</code> and <code>get_by_id</code> calls.</p>\n</li>\n<li>\n<p>removed stray diagnostic code</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "e665cb024cac", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/e665cb024cac"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/e665cb024cac"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-01-16T21:26:39.167639+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "e665cb024cac27ed7603e4ce250681b02cf2b89e", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/e665cb024cac27ed7603e4ce250681b02cf2b89e.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/e665cb024cac27ed7603e4ce250681b02cf2b89e"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "The mzML standard allows the implementer to create their own binary array types provided they are labeled with the CV term \"non-standard data array\". There can be arbitrarily many of these per spectrum. The current method for resolving the name of data arrays may decide they are all named \"non-standard data array\" and mask all but the last one.\r\n\r\nTo avoid this issue, I've added a more complex name resolution algorithm that is tries to find any name ending in \" array\" other than \"non-standard data array\", so a document that uses conforming names can still be read. Theoretically, an even more permissive algorithm could be used, but this is unusual enough as it is.\r\n\r\n* Made flattening of <binary> tags in mzML smarter about resolving multiple non-standard arrays with userParam names ending in ' array'.\r\n\r\n* Being more neat about special handling of 'binary'", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/11/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:3a8783827c0e%0De665cb024cac?from_pullrequest_id=11"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/11/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/11.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/11/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/11/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/11"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/11/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:3a8783827c0e%0De665cb024cac?from_pullrequest_id=11"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/11/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/11/statuses_page=1.json"}}, "title": "Default", "close_source_branch": false, "type": "pullrequest", "id": 11, "destination": {"commit": {"hash": "e665cb024cac", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/e665cb024cac.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/e665cb024cac"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2017-01-19T20:30:57.861463+00:00", "summary": {"raw": "The mzML standard allows the implementer to create their own binary array types provided they are labeled with the CV term \"non-standard data array\". There can be arbitrarily many of these per spectrum. The current method for resolving the name of data arrays may decide they are all named \"non-standard data array\" and mask all but the last one.\r\n\r\nTo avoid this issue, I've added a more complex name resolution algorithm that is tries to find any name ending in \" array\" other than \"non-standard data array\", so a document that uses conforming names can still be read. Theoretically, an even more permissive algorithm could be used, but this is unusual enough as it is.\r\n\r\n* Made flattening of <binary> tags in mzML smarter about resolving multiple non-standard arrays with userParam names ending in ' array'.\r\n\r\n* Being more neat about special handling of 'binary'", "markup": "markdown", "html": "<p>The mzML standard allows the implementer to create their own binary array types provided they are labeled with the CV term \"non-standard data array\". There can be arbitrarily many of these per spectrum. The current method for resolving the name of data arrays may decide they are all named \"non-standard data array\" and mask all but the last one.</p>\n<p>To avoid this issue, I've added a more complex name resolution algorithm that is tries to find any name ending in \" array\" other than \"non-standard data array\", so a document that uses conforming names can still be read. Theoretically, an even more permissive algorithm could be used, but this is unusual enough as it is.</p>\n<ul>\n<li>\n<p>Made flattening of &lt;binary&gt; tags in mzML smarter about resolving multiple non-standard arrays with userParam names ending in ' array'.</p>\n</li>\n<li>\n<p>Being more neat about special handling of 'binary'</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "3a8783827c0e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/3a8783827c0e"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/3a8783827c0e"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "default"}}, "comment_count": 3, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-01-19T21:43:36.993106+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "3a8783827c0e84a57c45dd7df16f9de148b03824", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/3a8783827c0e84a57c45dd7df16f9de148b03824.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/3a8783827c0e84a57c45dd7df16f9de148b03824"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Implements changes proposed in issue #17", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/12/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:cebccf3b4cbe%0Dddf981fcdca0?from_pullrequest_id=12"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/12/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/12.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/12/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/12/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/12"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/12/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:cebccf3b4cbe%0Dddf981fcdca0?from_pullrequest_id=12"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/12/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/12/statuses_page=1.json"}}, "title": "added preindexing scheme and tests", "close_source_branch": false, "type": "pullrequest", "id": 12, "destination": {"commit": {"hash": "ddf981fcdca0", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/ddf981fcdca0.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/ddf981fcdca0"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2017-08-25T01:44:56.870785+00:00", "summary": {"raw": "Implements changes proposed in issue #17", "markup": "markdown", "html": "<p>Implements changes proposed in issue <a href=\"#!/levitsky/pyteomics/issues/17/pre-indexing-xml-files\" rel=\"nofollow\" title=\"Pre-indexing XML Files\" class=\"ap-connect-link\"><s>#17</s></a></p>", "type": "rendered"}, "source": {"commit": {"hash": "769217396197", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/769217396197"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/769217396197"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "preindex"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-25T21:58:02.415240+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "cebccf3b4cbe", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/cebccf3b4cbe.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/cebccf3b4cbe"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "* Added optional decoding logic to MzML and MzXML\r\n\r\n* Added opt-out choice to decode mzML and mzXML and tests\r\n\r\n    Removed unused iterator code in mzxml\r\n\r\nImplements #18", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/13/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:992850cf50f6%0Dcebccf3b4cbe?from_pullrequest_id=13"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/13/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/13.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/13/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/13/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/13"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/13/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:992850cf50f6%0Dcebccf3b4cbe?from_pullrequest_id=13"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/13/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/13/statuses_page=1.json"}}, "title": "Optional Decoding", "close_source_branch": true, "type": "pullrequest", "id": 13, "destination": {"commit": {"hash": "cebccf3b4cbe", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/cebccf3b4cbe.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/cebccf3b4cbe"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2017-08-26T03:03:20.049142+00:00", "summary": {"raw": "* Added optional decoding logic to MzML and MzXML\r\n\r\n* Added opt-out choice to decode mzML and mzXML and tests\r\n\r\n    Removed unused iterator code in mzxml\r\n\r\nImplements #18", "markup": "markdown", "html": "<ul>\n<li>\n<p>Added optional decoding logic to MzML and MzXML</p>\n</li>\n<li>\n<p>Added opt-out choice to decode mzML and mzXML and tests</p>\n<p>Removed unused iterator code in mzxml</p>\n</li>\n</ul>\n<p>Implements <a href=\"#!/levitsky/pyteomics/issues/18/make-binary-array-decoding-optional\" rel=\"nofollow\" title=\"Make binary array decoding optional\" class=\"ap-connect-link\"><s>#18</s></a></p>", "type": "rendered"}, "source": {"commit": {"hash": "62c09d657955", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/62c09d657955"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/62c09d657955"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "optionaldecode"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2017-08-26T08:51:41.158907+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "992850cf50f6", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/992850cf50f6.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/992850cf50f6"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "* feature: added new interface for delaying decoding of base64 binary arrays\r\n\r\n    * Added a new mixin class in auxiliary, BinaryDataArrayTransformer\r\n      which encapsulates the process of converting a base64 bytestring\r\n      into a numpy array.\r\n      - If decoding is done immediately, the functionality is essentially\r\n        identical to previous implementation.\r\n      - If decoding is off (decode_binary=False), instead of discarding the\r\n        base64 bytestring and the associated compression information, it\r\n        creates a namedtuple which records the bytestring, the compression\r\n        type and the dtype of the encoded array, with a method to decode the\r\n        array later.\r\n      - Adapted the decompression process to permit more than just zlib compression,\r\n        supporting the addition of future decompressor implementations.\r\n    * Modified xml.ArrayConversionMixin to inherit from aux.BinaryDataArrayTransformer\r\n      which splices the class into the inheritance hierarchy for mzml.MzML and\r\n      mzxml.MzXML.\r\n    * Modified mzml.MzML to use the new BinaryDataArrayTransformer API instead of\r\n      the single call aux._decode_base64_data_array.\r\n      - Altered MzML._determine_compression to recover the compression\r\n        type as a string instead of as a boolean without information about which\r\n        compression method was used.\r\n      - Altered MzML._handle_binary to use decode_data_array when decoding arrays\r\n        and _make_record when not.\r\n    * Modified mzxml.MzXML to use the new API as in mzml.MzML.\r\n\r\n* documentation: document aux.BinaryDataArrayTransformer", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/14/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:6c6236d25e0a%0D12b94aa21cbe?from_pullrequest_id=14"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/14/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/14.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/14/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/14/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/14"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/14/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:6c6236d25e0a%0D12b94aa21cbe?from_pullrequest_id=14"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/14/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/14/statuses_page=1.json"}}, "title": "Compression factoring", "close_source_branch": true, "type": "pullrequest", "id": 14, "destination": {"commit": {"hash": "12b94aa21cbe", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/12b94aa21cbe.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/12b94aa21cbe"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2018-01-05T01:20:46.328915+00:00", "summary": {"raw": "* feature: added new interface for delaying decoding of base64 binary arrays\r\n\r\n    * Added a new mixin class in auxiliary, BinaryDataArrayTransformer\r\n      which encapsulates the process of converting a base64 bytestring\r\n      into a numpy array.\r\n      - If decoding is done immediately, the functionality is essentially\r\n        identical to previous implementation.\r\n      - If decoding is off (decode_binary=False), instead of discarding the\r\n        base64 bytestring and the associated compression information, it\r\n        creates a namedtuple which records the bytestring, the compression\r\n        type and the dtype of the encoded array, with a method to decode the\r\n        array later.\r\n      - Adapted the decompression process to permit more than just zlib compression,\r\n        supporting the addition of future decompressor implementations.\r\n    * Modified xml.ArrayConversionMixin to inherit from aux.BinaryDataArrayTransformer\r\n      which splices the class into the inheritance hierarchy for mzml.MzML and\r\n      mzxml.MzXML.\r\n    * Modified mzml.MzML to use the new BinaryDataArrayTransformer API instead of\r\n      the single call aux._decode_base64_data_array.\r\n      - Altered MzML._determine_compression to recover the compression\r\n        type as a string instead of as a boolean without information about which\r\n        compression method was used.\r\n      - Altered MzML._handle_binary to use decode_data_array when decoding arrays\r\n        and _make_record when not.\r\n    * Modified mzxml.MzXML to use the new API as in mzml.MzML.\r\n\r\n* documentation: document aux.BinaryDataArrayTransformer", "markup": "markdown", "html": "<ul>\n<li>\n<p>feature: added new interface for delaying decoding of base64 binary arrays</p>\n<ul>\n<li>Added a new mixin class in auxiliary, BinaryDataArrayTransformer\n  which encapsulates the process of converting a base64 bytestring\n  into a numpy array.</li>\n<li>If decoding is done immediately, the functionality is essentially\n    identical to previous implementation.</li>\n<li>If decoding is off (decode_binary=False), instead of discarding the\n    base64 bytestring and the associated compression information, it\n    creates a namedtuple which records the bytestring, the compression\n    type and the dtype of the encoded array, with a method to decode the\n    array later.</li>\n<li>Adapted the decompression process to permit more than just zlib compression,\n    supporting the addition of future decompressor implementations.</li>\n<li>Modified xml.ArrayConversionMixin to inherit from aux.BinaryDataArrayTransformer\n  which splices the class into the inheritance hierarchy for mzml.MzML and\n  mzxml.MzXML.</li>\n<li>Modified mzml.MzML to use the new BinaryDataArrayTransformer API instead of\n  the single call aux._decode_base64_data_array.</li>\n<li>Altered MzML._determine_compression to recover the compression\n    type as a string instead of as a boolean without information about which\n    compression method was used.</li>\n<li>Altered MzML._handle_binary to use decode_data_array when decoding arrays\n    and _make_record when not.</li>\n<li>Modified mzxml.MzXML to use the new API as in mzml.MzML.</li>\n</ul>\n</li>\n<li>\n<p>documentation: document aux.BinaryDataArrayTransformer</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "3f40bd156dbe", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/3f40bd156dbe"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/3f40bd156dbe"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "compression_factoring"}}, "comment_count": 9, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-01-24T17:35:17.048194+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "6c6236d25e0a", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/6c6236d25e0a.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/6c6236d25e0a"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "- Implemented new class `cvstr` in auxiliary.py to carry accession information on\r\n  otherwise plain old strings\r\n- Modified XML._handle_param to convert keys into cvstr instances to preserve\r\n  accession numbers\r\n- Implemented new class `CVQueryEngine` in auxiliary.py to carry out searching nested\r\n  dictionaries, lists, and tuples for cvstr instances. Either search a nested structure\r\n  for a key with a specific accession number, or create a flat dictionary whose keys are\r\n  the accession numbers for all cvstr keys in a nested structure with mapped values.\r\n- Added test case to exercise these components to test_mzml.py.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/15/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:b7fa1a4394be%0D65489a929af2?from_pullrequest_id=15"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/15/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/15.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/15/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/15/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/15"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/15/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:b7fa1a4394be%0D65489a929af2?from_pullrequest_id=15"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/15/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/15/statuses_page=1.json"}}, "title": "Preserve accession information on cvParam elements converted into dict keys", "close_source_branch": false, "type": "pullrequest", "id": 15, "destination": {"commit": {"hash": "65489a929af2", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/65489a929af2.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/65489a929af2"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2018-02-26T23:03:47.440260+00:00", "summary": {"raw": "- Implemented new class `cvstr` in auxiliary.py to carry accession information on\r\n  otherwise plain old strings\r\n- Modified XML._handle_param to convert keys into cvstr instances to preserve\r\n  accession numbers\r\n- Implemented new class `CVQueryEngine` in auxiliary.py to carry out searching nested\r\n  dictionaries, lists, and tuples for cvstr instances. Either search a nested structure\r\n  for a key with a specific accession number, or create a flat dictionary whose keys are\r\n  the accession numbers for all cvstr keys in a nested structure with mapped values.\r\n- Added test case to exercise these components to test_mzml.py.", "markup": "markdown", "html": "<ul>\n<li>Implemented new class <code>cvstr</code> in auxiliary.py to carry accession information on\n  otherwise plain old strings</li>\n<li>Modified XML._handle_param to convert keys into cvstr instances to preserve\n  accession numbers</li>\n<li>Implemented new class <code>CVQueryEngine</code> in auxiliary.py to carry out searching nested\n  dictionaries, lists, and tuples for cvstr instances. Either search a nested structure\n  for a key with a specific accession number, or create a flat dictionary whose keys are\n  the accession numbers for all cvstr keys in a nested structure with mapped values.</li>\n<li>Added test case to exercise these components to test_mzml.py.</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "b7fa1a4394be", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/b7fa1a4394be"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/b7fa1a4394be"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "default"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-02-27T20:15:37.019036+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "b7fa1a4394be", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/b7fa1a4394be.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/b7fa1a4394be"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "* Added case to CVQueryEngine's traversal to check values for CV accession numbers\r\n\r\n* If CVQueryEngine detects an empty value string, store the key instead\r\n\r\n* Corrected IndexSavingXML._build_index try-except to allow\r\n    it to read from file-like objects without a name attribute.\r\n\r\n* Added test case to demonstrate that CVQueryEngine.index properly\r\n    unfolds nested dictionaries.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/16/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:4edb51121008%0D9c424fec6061?from_pullrequest_id=16"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/16/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/16.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/16/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/16/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/16"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/16/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:4edb51121008%0D9c424fec6061?from_pullrequest_id=16"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/16/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/16/statuses_page=1.json"}}, "title": "CVQueryEngine Flattening Revision", "close_source_branch": false, "type": "pullrequest", "id": 16, "destination": {"commit": {"hash": "9c424fec6061", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/9c424fec6061.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/9c424fec6061"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2018-03-14T17:08:27.635964+00:00", "summary": {"raw": "* Added case to CVQueryEngine's traversal to check values for CV accession numbers\r\n\r\n* If CVQueryEngine detects an empty value string, store the key instead\r\n\r\n* Corrected IndexSavingXML._build_index try-except to allow\r\n    it to read from file-like objects without a name attribute.\r\n\r\n* Added test case to demonstrate that CVQueryEngine.index properly\r\n    unfolds nested dictionaries.", "markup": "markdown", "html": "<ul>\n<li>\n<p>Added case to CVQueryEngine's traversal to check values for CV accession numbers</p>\n</li>\n<li>\n<p>If CVQueryEngine detects an empty value string, store the key instead</p>\n</li>\n<li>\n<p>Corrected IndexSavingXML._build_index try-except to allow\n    it to read from file-like objects without a name attribute.</p>\n</li>\n<li>\n<p>Added test case to demonstrate that CVQueryEngine.index properly\n    unfolds nested dictionaries.</p>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "4edb51121008", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/4edb51121008"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/4edb51121008"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-03-14T18:43:57.655779+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "4edb51121008", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/4edb51121008.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/4edb51121008"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "* Refactored auxiliary.py splitting module into several submodules.\r\n\r\nAll existing unit tests are passing with the new splitting up.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/17/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:ea4ea4995a12%0Dcdc8f19d51de?from_pullrequest_id=17"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/17/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/17.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/17/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/17/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/17"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/17/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:ea4ea4995a12%0Dcdc8f19d51de?from_pullrequest_id=17"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/17/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/17/statuses_page=1.json"}}, "title": "Refactor aux", "close_source_branch": true, "type": "pullrequest", "id": 17, "destination": {"commit": {"hash": "cdc8f19d51de", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/cdc8f19d51de.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/cdc8f19d51de"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2018-05-04T20:07:32.366224+00:00", "summary": {"raw": "* Refactored auxiliary.py splitting module into several submodules.\r\n\r\nAll existing unit tests are passing with the new splitting up.", "markup": "markdown", "html": "<ul>\n<li>Refactored auxiliary.py splitting module into several submodules.</li>\n</ul>\n<p>All existing unit tests are passing with the new splitting up.</p>", "type": "rendered"}, "source": {"commit": {"hash": "482db3014244", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/482db3014244"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/482db3014244"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "refactor-aux"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-05-10T07:59:47.024085+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "ea4ea4995a12", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/ea4ea4995a12.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/ea4ea4995a12"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Default implementation now mirrors the `MzIdentML` implementation,\r\nwarning when it encounters an undefined reference.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/18/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:c09322142a2d%0Dbb94d1353d72?from_pullrequest_id=18"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/18/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/18"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:c09322142a2d%0Dbb94d1353d72?from_pullrequest_id=18"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/18/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/18/statuses_page=1.json"}}, "title": "Re-add missing `_retrieve_refs` method to `XML`.", "close_source_branch": true, "type": "pullrequest", "id": 18, "destination": {"commit": {"hash": "bb94d1353d72", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/bb94d1353d72.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/bb94d1353d72"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2018-05-21T13:58:31.865802+00:00", "summary": {"raw": "Default implementation now mirrors the `MzIdentML` implementation,\r\nwarning when it encounters an undefined reference.", "markup": "markdown", "html": "<p>Default implementation now mirrors the <code>MzIdentML</code> implementation,\nwarning when it encounters an undefined reference.</p>", "type": "rendered"}, "source": {"commit": {"hash": "11ecd7da254d", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/11ecd7da254d"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/11ecd7da254d"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "xml_retrieve_refs"}}, "comment_count": 13, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-05-21T15:35:23.301193+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "c09322142a2d", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/c09322142a2d.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/c09322142a2d"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/19/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:a12878678a39%0D405a97a26cae?from_pullrequest_id=19"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/19/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/19.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/19/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/19/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/19"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/19/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:a12878678a39%0D405a97a26cae?from_pullrequest_id=19"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/19/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/19/statuses_page=1.json"}}, "title": "Let IndexSavingXML handle file-like objects which aren't actual files with a \"name\" attribute.", "close_source_branch": true, "type": "pullrequest", "id": 19, "destination": {"commit": {"hash": "405a97a26cae", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/405a97a26cae.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/405a97a26cae"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2018-06-16T20:33:03.800024+00:00", "summary": {"raw": "", "markup": "markdown", "html": "", "type": "rendered"}, "source": {"commit": {"hash": "7f3c75f622c3", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/7f3c75f622c3"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/7f3c75f622c3"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "file_like_object_fix"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-06-16T21:06:52.020447+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "a12878678a39", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/a12878678a39.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/a12878678a39"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Made `_file_obj`, `IteratorContextManager` and the `XML` parsers picklable.\r\n\r\nRequires the third-party library `dill` to pickle readers created from file-like objects, but when parser initialized from a path, `_file_obj` will pickle with the builtin serializer.\r\n\r\nImplemented suitable `__reduce_ex__` methods to override fetching the default file object's method. \r\n\r\nAdded `__getstate__` and `__setstate__` methods along the related class hierarchies to to properly configure instances post-reconstruction.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/20/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:5b90de7c2e34%0D057e1dfbc1c7?from_pullrequest_id=20"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/20/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/20.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/20/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/20/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/20"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/20/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:5b90de7c2e34%0D057e1dfbc1c7?from_pullrequest_id=20"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/20/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/20/statuses_page=1.json"}}, "title": "File object pickle", "close_source_branch": true, "type": "pullrequest", "id": 20, "destination": {"commit": {"hash": "057e1dfbc1c7", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/057e1dfbc1c7.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/057e1dfbc1c7"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2018-08-05T03:56:39.099508+00:00", "summary": {"raw": "Made `_file_obj`, `IteratorContextManager` and the `XML` parsers picklable.\r\n\r\nRequires the third-party library `dill` to pickle readers created from file-like objects, but when parser initialized from a path, `_file_obj` will pickle with the builtin serializer.\r\n\r\nImplemented suitable `__reduce_ex__` methods to override fetching the default file object's method. \r\n\r\nAdded `__getstate__` and `__setstate__` methods along the related class hierarchies to to properly configure instances post-reconstruction.", "markup": "markdown", "html": "<p>Made <code>_file_obj</code>, <code>IteratorContextManager</code> and the <code>XML</code> parsers picklable.</p>\n<p>Requires the third-party library <code>dill</code> to pickle readers created from file-like objects, but when parser initialized from a path, <code>_file_obj</code> will pickle with the builtin serializer.</p>\n<p>Implemented suitable <code>__reduce_ex__</code> methods to override fetching the default file object's method. </p>\n<p>Added <code>__getstate__</code> and <code>__setstate__</code> methods along the related class hierarchies to to properly configure instances post-reconstruction.</p>", "type": "rendered"}, "source": {"commit": {"hash": "0d9e4f111b7f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/0d9e4f111b7f"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/0d9e4f111b7f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "file_object_pickle"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-08-06T20:59:28.650321+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "5b90de7c2e34", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/5b90de7c2e34.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/5b90de7c2e34"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "The regex for pepsin1.3 and pepsin2.0 appear to be swapped. According to Exapsy, pH 1.3 leads to a higher specificity which is lost at pH > 2.\r\n\r\n> Pepsin preferentially cleaves at Phe, Tyr, Trp and Leu in position P1 or P1'\\([Keil, 1992](https://web.expasy.org/peptide_cutter/peptidecutter_references.html#Keil1992)\\). Negative effects on cleavage are excerted by Arg, Lys and His in position P3 and Arg in position P1. Pro has favourable effects when being located in position P4 and position P3, but unfavourable ones when found in positions P2 to P3'. Cleavage is more specific at pH 1.3. Then pepsin preferentially cleaves at Phe and Leu in position P1 with negligible cleavage for all other amino acids in this position. This specificity is lost at pH >= 2.\r\n\r\nThis is demonstrated with the following sequence: MAEVPELASEMMAYYSGNEDDLFFEADGPKQMKCSF\r\n\r\n![](data/bitbucket.org/repo/gk4e6pK/images/2488770732-regex_comparison.jpeg)\r\nOn the left is the sequence being cleaved by pepsin2.0 in Expasy PeptideCutter, and on the right is the current regex for pepsin1.3.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/21/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:135a91c60665%0D5b90de7c2e34?from_pullrequest_id=21"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/21/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/21.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/21/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/21/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/21"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/21/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:135a91c60665%0D5b90de7c2e34?from_pullrequest_id=21"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/21/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/21/statuses_page=1.json"}}, "title": "Updating Pepsin Regex", "close_source_branch": false, "type": "pullrequest", "id": 21, "destination": {"commit": {"hash": "5b90de7c2e34", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/5b90de7c2e34.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/5b90de7c2e34"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2018-08-28T18:51:40.466095+00:00", "summary": {"raw": "The regex for pepsin1.3 and pepsin2.0 appear to be swapped. According to Exapsy, pH 1.3 leads to a higher specificity which is lost at pH > 2.\r\n\r\n> Pepsin preferentially cleaves at Phe, Tyr, Trp and Leu in position P1 or P1'\\([Keil, 1992](https://web.expasy.org/peptide_cutter/peptidecutter_references.html#Keil1992)\\). Negative effects on cleavage are excerted by Arg, Lys and His in position P3 and Arg in position P1. Pro has favourable effects when being located in position P4 and position P3, but unfavourable ones when found in positions P2 to P3'. Cleavage is more specific at pH 1.3. Then pepsin preferentially cleaves at Phe and Leu in position P1 with negligible cleavage for all other amino acids in this position. This specificity is lost at pH >= 2.\r\n\r\nThis is demonstrated with the following sequence: MAEVPELASEMMAYYSGNEDDLFFEADGPKQMKCSF\r\n\r\n![](data/bitbucket.org/repo/gk4e6pK/images/2488770732-regex_comparison.jpeg)\r\nOn the left is the sequence being cleaved by pepsin2.0 in Expasy PeptideCutter, and on the right is the current regex for pepsin1.3.", "markup": "markdown", "html": "<p>The regex for pepsin1.3 and pepsin2.0 appear to be swapped. According to Exapsy, pH 1.3 leads to a higher specificity which is lost at pH &gt; 2.</p>\n<blockquote>\n<p>Pepsin preferentially cleaves at Phe, Tyr, Trp and Leu in position P1 or P1'(<a data-is-external-link=\"true\" href=\"https://web.expasy.org/peptide_cutter/peptidecutter_references.html#Keil1992\" rel=\"nofollow\">Keil, 1992</a>). Negative effects on cleavage are excerted by Arg, Lys and His in position P3 and Arg in position P1. Pro has favourable effects when being located in position P4 and position P3, but unfavourable ones when found in positions P2 to P3'. Cleavage is more specific at pH 1.3. Then pepsin preferentially cleaves at Phe and Leu in position P1 with negligible cleavage for all other amino acids in this position. This specificity is lost at pH &gt;= 2.</p>\n</blockquote>\n<p>This is demonstrated with the following sequence: MAEVPELASEMMAYYSGNEDDLFFEADGPKQMKCSF</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/gk4e6pK/images/2488770732-regex_comparison.jpeg\" />\nOn the left is the sequence being cleaved by pepsin2.0 in Expasy PeptideCutter, and on the right is the current regex for pepsin1.3.</p>", "type": "rendered"}, "source": {"commit": {"hash": "135a91c60665", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/emptyport/pyteomics/commit/135a91c60665"}, "html": {"href": "https://bitbucket.org/emptyport/pyteomics/commits/135a91c60665"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/emptyport/pyteomics"}, "html": {"href": "https://bitbucket.org/emptyport/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b74706e0-c56a-41a8-a963-d92528f9fe5f}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "emptyport/pyteomics", "uuid": "{b74706e0-c56a-41a8-a963-d92528f9fe5f}"}, "branch": {"name": "default"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-08-29T19:35:41.180371+00:00", "author": {"display_name": "Michael Porter", "uuid": "{d53a37b9-7f80-4d0b-b11f-9b175fa0ef65}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd53a37b9-7f80-4d0b-b11f-9b175fa0ef65%7D"}, "html": {"href": "https://bitbucket.org/%7Bd53a37b9-7f80-4d0b-b11f-9b175fa0ef65%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5b859343d043fc2a665e69fd/7a125c3b-c973-4314-8002-cb40cf43da0f/128"}}, "nickname": "emptyport", "type": "user", "account_id": "5b859343d043fc2a665e69fd"}, "merge_commit": {"hash": "135a91c60665", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/135a91c60665.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/135a91c60665"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Unified XML Indexing to use hierarchical index between IndexedXML, IndexSavingXML, and PreIndexedMzML, so MultiProcessingXML does not need its own index.\r\n\r\nRestore using super\\(\\) in MzML and MzXML", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/22/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:ab92a9907024%0Df6114de292d4?from_pullrequest_id=22"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/22/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/22.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/22/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/22/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/22"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/22/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:ab92a9907024%0Df6114de292d4?from_pullrequest_id=22"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/22/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/22/statuses_page=1.json"}}, "title": "Unified XML Indexing to use Hierarchical Index", "close_source_branch": false, "type": "pullrequest", "id": 22, "destination": {"commit": {"hash": "f6114de292d4", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/f6114de292d4.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/f6114de292d4"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "4.0"}}, "created_on": "2018-08-31T01:14:10.361612+00:00", "summary": {"raw": "Unified XML Indexing to use hierarchical index between IndexedXML, IndexSavingXML, and PreIndexedMzML, so MultiProcessingXML does not need its own index.\r\n\r\nRestore using super\\(\\) in MzML and MzXML", "markup": "markdown", "html": "<p>Unified XML Indexing to use hierarchical index between IndexedXML, IndexSavingXML, and PreIndexedMzML, so MultiProcessingXML does not need its own index.</p>\n<p>Restore using super() in MzML and MzXML</p>", "type": "rendered"}, "source": {"commit": {"hash": "ab92a9907024", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/ab92a9907024"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/ab92a9907024"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "4.0"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-08-31T14:40:49.368582+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "ab92a9907024", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/ab92a9907024.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/ab92a9907024"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "`MzML._determine_array_dtype` currently assumes that the array is either a 32-bit float or a 64-bit float, and treats anything else as a 64-bit float. This PR makes `MzML._determine_array_dtype` aware of the other three data types, integers and null-terminated strings.\r\n\r\nCharge arrays are required to be 32-bit integers. I\u2019ve never seen 64-bit integer or null-terminated strings, but they\u2019re in the spec for non-standard array types.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/23/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:bf2a0bdce79c%0D135a91c60665?from_pullrequest_id=23"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/23/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/23.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/23/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/23/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/23"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/23/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:bf2a0bdce79c%0D135a91c60665?from_pullrequest_id=23"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/23/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/23/statuses_page=1.json"}}, "title": "Update MzML._determine_array_dtype to handle the full set of \"binary data type\" terms", "close_source_branch": true, "type": "pullrequest", "id": 23, "destination": {"commit": {"hash": "135a91c60665", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/135a91c60665.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/135a91c60665"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2018-09-01T14:16:04.847023+00:00", "summary": {"raw": "`MzML._determine_array_dtype` currently assumes that the array is either a 32-bit float or a 64-bit float, and treats anything else as a 64-bit float. This PR makes `MzML._determine_array_dtype` aware of the other three data types, integers and null-terminated strings.\r\n\r\nCharge arrays are required to be 32-bit integers. I\u2019ve never seen 64-bit integer or null-terminated strings, but they\u2019re in the spec for non-standard array types.", "markup": "markdown", "html": "<p><code>MzML._determine_array_dtype</code> currently assumes that the array is either a 32-bit float or a 64-bit float, and treats anything else as a 64-bit float. This PR makes <code>MzML._determine_array_dtype</code> aware of the other three data types, integers and null-terminated strings.</p>\n<p>Charge arrays are required to be 32-bit integers. I\u2019ve never seen 64-bit integer or null-terminated strings, but they\u2019re in the spec for non-standard array types.</p>", "type": "rendered"}, "source": {"commit": {"hash": "8ad0ea523ee6", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/8ad0ea523ee6"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/8ad0ea523ee6"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "mzml-array-dtypes"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-09-01T14:43:55.894822+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "bf2a0bdce79c", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/bf2a0bdce79c.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/bf2a0bdce79c"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Implement a simple PEFF parser that doesn't extract the file header block.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/24/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:155402d30470%0Dab92a9907024?from_pullrequest_id=24"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/24/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/24.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/24/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/24/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/24"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/24/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:155402d30470%0Dab92a9907024?from_pullrequest_id=24"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/24/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/24/statuses_page=1.json"}}, "title": "Implement a simple PEFF parser", "close_source_branch": false, "type": "pullrequest", "id": 24, "destination": {"commit": {"hash": "ab92a9907024", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/ab92a9907024.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/ab92a9907024"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "4.0"}}, "created_on": "2018-09-01T22:12:10.676380+00:00", "summary": {"raw": "Implement a simple PEFF parser that doesn't extract the file header block.", "markup": "markdown", "html": "<p>Implement a simple PEFF parser that doesn't extract the file header block.</p>", "type": "rendered"}, "source": {"commit": {"hash": "155402d30470", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/155402d30470"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/155402d30470"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "4.0"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-09-02T11:58:44.405130+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "155402d30470", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/155402d30470.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/155402d30470"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "* fix: Make unimod formula parsers reliably work on all Python versions\r\n* fix: Adapt mzid\\_spectra to match new \\_handle\\_param policy for missing values\r\n* feature: Made the offset index a part of the Indexed reader interface\r\n\r\n    1. Refactored \\_offset\\_index to be of a type that consistently provides a `find` method\r\n    2. Made `.index` a property on all Indexed readers that returns the offset index", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/25/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:06f3ede59930%0D3ff1d5dd257c?from_pullrequest_id=25"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/25/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/25.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/25/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/25/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/25"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/25/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:06f3ede59930%0D3ff1d5dd257c?from_pullrequest_id=25"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/25/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/25/statuses_page=1.json"}}, "title": "Update for 4.0", "close_source_branch": false, "type": "pullrequest", "id": 25, "destination": {"commit": {"hash": "3ff1d5dd257c", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/3ff1d5dd257c.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/3ff1d5dd257c"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "4.0"}}, "created_on": "2018-09-13T15:59:31.115525+00:00", "summary": {"raw": "* fix: Make unimod formula parsers reliably work on all Python versions\r\n* fix: Adapt mzid\\_spectra to match new \\_handle\\_param policy for missing values\r\n* feature: Made the offset index a part of the Indexed reader interface\r\n\r\n    1. Refactored \\_offset\\_index to be of a type that consistently provides a `find` method\r\n    2. Made `.index` a property on all Indexed readers that returns the offset index", "markup": "markdown", "html": "<ul>\n<li>fix: Make unimod formula parsers reliably work on all Python versions</li>\n<li>fix: Adapt mzid_spectra to match new _handle_param policy for missing values</li>\n<li>\n<p>feature: Made the offset index a part of the Indexed reader interface</p>\n<ol>\n<li>Refactored _offset_index to be of a type that consistently provides a <code>find</code> method</li>\n<li>Made <code>.index</code> a property on all Indexed readers that returns the offset index</li>\n</ol>\n</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "06f3ede59930", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/06f3ede59930"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/06f3ede59930"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "4.0"}}, "comment_count": 35, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-09-17T19:16:23.099944+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "06f3ede59930", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/06f3ede59930.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/06f3ede59930"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Hello! Thought I might put this up as a suggestion. UniProt's fasta archives include `>` characters in some of protein descriptions. Thought it might be useful if the default supported this.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/26/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:6eaa3e2a0a38%0D8554a1ab3285?from_pullrequest_id=26"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/26/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/26.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/26/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/26/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/26"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/26/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:6eaa3e2a0a38%0D8554a1ab3285?from_pullrequest_id=26"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/26/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/26/statuses_page=1.json"}}, "title": "Speters cmri/change default fasta delimiter and label 1538970450764", "close_source_branch": false, "type": "pullrequest", "id": 26, "destination": {"commit": {"hash": "8554a1ab3285", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/8554a1ab3285.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/8554a1ab3285"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "4.0"}}, "created_on": "2018-10-08T05:12:08.939063+00:00", "summary": {"raw": "Hello! Thought I might put this up as a suggestion. UniProt's fasta archives include `>` characters in some of protein descriptions. Thought it might be useful if the default supported this.", "markup": "markdown", "html": "<p>Hello! Thought I might put this up as a suggestion. UniProt's fasta archives include <code>&gt;</code> characters in some of protein descriptions. Thought it might be useful if the default supported this.</p>", "type": "rendered"}, "source": {"commit": {"hash": "6f73aa3d7b41", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/speters-cmri/pyteomics/commit/6f73aa3d7b41"}, "html": {"href": "https://bitbucket.org/speters-cmri/pyteomics/commits/6f73aa3d7b41"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/speters-cmri/pyteomics"}, "html": {"href": "https://bitbucket.org/speters-cmri/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b3a7331f-e6db-4c55-a879-662f88653535}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "speters-cmri/pyteomics", "uuid": "{b3a7331f-e6db-4c55-a879-662f88653535}"}, "branch": {"name": "speters-cmri/change-default-fasta-delimiter-and-label-1538970450764"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-10-08T15:24:46.130771+00:00", "author": {"display_name": "Sean Peters", "uuid": "{6feaff67-c326-4462-be3a-c4f10ed910ec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B6feaff67-c326-4462-be3a-c4f10ed910ec%7D"}, "html": {"href": "https://bitbucket.org/%7B6feaff67-c326-4462-be3a-c4f10ed910ec%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5af8df07395567110d1bd17c/49d3e363-f517-4cfd-9296-8dff4f082eb6/128"}}, "nickname": "Sean Peters", "type": "user", "account_id": "5af8df07395567110d1bd17c"}, "merge_commit": {"hash": "6eaa3e2a0a38", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/6eaa3e2a0a38.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/6eaa3e2a0a38"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "see [#!/levitsky/pyteomics/issues/34/parser-fails-on-numbers-in-modx-sequence](#!/levitsky/pyteomics/issues/34/parser-fails-on-numbers-in-modx-sequence)", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/27/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/lkolbowski/pyteomics:c999985082a9%0D436c45a1208f?from_pullrequest_id=27"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/27/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/27.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/27/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/27/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/27"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/27/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/lkolbowski/pyteomics:c999985082a9%0D436c45a1208f?from_pullrequest_id=27"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/27/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/27/statuses_page=1.json"}}, "title": "add symbol and number support for modifications in modX syntax", "close_source_branch": false, "type": "pullrequest", "id": 27, "destination": {"commit": {"hash": "436c45a1208f", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/436c45a1208f.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/436c45a1208f"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2018-11-13T14:44:54.793010+00:00", "summary": {"raw": "see [#!/levitsky/pyteomics/issues/34/parser-fails-on-numbers-in-modx-sequence](#!/levitsky/pyteomics/issues/34/parser-fails-on-numbers-in-modx-sequence)", "markup": "markdown", "html": "<p>see <a data-is-external-link=\"true\" href=\"#!/levitsky/pyteomics/issues/34/parser-fails-on-numbers-in-modx-sequence\" rel=\"nofollow\">#!/levitsky/pyteomics/issues/34/parser-fails-on-numbers-in-modx-sequence</a></p>", "type": "rendered"}, "source": {"commit": {"hash": "c999985082a9", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/lkolbowski/pyteomics/commit/c999985082a9"}, "html": {"href": "https://bitbucket.org/lkolbowski/pyteomics/commits/c999985082a9"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/lkolbowski/pyteomics"}, "html": {"href": "https://bitbucket.org/lkolbowski/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{82d43cb8-5b53-42da-8423-b611b050a51a}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "lkolbowski/pyteomics", "uuid": "{82d43cb8-5b53-42da-8423-b611b050a51a}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "DECLINED", "task_count": 0, "reason": "Fixed for version 4.0 in 6af434b.\r\nThank you!", "updated_on": "2018-11-13T18:18:57.856919+00:00", "author": {"display_name": "Lars Kolbowski", "uuid": "{fc1df402-e755-41a0-b5a6-d80421a2af72}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bfc1df402-e755-41a0-b5a6-d80421a2af72%7D"}, "html": {"href": "https://bitbucket.org/%7Bfc1df402-e755-41a0-b5a6-d80421a2af72%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/5bc99e3bd64558662e6d627e/dab57bdc-7f90-48ff-9610-606fbf956a58/128"}}, "nickname": "Lars Kolbowski", "type": "user", "account_id": "5bc99e3bd64558662e6d627e"}, "merge_commit": null, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Implemented a `Iterfind` type for iterfind that provides the `TaskMappingMixin` API\r\n\r\n* Moved the implementation of `XML.iterfind` into `XML._iterfind_impl` that `XML.iterfind` will call. It will soon return `Iterfind` objects instead.\r\n* Documnted the `TaskMappingMixin.map` method\r\n* feature:Integrate `Iterfind` into `XML.iterfind`", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/28/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:71775d41704e%0D6af434bde9f6?from_pullrequest_id=28"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/28/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/28.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/28/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/28/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/28"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/28/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:71775d41704e%0D6af434bde9f6?from_pullrequest_id=28"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/28/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/28/statuses_page=1.json"}}, "title": "Iterfind wrappers", "close_source_branch": false, "type": "pullrequest", "id": 28, "destination": {"commit": {"hash": "6af434bde9f6", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/6af434bde9f6.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/6af434bde9f6"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "4.0"}}, "created_on": "2018-12-08T23:31:05.263672+00:00", "summary": {"raw": "Implemented a `Iterfind` type for iterfind that provides the `TaskMappingMixin` API\r\n\r\n* Moved the implementation of `XML.iterfind` into `XML._iterfind_impl` that `XML.iterfind` will call. It will soon return `Iterfind` objects instead.\r\n* Documnted the `TaskMappingMixin.map` method\r\n* feature:Integrate `Iterfind` into `XML.iterfind`", "markup": "markdown", "html": "<p>Implemented a <code>Iterfind</code> type for iterfind that provides the <code>TaskMappingMixin</code> API</p>\n<ul>\n<li>Moved the implementation of <code>XML.iterfind</code> into <code>XML._iterfind_impl</code> that <code>XML.iterfind</code> will call. It will soon return <code>Iterfind</code> objects instead.</li>\n<li>Documnted the <code>TaskMappingMixin.map</code> method</li>\n<li>feature:Integrate <code>Iterfind</code> into <code>XML.iterfind</code></li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "71775d41704e", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/71775d41704e"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/71775d41704e"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "4.0"}}, "comment_count": 8, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-12-10T22:37:45.452100+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "71775d41704e", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/71775d41704e.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/71775d41704e"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Added TraML reader.\u00a0Started to adapt filter and chain", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/29/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:6e9d533709fc%0D96a49f190ed6?from_pullrequest_id=29"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/29/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/29.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/29/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/29/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/29"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/29/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:6e9d533709fc%0D96a49f190ed6?from_pullrequest_id=29"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/29/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/29/statuses_page=1.json"}}, "title": "TraML", "close_source_branch": false, "type": "pullrequest", "id": 29, "destination": {"commit": {"hash": "96a49f190ed6", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/96a49f190ed6.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/96a49f190ed6"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "4.0"}}, "created_on": "2018-12-17T19:30:07.808021+00:00", "summary": {"raw": "Added TraML reader.\u00a0Started to adapt filter and chain", "markup": "markdown", "html": "<p>Added TraML reader.\u00a0Started to adapt filter and chain</p>", "type": "rendered"}, "source": {"commit": {"hash": "6e9d533709fc", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/6e9d533709fc"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/6e9d533709fc"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "4.0"}}, "comment_count": 2, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2018-12-18T16:38:21.936896+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "6e9d533709fc", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/6e9d533709fc.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/6e9d533709fc"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Rewrote `XML._handle_param` to return a namedtuple `xml._XMLParam` to carry more information, and to make the structure more consistent.\r\n\r\nEncapsulated the process of adding a \\*Param tag's data into a function \\(`XML._insert_param`\\) and rewrote it to handle `xml._XMLParam` instead of a raw `dict`.\r\n\r\nBetter handle cases where `recursive=False` but the current element contains \\*Param tags that are relevant, with `XML._find_immediate_params`.\r\n\r\n---\r\n\r\nThis also includes a new configuration variable for testing, `XML._promote_empty_param_to_name` to cause elements which contain only one parameter child which has no value will also have its value written to the name key, e.g. `info[\"name\"] = param.name`. It's set to `False` currently because it will involve destructively updating the test case data, but I think you might want to test with it enabled to see if you think it\u2019s worth the duplication.\r\n\r\n---\r\n\r\nFix: Remove patching of warnings module internals from `mzid` as it caused tests to fail.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/30/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:99950bd1a72c%0Dbc45c900a3cc?from_pullrequest_id=30"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/30/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/30"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:99950bd1a72c%0Dbc45c900a3cc?from_pullrequest_id=30"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/30/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/30/statuses_page=1.json"}}, "title": "Feature: Implement XML parameter repackaging for detecting empty parameters", "close_source_branch": false, "type": "pullrequest", "id": 30, "destination": {"commit": {"hash": "bc45c900a3cc", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/bc45c900a3cc.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/bc45c900a3cc"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "4.0"}}, "created_on": "2018-12-29T19:50:30.727533+00:00", "summary": {"raw": "Rewrote `XML._handle_param` to return a namedtuple `xml._XMLParam` to carry more information, and to make the structure more consistent.\r\n\r\nEncapsulated the process of adding a \\*Param tag's data into a function \\(`XML._insert_param`\\) and rewrote it to handle `xml._XMLParam` instead of a raw `dict`.\r\n\r\nBetter handle cases where `recursive=False` but the current element contains \\*Param tags that are relevant, with `XML._find_immediate_params`.\r\n\r\n---\r\n\r\nThis also includes a new configuration variable for testing, `XML._promote_empty_param_to_name` to cause elements which contain only one parameter child which has no value will also have its value written to the name key, e.g. `info[\"name\"] = param.name`. It's set to `False` currently because it will involve destructively updating the test case data, but I think you might want to test with it enabled to see if you think it\u2019s worth the duplication.\r\n\r\n---\r\n\r\nFix: Remove patching of warnings module internals from `mzid` as it caused tests to fail.", "markup": "markdown", "html": "<p>Rewrote <code>XML._handle_param</code> to return a namedtuple <code>xml._XMLParam</code> to carry more information, and to make the structure more consistent.</p>\n<p>Encapsulated the process of adding a *Param tag's data into a function (<code>XML._insert_param</code>) and rewrote it to handle <code>xml._XMLParam</code> instead of a raw <code>dict</code>.</p>\n<p>Better handle cases where <code>recursive=False</code> but the current element contains *Param tags that are relevant, with <code>XML._find_immediate_params</code>.</p>\n<hr />\n<p>This also includes a new configuration variable for testing, <code>XML._promote_empty_param_to_name</code> to cause elements which contain only one parameter child which has no value will also have its value written to the name key, e.g. <code>info[\"name\"] = param.name</code>. It's set to <code>False</code> currently because it will involve destructively updating the test case data, but I think you might want to test with it enabled to see if you think it\u2019s worth the duplication.</p>\n<hr />\n<p>Fix: Remove patching of warnings module internals from <code>mzid</code> as it caused tests to fail.</p>", "type": "rendered"}, "source": {"commit": {"hash": "99950bd1a72c", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/99950bd1a72c"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/99950bd1a72c"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "4.0"}}, "comment_count": 16, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-01-03T22:06:01.665924+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "99950bd1a72c", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/99950bd1a72c.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/99950bd1a72c"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "This change set added some functions to make sure a byte offset index will be loaded into an `OrderedDict` object instead of first loading into an unsorted `dict` and then turned into an `OrderedDict` later.\r\n\r\nThis didn't come up during development because I wrote this component using Python 3.6, where `dict`'s order is preserved. Why it worked consistently for me on Python 2.7 too is not obvious though.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/31/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:464958a101cf%0De0019130906f?from_pullrequest_id=31"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/31/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/31.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/31/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/31/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/31"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/31/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:464958a101cf%0De0019130906f?from_pullrequest_id=31"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/31/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/31/statuses_page=1.json"}}, "title": "fix:Ensure deserialized byte offset indices are sorted", "close_source_branch": false, "type": "pullrequest", "id": 31, "destination": {"commit": {"hash": "e0019130906f", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/e0019130906f.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/e0019130906f"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2019-01-07T11:34:48.716153+00:00", "summary": {"raw": "This change set added some functions to make sure a byte offset index will be loaded into an `OrderedDict` object instead of first loading into an unsorted `dict` and then turned into an `OrderedDict` later.\r\n\r\nThis didn't come up during development because I wrote this component using Python 3.6, where `dict`'s order is preserved. Why it worked consistently for me on Python 2.7 too is not obvious though.", "markup": "markdown", "html": "<p>This change set added some functions to make sure a byte offset index will be loaded into an <code>OrderedDict</code> object instead of first loading into an unsorted <code>dict</code> and then turned into an <code>OrderedDict</code> later.</p>\n<p>This didn't come up during development because I wrote this component using Python 3.6, where <code>dict</code>'s order is preserved. Why it worked consistently for me on Python 2.7 too is not obvious though.</p>", "type": "rendered"}, "source": {"commit": {"hash": "464958a101cf", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/464958a101cf"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/464958a101cf"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "default"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-01-07T11:47:12.418884+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "464958a101cf", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/464958a101cf.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/464958a101cf"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "I was playing with a search engine which didn\u2019t support any standard formats other than mzTab and no parsers were available in Python, so I wrote one.\r\n\r\nThere is too much specialized behavior at this point. The format is a series of TSVs concatenated together with a shared metadata header. This will pull the data out into their own respective tables, apply some rudimentary type coercion, and then pack them into `pd.DataFrame` objects.\r\n\r\nAs tables go, they\u2019re far from compact, but that is the cost of not nesting structures. I do have a routine in there to re-nest some features, but it defeats the purpose. \r\n\r\nIf the code itself is acceptable, I\u2019ll write the docs for it as well.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/32/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:384c77c2ae15%0D499af497bc0a?from_pullrequest_id=32"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/32/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/32"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:384c77c2ae15%0D499af497bc0a?from_pullrequest_id=32"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/32/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/32/statuses_page=1.json"}}, "title": "mzTab Parser", "close_source_branch": true, "type": "pullrequest", "id": 32, "destination": {"commit": {"hash": "499af497bc0a", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/499af497bc0a.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/499af497bc0a"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2019-01-10T20:27:07.184534+00:00", "summary": {"raw": "I was playing with a search engine which didn\u2019t support any standard formats other than mzTab and no parsers were available in Python, so I wrote one.\r\n\r\nThere is too much specialized behavior at this point. The format is a series of TSVs concatenated together with a shared metadata header. This will pull the data out into their own respective tables, apply some rudimentary type coercion, and then pack them into `pd.DataFrame` objects.\r\n\r\nAs tables go, they\u2019re far from compact, but that is the cost of not nesting structures. I do have a routine in there to re-nest some features, but it defeats the purpose. \r\n\r\nIf the code itself is acceptable, I\u2019ll write the docs for it as well.", "markup": "markdown", "html": "<p>I was playing with a search engine which didn\u2019t support any standard formats other than mzTab and no parsers were available in Python, so I wrote one.</p>\n<p>There is too much specialized behavior at this point. The format is a series of TSVs concatenated together with a shared metadata header. This will pull the data out into their own respective tables, apply some rudimentary type coercion, and then pack them into <code>pd.DataFrame</code> objects.</p>\n<p>As tables go, they\u2019re far from compact, but that is the cost of not nesting structures. I do have a routine in there to re-nest some features, but it defeats the purpose. </p>\n<p>If the code itself is acceptable, I\u2019ll write the docs for it as well.</p>", "type": "rendered"}, "source": {"commit": {"hash": "fe55795890ed", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/fe55795890ed"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/fe55795890ed"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "mztab"}}, "comment_count": 11, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-01-22T15:34:42.337443+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "384c77c2ae15", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/384c77c2ae15.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/384c77c2ae15"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "* Fixed references to MGF in MS1 documentation\r\n* Added more abstraction to line parsing to reduce repeated code between MS1Base and MS1", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/33/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:499af497bc0a%0D92ff20d9df1f?from_pullrequest_id=33"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/33/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/33.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/33/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/33/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/33"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/33/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:499af497bc0a%0D92ff20d9df1f?from_pullrequest_id=33"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/33/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/33/statuses_page=1.json"}}, "title": "MS1 Docs", "close_source_branch": true, "type": "pullrequest", "id": 33, "destination": {"commit": {"hash": "92ff20d9df1f", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/92ff20d9df1f.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/92ff20d9df1f"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2019-01-15T02:14:23.143235+00:00", "summary": {"raw": "* Fixed references to MGF in MS1 documentation\r\n* Added more abstraction to line parsing to reduce repeated code between MS1Base and MS1", "markup": "markdown", "html": "<ul>\n<li>Fixed references to MGF in MS1 documentation</li>\n<li>Added more abstraction to line parsing to reduce repeated code between MS1Base and MS1</li>\n</ul>", "type": "rendered"}, "source": {"commit": {"hash": "0b45c48a8426", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/0b45c48a8426"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/0b45c48a8426"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "ms1_docs"}}, "comment_count": 5, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-01-19T18:54:38.523964+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "499af497bc0a", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/499af497bc0a.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/499af497bc0a"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "The default charge parser was written to defend against poorly formatted, ambiguous charge states from the bad old days of low resolution instruments. However, regexes are slow compared to exact string operations, and when the you don't need to handle the ambiguity it can be the slowest part of parsing. This patch allows you to override the charge parser function through inheritance rather than by monkeypatching `pyteomics.mgf.aux._parse_charge` globally.\r\n\r\nThe new tests for the index saving process for MGF broke on Windows because of newline conversion \\(\\\\n -> \\\\n\\\\r\\), resulting in incorrect offsets. Opening the files in binary mode ensures that the original line endings are preserved. The types of the reference offsets' containers needed to be adjusted to satisfy Py3.6 where lists do not equal tuples even if their contents are the same?\r\n\r\nLastly, PyteomicsError was defined to take only one argument, the error message but pylint observed it was called with an additional parameter occaisionally. While the error would result from invalid user code rather than library code, allowing it to take additional arguments satisfied the static code checker.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/34/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:82c125a24959%0D6b5eac1e4360?from_pullrequest_id=34"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/34/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/34.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/34/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/34/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/34"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/34/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:82c125a24959%0D6b5eac1e4360?from_pullrequest_id=34"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/34/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/34/statuses_page=1.json"}}, "title": "feature:Make the charge parser used by MGFBase overrideable by inheritance", "close_source_branch": false, "type": "pullrequest", "id": 34, "destination": {"commit": {"hash": "6b5eac1e4360", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/6b5eac1e4360.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/6b5eac1e4360"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2019-03-12T02:18:30.711590+00:00", "summary": {"raw": "The default charge parser was written to defend against poorly formatted, ambiguous charge states from the bad old days of low resolution instruments. However, regexes are slow compared to exact string operations, and when the you don't need to handle the ambiguity it can be the slowest part of parsing. This patch allows you to override the charge parser function through inheritance rather than by monkeypatching `pyteomics.mgf.aux._parse_charge` globally.\r\n\r\nThe new tests for the index saving process for MGF broke on Windows because of newline conversion \\(\\\\n -> \\\\n\\\\r\\), resulting in incorrect offsets. Opening the files in binary mode ensures that the original line endings are preserved. The types of the reference offsets' containers needed to be adjusted to satisfy Py3.6 where lists do not equal tuples even if their contents are the same?\r\n\r\nLastly, PyteomicsError was defined to take only one argument, the error message but pylint observed it was called with an additional parameter occaisionally. While the error would result from invalid user code rather than library code, allowing it to take additional arguments satisfied the static code checker.", "markup": "markdown", "html": "<p>The default charge parser was written to defend against poorly formatted, ambiguous charge states from the bad old days of low resolution instruments. However, regexes are slow compared to exact string operations, and when the you don't need to handle the ambiguity it can be the slowest part of parsing. This patch allows you to override the charge parser function through inheritance rather than by monkeypatching <code>pyteomics.mgf.aux._parse_charge</code> globally.</p>\n<p>The new tests for the index saving process for MGF broke on Windows because of newline conversion (\\n -&gt; \\n\\r), resulting in incorrect offsets. Opening the files in binary mode ensures that the original line endings are preserved. The types of the reference offsets' containers needed to be adjusted to satisfy Py3.6 where lists do not equal tuples even if their contents are the same?</p>\n<p>Lastly, PyteomicsError was defined to take only one argument, the error message but pylint observed it was called with an additional parameter occaisionally. While the error would result from invalid user code rather than library code, allowing it to take additional arguments satisfied the static code checker.</p>", "type": "rendered"}, "source": {"commit": {"hash": "82c125a24959", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/82c125a24959"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/82c125a24959"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "default"}}, "comment_count": 1, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-03-12T15:40:03.729346+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "82c125a24959", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/82c125a24959.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/82c125a24959"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Add `__slots__` to `unitfloat`, `unitstr`, and `cvstr`\r\n\r\nThese builtin-derived value types now use substantially less memory, while retaining backwards compatibility.\r\n\r\n`unitint` could not receive this optimization because in Py3 subclasses of int cannot have `__slots__`.\r\n\r\n\u200c", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/35/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:ca9abb07d76d%0D4390d0561696?from_pullrequest_id=35"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/35/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/35.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/35/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/35/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/35"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/35/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:ca9abb07d76d%0D4390d0561696?from_pullrequest_id=35"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/35/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/35/statuses_page=1.json"}}, "title": "Unit primitive slots", "close_source_branch": true, "type": "pullrequest", "id": 35, "destination": {"commit": {"hash": "4390d0561696", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/4390d0561696.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/4390d0561696"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2019-10-18T01:08:32.635424+00:00", "summary": {"raw": "Add `__slots__` to `unitfloat`, `unitstr`, and `cvstr`\r\n\r\nThese builtin-derived value types now use substantially less memory, while retaining backwards compatibility.\r\n\r\n`unitint` could not receive this optimization because in Py3 subclasses of int cannot have `__slots__`.\r\n\r\n\u200c", "markup": "markdown", "html": "<p>Add <code>__slots__</code> to <code>unitfloat</code>, <code>unitstr</code>, and <code>cvstr</code></p>\n<p>These builtin-derived value types now use substantially less memory, while retaining backwards compatibility.</p>\n<p><code>unitint</code> could not receive this optimization because in Py3 subclasses of int cannot have <code>__slots__</code>.</p>\n<p>\u200c</p>", "type": "rendered"}, "source": {"commit": {"hash": "0ff1f63aa49f", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/0ff1f63aa49f"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/0ff1f63aa49f"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "unit_primitive_slots"}}, "comment_count": 7, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-10-19T23:58:57.267295+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "ca9abb07d76d", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/ca9abb07d76d.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/ca9abb07d76d"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "The current implementation of WritableIndex.load assumed that OffsetIndex and HierarchicalOffsetIndex took two parameters, when in reality they took only one. This lead to an error that signaled the caller automatically rebuilding the index every time, never benefiting from the saved index.\r\n\r\nThis change corrects the way the container is created, so the index can be re-used.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/36/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:64455a6aaa6b%0Db9757496383a?from_pullrequest_id=36"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/36/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/36.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/36/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/36/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/36"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/36/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:64455a6aaa6b%0Db9757496383a?from_pullrequest_id=36"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/36/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/36/statuses_page=1.json"}}, "title": "fix: Adjust how WritableIndex.load creates new instances", "close_source_branch": true, "type": "pullrequest", "id": 36, "destination": {"commit": {"hash": "b9757496383a", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/b9757496383a.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/b9757496383a"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2019-11-21T21:39:21.352280+00:00", "summary": {"raw": "The current implementation of WritableIndex.load assumed that OffsetIndex and HierarchicalOffsetIndex took two parameters, when in reality they took only one. This lead to an error that signaled the caller automatically rebuilding the index every time, never benefiting from the saved index.\r\n\r\nThis change corrects the way the container is created, so the index can be re-used.", "markup": "markdown", "html": "<p>The current implementation of WritableIndex.load assumed that OffsetIndex and HierarchicalOffsetIndex took two parameters, when in reality they took only one. This lead to an error that signaled the caller automatically rebuilding the index every time, never benefiting from the saved index.</p>\n<p>This change corrects the way the container is created, so the index can be re-used.</p>", "type": "rendered"}, "source": {"commit": {"hash": "607dfd071eb6", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics/commit/607dfd071eb6"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics/commits/607dfd071eb6"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/mobiusklein/pyteomics"}, "html": {"href": "https://bitbucket.org/mobiusklein/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3ce101ca-5477-41e1-a7e0-d31a18922eb9}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "mobiusklein/pyteomics", "uuid": "{3ce101ca-5477-41e1-a7e0-d31a18922eb9}"}, "branch": {"name": "fix-index-load"}}, "comment_count": 4, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2019-11-21T22:37:19.049167+00:00", "author": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "merge_commit": {"hash": "64455a6aaa6b", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/64455a6aaa6b.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/64455a6aaa6b"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, {"description": "Change std_parsers key from uniprotkb to uniprot", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/37/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diffstat/levitsky/pyteomics:0fd7aa5e21bb%0Db763164b98d2?from_pullrequest_id=37"}, "commits": {"href": "data/repositories/levitsky/pyteomics/pullrequests/37/commits.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/pullrequests/37.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/pullrequests/37/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/37/merge"}, "html": {"href": "#!/levitsky/pyteomics/pull-requests/37"}, "activity": {"href": "data/repositories/levitsky/pyteomics/pullrequests/37/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/levitsky/pyteomics:0fd7aa5e21bb%0Db763164b98d2?from_pullrequest_id=37"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/pullrequests/37/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/pullrequests/37/statuses_page=1.json"}}, "title": "Change std_parsers key from uniprotkb to uniprot", "close_source_branch": false, "type": "pullrequest", "id": 37, "destination": {"commit": {"hash": "b763164b98d2", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/b763164b98d2.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/b763164b98d2"}}}, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "branch": {"name": "default"}}, "created_on": "2020-01-08T16:16:01.429653+00:00", "summary": {"raw": "Change std_parsers key from uniprotkb to uniprot", "markup": "markdown", "html": "<p>Change std_parsers key from uniprotkb to uniprot</p>", "type": "rendered"}, "source": {"commit": {"hash": "9c5910a57d76", "type": "commit", "links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/manor_a/pyteomics/commit/9c5910a57d76"}, "html": {"href": "https://bitbucket.org/manor_a/pyteomics/commits/9c5910a57d76"}}}, "repository": {"links": {"self": {"href": "https://api.bitbucket.org/2.0/repositories/manor_a/pyteomics"}, "html": {"href": "https://bitbucket.org/manor_a/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f87c3b09-36d5-4db0-a7ca-c0408d1b4bb1}ts=python"}}, "type": "repository", "name": "pyteomics", "full_name": "manor_a/pyteomics", "uuid": "{f87c3b09-36d5-4db0-a7ca-c0408d1b4bb1}"}, "branch": {"name": "manor_a/change-std_parsers-key-from-uniprotkb-to-1578500156989"}}, "comment_count": 0, "state": "MERGED", "task_count": 0, "reason": "", "updated_on": "2020-01-08T18:58:12.590466+00:00", "author": {"display_name": "manor_a", "uuid": "{37e73a20-a639-4bf0-891f-1e87a098d2fd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B37e73a20-a639-4bf0-891f-1e87a098d2fd%7D"}, "html": {"href": "https://bitbucket.org/%7B37e73a20-a639-4bf0-891f-1e87a098d2fd%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/79290103543961b211d37e4c12bf1b34d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsM-3.png"}}, "nickname": "manor", "type": "user", "account_id": "557058:7ee3faae-cbba-4b48-ad23-3763b2709e64"}, "merge_commit": {"hash": "0fd7aa5e21bb", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/0fd7aa5e21bb.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/0fd7aa5e21bb"}}}, "closed_by": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}], "page": 1, "size": 37}