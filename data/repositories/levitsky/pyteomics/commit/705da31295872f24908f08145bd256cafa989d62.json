{"rendered": {"message": {"raw": "Added an IndexedMzML class to make random access of indexed MzML documents possible.\n\nNew class is derived from the original mzml.MzML reader, with a modified __init__ method\nto build up a byte offset index for spectra relative to the start of the file. If applied\nto a non-indexed MzML file, the class will fall back on its parent class methods with no\nloss of functionality, but without the substantial improvement in random access performance\nby `get_by_id`. As a convenience notation, I also set the __getitem__ method on the INdexedMzML\nclass to invoke `get_by_id` as the interface makes sense given the behavior, but this asymmetry\nwith the base class may not be worth the saved characters.", "markup": "markdown", "html": "<p>Added an IndexedMzML class to make random access of indexed MzML documents possible.</p>\n<p>New class is derived from the original mzml.MzML reader, with a modified <strong>init</strong> method<br />\nto build up a byte offset index for spectra relative to the start of the file. If applied<br />\nto a non-indexed MzML file, the class will fall back on its parent class methods with no<br />\nloss of functionality, but without the substantial improvement in random access performance<br />\nby <code>get_by_id</code>. As a convenience notation, I also set the <strong>getitem</strong> method on the INdexedMzML<br />\nclass to invoke <code>get_by_id</code> as the interface makes sense given the behavior, but this asymmetry<br />\nwith the base class may not be worth the saved characters.</p>", "type": "rendered"}}, "hash": "705da31295872f24908f08145bd256cafa989d62", "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/705da31295872f24908f08145bd256cafa989d62.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/commit/705da31295872f24908f08145bd256cafa989d62/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/patch/705da31295872f24908f08145bd256cafa989d62"}, "html": {"href": "#!/levitsky/pyteomics/commits/705da31295872f24908f08145bd256cafa989d62"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/705da31295872f24908f08145bd256cafa989d62"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/commit/705da31295872f24908f08145bd256cafa989d62/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/commit/705da31295872f24908f08145bd256cafa989d62/statuses_page=1.json"}}, "author": {"raw": "Joshua Klein <mobiusklein@gmail.com", "type": "author"}, "summary": {"raw": "Added an IndexedMzML class to make random access of indexed MzML documents possible.\n\nNew class is derived from the original mzml.MzML reader, with a modified __init__ method\nto build up a byte offset index for spectra relative to the start of the file. If applied\nto a non-indexed MzML file, the class will fall back on its parent class methods with no\nloss of functionality, but without the substantial improvement in random access performance\nby `get_by_id`. As a convenience notation, I also set the __getitem__ method on the INdexedMzML\nclass to invoke `get_by_id` as the interface makes sense given the behavior, but this asymmetry\nwith the base class may not be worth the saved characters.", "markup": "markdown", "html": "<p>Added an IndexedMzML class to make random access of indexed MzML documents possible.</p>\n<p>New class is derived from the original mzml.MzML reader, with a modified <strong>init</strong> method<br />\nto build up a byte offset index for spectra relative to the start of the file. If applied<br />\nto a non-indexed MzML file, the class will fall back on its parent class methods with no<br />\nloss of functionality, but without the substantial improvement in random access performance<br />\nby <code>get_by_id</code>. As a convenience notation, I also set the <strong>getitem</strong> method on the INdexedMzML<br />\nclass to invoke <code>get_by_id</code> as the interface makes sense given the behavior, but this asymmetry<br />\nwith the base class may not be worth the saved characters.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "7d603942410b1179ab3b9b7d0b26c683fa072f3c", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/7d603942410b1179ab3b9b7d0b26c683fa072f3c.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/7d603942410b1179ab3b9b7d0b26c683fa072f3c"}}}], "date": "2016-04-03T19:07:14+00:00", "message": "Added an IndexedMzML class to make random access of indexed MzML documents possible.\n\nNew class is derived from the original mzml.MzML reader, with a modified __init__ method\nto build up a byte offset index for spectra relative to the start of the file. If applied\nto a non-indexed MzML file, the class will fall back on its parent class methods with no\nloss of functionality, but without the substantial improvement in random access performance\nby `get_by_id`. As a convenience notation, I also set the __getitem__ method on the INdexedMzML\nclass to invoke `get_by_id` as the interface makes sense given the behavior, but this asymmetry\nwith the base class may not be worth the saved characters.", "type": "commit", "git_hash": "0ae24f69b360957ad1508649fb749340236c9748", "tags": null, "branches": "default"}