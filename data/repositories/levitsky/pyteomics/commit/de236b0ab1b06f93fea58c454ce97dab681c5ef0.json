{"rendered": {"message": {"raw": "Fix #44 by adding new keyword arguments for map-supporting readers: queue_size, queue_timeout and processes.\nMake __init__ signatures more cooperative throughout the class tree.\nMake sure that index is not constructed in index-saving readers even if file with offsets exists.", "markup": "markdown", "html": "<p>Fix <a href=\"#!/levitsky/pyteomics/issues/44/multiprocessing-queue-maxsize-too-large\" rel=\"nofollow\" title=\"Multiprocessing Queue maxsize too large for MacOS\" class=\"ap-connect-link\"><s>#44</s></a> by adding new keyword arguments for map-supporting readers: queue_size, queue_timeout and processes.<br />\nMake <strong>init</strong> signatures more cooperative throughout the class tree.<br />\nMake sure that index is not constructed in index-saving readers even if file with offsets exists.</p>", "type": "rendered"}}, "hash": "de236b0ab1b06f93fea58c454ce97dab681c5ef0", "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/de236b0ab1b06f93fea58c454ce97dab681c5ef0.json"}, "comments": {"href": "data/repositories/levitsky/pyteomics/commit/de236b0ab1b06f93fea58c454ce97dab681c5ef0/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/patch/de236b0ab1b06f93fea58c454ce97dab681c5ef0"}, "html": {"href": "#!/levitsky/pyteomics/commits/de236b0ab1b06f93fea58c454ce97dab681c5ef0"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/diff/de236b0ab1b06f93fea58c454ce97dab681c5ef0"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/commit/de236b0ab1b06f93fea58c454ce97dab681c5ef0/approve"}, "statuses": {"href": "data/repositories/levitsky/pyteomics/commit/de236b0ab1b06f93fea58c454ce97dab681c5ef0/statuses_page=1.json"}}, "author": {"raw": "Lev Levitsky <lev.levitsky@phystech.edu>", "type": "author", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}}, "summary": {"raw": "Fix #44 by adding new keyword arguments for map-supporting readers: queue_size, queue_timeout and processes.\nMake __init__ signatures more cooperative throughout the class tree.\nMake sure that index is not constructed in index-saving readers even if file with offsets exists.", "markup": "markdown", "html": "<p>Fix <a href=\"#!/levitsky/pyteomics/issues/44/multiprocessing-queue-maxsize-too-large\" rel=\"nofollow\" title=\"Multiprocessing Queue maxsize too large for MacOS\" class=\"ap-connect-link\"><s>#44</s></a> by adding new keyword arguments for map-supporting readers: queue_size, queue_timeout and processes.<br />\nMake <strong>init</strong> signatures more cooperative throughout the class tree.<br />\nMake sure that index is not constructed in index-saving readers even if file with offsets exists.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "64455a6aaa6b9d56d0bfc4985b3f8fa5ce0b4b76", "type": "commit", "links": {"self": {"href": "data/repositories/levitsky/pyteomics/commit/64455a6aaa6b9d56d0bfc4985b3f8fa5ce0b4b76.json"}, "html": {"href": "#!/levitsky/pyteomics/commits/64455a6aaa6b9d56d0bfc4985b3f8fa5ce0b4b76"}}}], "date": "2019-11-30T20:10:39+00:00", "message": "Fix #44 by adding new keyword arguments for map-supporting readers: queue_size, queue_timeout and processes.\nMake __init__ signatures more cooperative throughout the class tree.\nMake sure that index is not constructed in index-saving readers even if file with offsets exists.", "type": "commit", "git_hash": "62f3dc456d257759692e7d863676f7d6e848a3b9", "tags": null, "branches": "default"}