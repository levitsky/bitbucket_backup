{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51435559.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51435559"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "[Latest commit](#!/levitsky/pyteomics/commits/95ac4eec426d158c91fde3d50bd6a73e468c4caf) adds a draft version of this. Should work on Python 2.7 and 3.x with three types of Numpress-compressed mzML files created by MSConvert.", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"#!/levitsky/pyteomics/commits/95ac4eec426d158c91fde3d50bd6a73e468c4caf\" rel=\"nofollow\">Latest commit</a> adds a draft version of this. Should work on Python 2.7 and 3.x with three types of Numpress-compressed mzML files created by MSConvert.</p>", "type": "rendered"}, "created_on": "2019-04-02T00:12:06.803564+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 51435559}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51435621.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51435621"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "PyMSNumpress is idiomatically C++, making it much slower for Python. I adapted it to be more Python/NumPy friendly: https://github.com/mobiusklein/pynumpress/blob/master/pynumpress/pynumpress.pyx. It should do away with the need to load the output numerical array as a list, and then convert the list into a NumPy array.\n\nAlso, there are layered compression schemes in the controlled vocabulary. I don't know if Proteowizard supports them yet though:\n```\n\n[Term]\nid: MS:1002746\nname: MS-Numpress linear prediction compression followed by zlib compression\ndef: \"Compression using MS-Numpress linear prediction compression and zlib.\" [https://github.com/ms-numpress/ms-numpress]\nis_a: MS:1000572 ! binary data compression type\n\n[Term]\nid: MS:1002747\nname: MS-Numpress positive integer compression followed by zlib compression\ndef: \"Compression using MS-Numpress positive integer compression and zlib.\" [https://github.com/ms-numpress/ms-numpress]\nis_a: MS:1000572 ! binary data compression type\n\n[Term]\nid: MS:1002748\nname: MS-Numpress short logged float compression followed by zlib compression\ndef: \"Compression using MS-Numpress short logged float compression and zlib.\" [https://github.com/ms-numpress/ms-numpress]\nis_a: MS:1000572 ! binary data compression type\n```", "markup": "markdown", "html": "<p>PyMSNumpress is idiomatically C++, making it much slower for Python. I adapted it to be more Python/NumPy friendly: <a href=\"https://github.com/mobiusklein/pynumpress/blob/master/pynumpress/pynumpress.pyx\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/mobiusklein/pynumpress/blob/master/pynumpress/pynumpress.pyx</a>. It should do away with the need to load the output numerical array as a list, and then convert the list into a NumPy array.</p>\n<p>Also, there are layered compression schemes in the controlled vocabulary. I don't know if Proteowizard supports them yet though:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">[Term]</span>\n<span class=\"na\">id: MS:1002746</span>\n<span class=\"na\">name: MS-Numpress linear prediction compression followed by zlib compression</span>\n<span class=\"na\">def: &quot;Compression using MS-Numpress linear prediction compression and zlib.&quot; [https://github.com/ms-numpress/ms-numpress]</span>\n<span class=\"na\">is_a: MS:1000572 ! binary data compression type</span>\n\n<span class=\"k\">[Term]</span>\n<span class=\"na\">id: MS:1002747</span>\n<span class=\"na\">name: MS-Numpress positive integer compression followed by zlib compression</span>\n<span class=\"na\">def: &quot;Compression using MS-Numpress positive integer compression and zlib.&quot; [https://github.com/ms-numpress/ms-numpress]</span>\n<span class=\"na\">is_a: MS:1000572 ! binary data compression type</span>\n\n<span class=\"k\">[Term]</span>\n<span class=\"na\">id: MS:1002748</span>\n<span class=\"na\">name: MS-Numpress short logged float compression followed by zlib compression</span>\n<span class=\"na\">def: &quot;Compression using MS-Numpress short logged float compression and zlib.&quot; [https://github.com/ms-numpress/ms-numpress]</span>\n<span class=\"na\">is_a: MS:1000572 ! binary data compression type</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-04-02T00:23:22.330407+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 51435621}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51448931.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51448931"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "Awesome! Thank you for bringing it up, somehow I didn't find it myself.\n\nI tried using your implementation in cbffcbd. It is much handier than the awkward C++-style biz, although still requires one intermediate step of converting pure `bytes` to `ndarray`.\n\nIt looks like specifying both zlib and numpress flags works with MSConvert, but instead of designated terms you get this:\n\n```\n<cvParam cvRef=\"MS\" accession=\"MS:1000574\" name=\"zlib compression\" value=\"\"/>\n<cvParam cvRef=\"MS\" accession=\"MS:1002314\" name=\"MS-Numpress short logged float compression\" value=\"\"/>\n<cvParam cvRef=\"MS\" accession=\"MS:1000515\" name=\"intensity array\" value=\"\" unitCvRef=\"MS\" unitAccession=\"MS:1000131\" unitName=\"number of detector counts\"/>\n```\n\nThis is of course not handled correctly by Pyteomics.", "markup": "markdown", "html": "<p>Awesome! Thank you for bringing it up, somehow I didn't find it myself.</p>\n<p>I tried using your implementation in <a href=\"#!/levitsky/pyteomics/commits/cbffcbd\" rel=\"nofollow\" class=\"ap-connect-link\">cbffcbd</a>. It is much handier than the awkward C++-style biz, although still requires one intermediate step of converting pure <code>bytes</code> to <code>ndarray</code>.</p>\n<p>It looks like specifying both zlib and numpress flags works with MSConvert, but instead of designated terms you get this:</p>\n<div class=\"codehilite\"><pre><span></span>&lt;cvParam cvRef=&quot;MS&quot; accession=&quot;MS:1000574&quot; name=&quot;zlib compression&quot; value=&quot;&quot;/&gt;\n&lt;cvParam cvRef=&quot;MS&quot; accession=&quot;MS:1002314&quot; name=&quot;MS-Numpress short logged float compression&quot; value=&quot;&quot;/&gt;\n&lt;cvParam cvRef=&quot;MS&quot; accession=&quot;MS:1000515&quot; name=&quot;intensity array&quot; value=&quot;&quot; unitCvRef=&quot;MS&quot; unitAccession=&quot;MS:1000131&quot; unitName=&quot;number of detector counts&quot;/&gt;\n</pre></div>\n\n\n<p>This is of course not handled correctly by Pyteomics.</p>", "type": "rendered"}, "created_on": "2019-04-02T15:30:47.474998+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 51448931}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51465597.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51465597"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "Update: more recent version (3.0.19073) actually uses the correct CV term.\nThe previous comment pertains to 3.0.5533.", "markup": "markdown", "html": "<p>Update: more recent version (3.0.19073) actually uses the correct CV term.\nThe previous comment pertains to 3.0.5533.</p>", "type": "rendered"}, "created_on": "2019-04-03T13:32:21.703857+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 51465597}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51473784.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51473784"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "Added support for the layered compression.\nAlso, the `transform` step apparently still needed to be amended for numpress output, because if a numpy array is fed to `np.frombuffer` with a non-matching dtype, the data get corrupted.", "markup": "markdown", "html": "<p>Added support for the layered compression.\nAlso, the <code>transform</code> step apparently still needed to be amended for numpress output, because if a numpy array is fed to <code>np.frombuffer</code> with a non-matching dtype, the data get corrupted.</p>", "type": "rendered"}, "created_on": "2019-04-03T22:59:07.446155+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 51473784}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51474199.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51474199"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "Yeah, `np.frombuffer` just grabs the buffer and re-interprets the bytes in that buffer as chunks of size `dtype.itemsize`. `MSNumpress` deals strictly with `double`s, which for most compilers will be `float64`. It might make sense to test if `astype` can be invoked with `copy=False`, since that `float64` array will not be used.\n\nI thought Cython was handling generic conversion of Python data types to C++ `std::vector<char>`, but apparently it was silently permitting the code to compile with an error to be thrown at run time. It'll amount to a fused function essentially doing the conversion you are already doing.", "markup": "markdown", "html": "<p>Yeah, <code>np.frombuffer</code> just grabs the buffer and re-interprets the bytes in that buffer as chunks of size <code>dtype.itemsize</code>. <code>MSNumpress</code> deals strictly with <code>double</code>s, which for most compilers will be <code>float64</code>. It might make sense to test if <code>astype</code> can be invoked with <code>copy=False</code>, since that <code>float64</code> array will not be used.</p>\n<p>I thought Cython was handling generic conversion of Python data types to C++ <code>std::vector&lt;char&gt;</code>, but apparently it was silently permitting the code to compile with an error to be thrown at run time. It'll amount to a fused function essentially doing the conversion you are already doing.</p>", "type": "rendered"}, "created_on": "2019-04-04T00:08:09.009937+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 51474199}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51540079.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51540079"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "Thank you.\n\nI wrote a simple test for this functionality and encountered the following error on Python 2.7:\n\n```python\nIn [5]: pynumpress.encode_slof(data, 1.0)\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-5-76e6a6156fc5> in <module>()\n----> 1 pynumpress.encode_slof(data, 1.0)\n\npynumpress/pynumpress.pyx in pynumpress.pynumpress.__pyx_fused_cpdef()\n\n/usr/lib/python2.7/site-packages/numpy/__init__.py in <module>()\n    140     from . import _distributor_init\n    141 \n--> 142     from . import core\n    143     from .core import *\n    144     from . import compat\n\n/usr/lib/python2.7/site-packages/numpy/core/__init__.py in <module>()\n     38 \n     39 try:\n---> 40     from . import multiarray\n     41 except ImportError as exc:\n     42     import sys\n\n/usr/lib/python2.7/site-packages/numpy/core/multiarray.py in <module>()\n     10 import warnings\n     11 \n---> 12 from . import overrides\n     13 from . import _multiarray_umath\n     14 import numpy as np\n\n/usr/lib/python2.7/site-packages/numpy/core/overrides.py in <module>()\n     44     ------\n     45     TypeError : if no implementation is found.\n---> 46     \"\"\")\n     47 \n     48 \n\nRuntimeError: implement_array_function method already has a docstring\n```\n\nI also get stuff like this:\n\n```\nTraceback (most recent call last):\n  File \"test_mzml.py\", line 169, in test_numpress_slof\n    encoded = base64.b64encode(pynumpress.encode_slof(data, pynumpress.optimal_slof_fixed_point(data)).tobytes()).decode('ascii')\n  File \"pynumpress/pynumpress.pyx\", line 79, in pynumpress.pynumpress.__pyx_fused_cpdef\n  File \"/usr/lib/python2.7/site-packages/numpy/__init__.py\", line 140, in <module>\n    from . import _distributor_init\nImportError: cannot import name _distributor_init\n```\n\nThis feels like an import path mix-up, but I haven't pinpointed it yet.\n\nOn Python 3, the code works. What could be the problem? Should I report it on your repo?", "markup": "markdown", "html": "<p>Thank you.</p>\n<p>I wrote a simple test for this functionality and encountered the following error on Python 2.7:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">encode_slof</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n<span class=\"o\">---------------------------------------------------------------------------</span>\n<span class=\"ne\">RuntimeError</span>                              <span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ipython</span><span class=\"o\">-</span><span class=\"nb\">input</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"o\">-</span><span class=\"mf\">76e6</span><span class=\"n\">a6156fc5</span><span class=\"o\">&gt;</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n<span class=\"o\">----&gt;</span> <span class=\"mi\">1</span> <span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">encode_slof</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n<span class=\"n\">pynumpress</span><span class=\"o\">/</span><span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">pyx</span> <span class=\"ow\">in</span> <span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">__pyx_fused_cpdef</span><span class=\"p\">()</span>\n\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">python2</span><span class=\"o\">.</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">site</span><span class=\"o\">-</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">numpy</span><span class=\"o\">/</span><span class=\"fm\">__init__</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n    <span class=\"mi\">140</span>     <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">_distributor_init</span>\n    <span class=\"mi\">141</span> \n<span class=\"o\">--&gt;</span> <span class=\"mi\">142</span>     <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">core</span>\n    <span class=\"mi\">143</span>     <span class=\"kn\">from</span> <span class=\"nn\">.core</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n    <span class=\"mi\">144</span>     <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">compat</span>\n\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">python2</span><span class=\"o\">.</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">site</span><span class=\"o\">-</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">numpy</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"fm\">__init__</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n     <span class=\"mi\">38</span> \n     <span class=\"mi\">39</span> <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"o\">---&gt;</span> <span class=\"mi\">40</span>     <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">multiarray</span>\n     <span class=\"mi\">41</span> <span class=\"k\">except</span> <span class=\"ne\">ImportError</span> <span class=\"k\">as</span> <span class=\"n\">exc</span><span class=\"p\">:</span>\n     <span class=\"mi\">42</span>     <span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">python2</span><span class=\"o\">.</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">site</span><span class=\"o\">-</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">numpy</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">multiarray</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n     <span class=\"mi\">10</span> <span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n     <span class=\"mi\">11</span> \n<span class=\"o\">---&gt;</span> <span class=\"mi\">12</span> <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">overrides</span>\n     <span class=\"mi\">13</span> <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">_multiarray_umath</span>\n     <span class=\"mi\">14</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">python2</span><span class=\"o\">.</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">site</span><span class=\"o\">-</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">numpy</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">overrides</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n     <span class=\"mi\">44</span>     <span class=\"o\">------</span>\n     <span class=\"mi\">45</span>     <span class=\"ne\">TypeError</span> <span class=\"p\">:</span> <span class=\"k\">if</span> <span class=\"n\">no</span> <span class=\"n\">implementation</span> <span class=\"ow\">is</span> <span class=\"n\">found</span><span class=\"o\">.</span>\n<span class=\"o\">---&gt;</span> <span class=\"mi\">46</span>     <span class=\"s2\">&quot;&quot;&quot;)</span>\n<span class=\"s2\">     47 </span>\n<span class=\"s2\">     48 </span>\n\n<span class=\"s2\">RuntimeError: implement_array_function method already has a docstring</span>\n</pre></div>\n\n\n<p>I also get stuff like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;test_mzml.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">169</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">test_numpress_slof</span>\n    <span class=\"n\">encoded</span> <span class=\"o\">=</span> <span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">b64encode</span><span class=\"p\">(</span><span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">encode_slof</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">optimal_slof_fixed_point</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">tobytes</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">&#39;ascii&#39;</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;pynumpress/pynumpress.pyx&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">79</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">__pyx_fused_cpdef</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;/usr/lib/python2.7/site-packages/numpy/__init__.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">140</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">_distributor_init</span>\n<span class=\"ne\">ImportError</span><span class=\"p\">:</span> <span class=\"n\">cannot</span> <span class=\"kn\">import</span> <span class=\"nn\">name</span> <span class=\"nn\">_distributor_init</span>\n</pre></div>\n\n\n<p>This feels like an import path mix-up, but I haven't pinpointed it yet.</p>\n<p>On Python 3, the code works. What could be the problem? Should I report it on your repo?</p>", "type": "rendered"}, "created_on": "2019-04-08T16:00:59.727003+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": "2019-11-28T10:45:19.818129+00:00", "type": "issue_comment", "id": 51540079}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51544590.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51544590"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "This appears to be related to the state of the shared NumPy extension\nstate. Do you have the complete shell history leading to that command?", "markup": "markdown", "html": "<p>This appears to be related to the state of the shared NumPy extension\nstate. Do you have the complete shell history leading to that command?</p>", "type": "rendered"}, "created_on": "2019-04-08T21:25:08.308648+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 51544590}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51749649.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51749649"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "And again BitBucket failed to notify me of your reply.\n\nHere's one possible minimal example (Python 2, LInux).\n\n```\nIn [1]: import pynumpress\n\nIn [2]: pynumpress.encode_slof([], 1.0)\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-2-facd92555439> in <module>()\n----> 1 pynumpress.encode_slof([], 1.0)\n\npynumpress/pynumpress.pyx in pynumpress.pynumpress.__pyx_fused_cpdef()\n\n/usr/lib/python2.7/site-packages/numpy/__init__.py in <module>()\n    140     from . import _distributor_init\n    141 \n--> 142     from . import core\n    143     from .core import *\n    144     from . import compat\n\n/usr/lib/python2.7/site-packages/numpy/core/__init__.py in <module>()\n     38 \n     39 try:\n---> 40     from . import multiarray\n     41 except ImportError as exc:\n     42     import sys\n\n/usr/lib/python2.7/site-packages/numpy/core/multiarray.py in <module>()\n     10 import warnings\n     11 \n---> 12 from . import overrides\n     13 from . import _multiarray_umath\n     14 import numpy as np\n\n/usr/lib/python2.7/site-packages/numpy/core/overrides.py in <module>()\n     44     ------\n     45     TypeError : if no implementation is found.\n---> 46     \"\"\")\n     47 \n     48 \n\nRuntimeError: implement_array_function method already has a docstring\n```", "markup": "markdown", "html": "<p>And again BitBucket failed to notify me of your reply.</p>\n<p>Here's one possible minimal example (Python 2, LInux).</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">pynumpress</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">encode_slof</span><span class=\"p\">([],</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n<span class=\"o\">---------------------------------------------------------------------------</span>\n<span class=\"ne\">RuntimeError</span>                              <span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ipython</span><span class=\"o\">-</span><span class=\"nb\">input</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"n\">facd92555439</span><span class=\"o\">&gt;</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n<span class=\"o\">----&gt;</span> <span class=\"mi\">1</span> <span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">encode_slof</span><span class=\"p\">([],</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n<span class=\"n\">pynumpress</span><span class=\"o\">/</span><span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">pyx</span> <span class=\"ow\">in</span> <span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">__pyx_fused_cpdef</span><span class=\"p\">()</span>\n\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">python2</span><span class=\"o\">.</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">site</span><span class=\"o\">-</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">numpy</span><span class=\"o\">/</span><span class=\"fm\">__init__</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n    <span class=\"mi\">140</span>     <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">_distributor_init</span>\n    <span class=\"mi\">141</span> \n<span class=\"o\">--&gt;</span> <span class=\"mi\">142</span>     <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">core</span>\n    <span class=\"mi\">143</span>     <span class=\"kn\">from</span> <span class=\"nn\">.core</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n    <span class=\"mi\">144</span>     <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">compat</span>\n\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">python2</span><span class=\"o\">.</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">site</span><span class=\"o\">-</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">numpy</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"fm\">__init__</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n     <span class=\"mi\">38</span> \n     <span class=\"mi\">39</span> <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"o\">---&gt;</span> <span class=\"mi\">40</span>     <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">multiarray</span>\n     <span class=\"mi\">41</span> <span class=\"k\">except</span> <span class=\"ne\">ImportError</span> <span class=\"k\">as</span> <span class=\"n\">exc</span><span class=\"p\">:</span>\n     <span class=\"mi\">42</span>     <span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">python2</span><span class=\"o\">.</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">site</span><span class=\"o\">-</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">numpy</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">multiarray</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n     <span class=\"mi\">10</span> <span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n     <span class=\"mi\">11</span> \n<span class=\"o\">---&gt;</span> <span class=\"mi\">12</span> <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">overrides</span>\n     <span class=\"mi\">13</span> <span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">_multiarray_umath</span>\n     <span class=\"mi\">14</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"kn\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">python2</span><span class=\"o\">.</span><span class=\"mi\">7</span><span class=\"o\">/</span><span class=\"n\">site</span><span class=\"o\">-</span><span class=\"n\">packages</span><span class=\"o\">/</span><span class=\"n\">numpy</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">overrides</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span><span class=\"p\">()</span>\n     <span class=\"mi\">44</span>     <span class=\"o\">------</span>\n     <span class=\"mi\">45</span>     <span class=\"ne\">TypeError</span> <span class=\"p\">:</span> <span class=\"k\">if</span> <span class=\"n\">no</span> <span class=\"n\">implementation</span> <span class=\"ow\">is</span> <span class=\"n\">found</span><span class=\"o\">.</span>\n<span class=\"o\">---&gt;</span> <span class=\"mi\">46</span>     <span class=\"s2\">&quot;&quot;&quot;)</span>\n<span class=\"s2\">     47 </span>\n<span class=\"s2\">     48 </span>\n\n<span class=\"s2\">RuntimeError: implement_array_function method already has a docstring</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-04-22T10:24:22.099235+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": "2019-04-22T10:24:35.117534+00:00", "type": "issue_comment", "id": 51749649}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51750323.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51750323"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "Odd. I can run those two lines on both Windows and Linux under Py2.7\nwithout issue. The decoding step crashes spectacularly however. What are\nyour NumPy and Cython versions?", "markup": "markdown", "html": "<p>Odd. I can run those two lines on both Windows and Linux under Py2.7\nwithout issue. The decoding step crashes spectacularly however. What are\nyour NumPy and Cython versions?</p>", "type": "rendered"}, "created_on": "2019-04-22T11:25:11.395124+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 51750323}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51754535.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51754535"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "I'm running cython 0.29.7 and numpy 1.16.2", "markup": "markdown", "html": "<p>I'm running cython 0.29.7 and numpy 1.16.2</p>", "type": "rendered"}, "created_on": "2019-04-22T16:42:03.908926+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 51754535}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51758740.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51758740"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "Hmm. I'm not able to reproduce it. Most of the reports I'm seeing about `<method> method already has a docstring` seem to be related to repeated initialization of the C-extension module. I'll see what else I can try out on other machines. Can you try accessing a specialization of `encode_slof`?\n\n```python\nimport pynumpress\n\npynumpress.encode_slof[list]([], 1.0)\n```", "markup": "markdown", "html": "<p>Hmm. I'm not able to reproduce it. Most of the reports I'm seeing about <code>&lt;method&gt; method already has a docstring</code> seem to be related to repeated initialization of the C-extension module. I'll see what else I can try out on other machines. Can you try accessing a specialization of <code>encode_slof</code>?</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">pynumpress</span>\n\n<span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">encode_slof</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]([],</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-04-23T00:41:00.781890+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 51758740}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51765746.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51765746"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "This code works fine:\n\n\n```\n#!python\n\nIn [1]: import pynumpress\n   ...: \n   ...: pynumpress.encode_slof[list]([], 1.0)\n   ...: \nOut[1]: array([ 63, 240,   0,   0,   0,   0,   0,   0], dtype=uint8)\n```", "markup": "markdown", "html": "<p>This code works fine:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">pynumpress</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> \n   <span class=\"o\">...</span><span class=\"p\">:</span> <span class=\"n\">pynumpress</span><span class=\"o\">.</span><span class=\"n\">encode_slof</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]([],</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n   <span class=\"o\">...</span><span class=\"p\">:</span> \n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mi\">63</span><span class=\"p\">,</span> <span class=\"mi\">240</span><span class=\"p\">,</span>   <span class=\"mi\">0</span><span class=\"p\">,</span>   <span class=\"mi\">0</span><span class=\"p\">,</span>   <span class=\"mi\">0</span><span class=\"p\">,</span>   <span class=\"mi\">0</span><span class=\"p\">,</span>   <span class=\"mi\">0</span><span class=\"p\">,</span>   <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">uint8</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-04-23T10:08:54.988515+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 51765746}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51813044.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51813044"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "So it looks like the problem has to do with the fused function dispatch\nitself. I was able to reproduce it finally, and narrow down the problem.\nI've opened the issue with Cython:\nhttps://github.com/cython/cython/issues/2932", "markup": "markdown", "html": "<p>So it looks like the problem has to do with the fused function dispatch\nitself. I was able to reproduce it finally, and narrow down the problem.\nI've opened the issue with Cython:\n<a href=\"https://github.com/cython/cython/issues/2932\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/cython/cython/issues/2932</a></p>", "type": "rendered"}, "created_on": "2019-04-25T22:30:11.942294+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 51813044}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51843564.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51843564"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "Thank you so much for your efforts!", "markup": "markdown", "html": "<p>Thank you so much for your efforts!</p>", "type": "rendered"}, "created_on": "2019-04-28T20:16:25.818467+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 51843564}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/52111777.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-52111777"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "Looks like the issue isn\u2019t gathering any attention from Cython, and the NumPy maintainers weren\u2019t sure what was happening either. I\u2019ll fix the problem by adding some compile-time logic to generate different code for Linux on Py2.7.", "markup": "markdown", "html": "<p>Looks like the issue isn\u2019t gathering any attention from Cython, and the NumPy maintainers weren\u2019t sure what was happening either. I\u2019ll fix the problem by adding some compile-time logic to generate different code for Linux on Py2.7.</p>", "type": "rendered"}, "created_on": "2019-05-14T01:06:49.167304+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 52111777}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/52112019.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-52112019"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "[https://github.com/mobiusklein/pynumpress/tree/master](https://github.com/mobiusklein/pynumpress/tree/master) appears to be working on Py2.7 and Py3 on both Windows and Linux. Could you install from master and let me know if it works for you please?\n\nThe change boils down to \"if this is Python 2 on Linux, generate code s.t. `np.ndarray` is not a member of the two fused types and it will be handled by the `object` case at run time rather than getting its own compile-time specialization\u201d. The code will otherwise look identical when compiled under any other conditions. \n\nThe one downside to this fix is that the compilation changes are _Cython_ compile-time changes, not _C_, so that means that if I were to build an `sdist` of the source code and upload it to PyPI from my Windows machine, that conditional code generation change won\u2019t be in effect _even if_ the person who then installs it is on Linux with Python 2.7. This means that I need to add extra logic to the setup script to make Cython a hard requirement if you\u2019re on Linux with Python 2.7, or to at least provide a wheel for that particular user. I\u2019ll deal with that if it fixes the problem.", "markup": "markdown", "html": "<p><a data-is-external-link=\"true\" href=\"https://github.com/mobiusklein/pynumpress/tree/master\" rel=\"nofollow\">https://github.com/mobiusklein/pynumpress/tree/master</a> appears to be working on Py2.7 and Py3 on both Windows and Linux. Could you install from master and let me know if it works for you please?</p>\n<p>The change boils down to \"if this is Python 2 on Linux, generate code s.t. <code>np.ndarray</code> is not a member of the two fused types and it will be handled by the <code>object</code> case at run time rather than getting its own compile-time specialization\u201d. The code will otherwise look identical when compiled under any other conditions. </p>\n<p>The one downside to this fix is that the compilation changes are <em>Cython</em> compile-time changes, not <em>C</em>, so that means that if I were to build an <code>sdist</code> of the source code and upload it to PyPI from my Windows machine, that conditional code generation change won\u2019t be in effect <em>even if</em> the person who then installs it is on Linux with Python 2.7. This means that I need to add extra logic to the setup script to make Cython a hard requirement if you\u2019re on Linux with Python 2.7, or to at least provide a wheel for that particular user. I\u2019ll deal with that if it fixes the problem.</p>", "type": "rendered"}, "created_on": "2019-05-14T01:41:09.686457+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 52112019}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/52119057.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-52119057"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "Thank you for this. The tests pass fine with the master version.", "markup": "markdown", "html": "<p>Thank you for this. The tests pass fine with the master version.</p>", "type": "rendered"}, "created_on": "2019-05-14T11:02:24.415668+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 52119057}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/52653514.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-52653514"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-06-19T13:24:34.105068+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 52653514}], "page": 1, "size": 19}