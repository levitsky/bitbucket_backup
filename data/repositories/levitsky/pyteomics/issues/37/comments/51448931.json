{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51448931.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51448931"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "Awesome! Thank you for bringing it up, somehow I didn't find it myself.\n\nI tried using your implementation in cbffcbd. It is much handier than the awkward C++-style biz, although still requires one intermediate step of converting pure `bytes` to `ndarray`.\n\nIt looks like specifying both zlib and numpress flags works with MSConvert, but instead of designated terms you get this:\n\n```\n<cvParam cvRef=\"MS\" accession=\"MS:1000574\" name=\"zlib compression\" value=\"\"/>\n<cvParam cvRef=\"MS\" accession=\"MS:1002314\" name=\"MS-Numpress short logged float compression\" value=\"\"/>\n<cvParam cvRef=\"MS\" accession=\"MS:1000515\" name=\"intensity array\" value=\"\" unitCvRef=\"MS\" unitAccession=\"MS:1000131\" unitName=\"number of detector counts\"/>\n```\n\nThis is of course not handled correctly by Pyteomics.", "markup": "markdown", "html": "<p>Awesome! Thank you for bringing it up, somehow I didn't find it myself.</p>\n<p>I tried using your implementation in <a href=\"#!/levitsky/pyteomics/commits/cbffcbd\" rel=\"nofollow\" class=\"ap-connect-link\">cbffcbd</a>. It is much handier than the awkward C++-style biz, although still requires one intermediate step of converting pure <code>bytes</code> to <code>ndarray</code>.</p>\n<p>It looks like specifying both zlib and numpress flags works with MSConvert, but instead of designated terms you get this:</p>\n<div class=\"codehilite\"><pre><span></span>&lt;cvParam cvRef=&quot;MS&quot; accession=&quot;MS:1000574&quot; name=&quot;zlib compression&quot; value=&quot;&quot;/&gt;\n&lt;cvParam cvRef=&quot;MS&quot; accession=&quot;MS:1002314&quot; name=&quot;MS-Numpress short logged float compression&quot; value=&quot;&quot;/&gt;\n&lt;cvParam cvRef=&quot;MS&quot; accession=&quot;MS:1000515&quot; name=&quot;intensity array&quot; value=&quot;&quot; unitCvRef=&quot;MS&quot; unitAccession=&quot;MS:1000131&quot; unitName=&quot;number of detector counts&quot;/&gt;\n</pre></div>\n\n\n<p>This is of course not handled correctly by Pyteomics.</p>", "type": "rendered"}, "created_on": "2019-04-02T15:30:47.474998+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 51448931}