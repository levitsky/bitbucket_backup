{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments/51435621.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37#comment-51435621"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}}, "type": "issue", "id": 37, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Add numpress support in mzML"}, "content": {"raw": "PyMSNumpress is idiomatically C++, making it much slower for Python. I adapted it to be more Python/NumPy friendly: https://github.com/mobiusklein/pynumpress/blob/master/pynumpress/pynumpress.pyx. It should do away with the need to load the output numerical array as a list, and then convert the list into a NumPy array.\n\nAlso, there are layered compression schemes in the controlled vocabulary. I don't know if Proteowizard supports them yet though:\n```\n\n[Term]\nid: MS:1002746\nname: MS-Numpress linear prediction compression followed by zlib compression\ndef: \"Compression using MS-Numpress linear prediction compression and zlib.\" [https://github.com/ms-numpress/ms-numpress]\nis_a: MS:1000572 ! binary data compression type\n\n[Term]\nid: MS:1002747\nname: MS-Numpress positive integer compression followed by zlib compression\ndef: \"Compression using MS-Numpress positive integer compression and zlib.\" [https://github.com/ms-numpress/ms-numpress]\nis_a: MS:1000572 ! binary data compression type\n\n[Term]\nid: MS:1002748\nname: MS-Numpress short logged float compression followed by zlib compression\ndef: \"Compression using MS-Numpress short logged float compression and zlib.\" [https://github.com/ms-numpress/ms-numpress]\nis_a: MS:1000572 ! binary data compression type\n```", "markup": "markdown", "html": "<p>PyMSNumpress is idiomatically C++, making it much slower for Python. I adapted it to be more Python/NumPy friendly: <a href=\"https://github.com/mobiusklein/pynumpress/blob/master/pynumpress/pynumpress.pyx\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/mobiusklein/pynumpress/blob/master/pynumpress/pynumpress.pyx</a>. It should do away with the need to load the output numerical array as a list, and then convert the list into a NumPy array.</p>\n<p>Also, there are layered compression schemes in the controlled vocabulary. I don't know if Proteowizard supports them yet though:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">[Term]</span>\n<span class=\"na\">id: MS:1002746</span>\n<span class=\"na\">name: MS-Numpress linear prediction compression followed by zlib compression</span>\n<span class=\"na\">def: &quot;Compression using MS-Numpress linear prediction compression and zlib.&quot; [https://github.com/ms-numpress/ms-numpress]</span>\n<span class=\"na\">is_a: MS:1000572 ! binary data compression type</span>\n\n<span class=\"k\">[Term]</span>\n<span class=\"na\">id: MS:1002747</span>\n<span class=\"na\">name: MS-Numpress positive integer compression followed by zlib compression</span>\n<span class=\"na\">def: &quot;Compression using MS-Numpress positive integer compression and zlib.&quot; [https://github.com/ms-numpress/ms-numpress]</span>\n<span class=\"na\">is_a: MS:1000572 ! binary data compression type</span>\n\n<span class=\"k\">[Term]</span>\n<span class=\"na\">id: MS:1002748</span>\n<span class=\"na\">name: MS-Numpress short logged float compression followed by zlib compression</span>\n<span class=\"na\">def: &quot;Compression using MS-Numpress short logged float compression and zlib.&quot; [https://github.com/ms-numpress/ms-numpress]</span>\n<span class=\"na\">is_a: MS:1000572 ! binary data compression type</span>\n</pre></div>", "type": "rendered"}, "created_on": "2019-04-02T00:23:22.330407+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 51435621}