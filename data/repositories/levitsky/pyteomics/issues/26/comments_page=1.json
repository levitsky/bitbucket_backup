{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26/comments/45342292.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/26#comment-45342292"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26.json"}}, "type": "issue", "id": 26, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzXML reader"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2018-05-09T20:19:20.572744+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 45342292}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26/comments/45343093.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/26#comment-45343093"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26.json"}}, "type": "issue", "id": 26, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzXML reader"}, "content": {"raw": "Hello, here is a minimal example showing how to retrieve a scan by its `'num'` attribute:\n\n\n```\n#!python\n\nIn [1]: from pyteomics import mzxml\n\nIn [2]: f = mzxml.MzXML('tests/test.mzXML')\n\nIn [3]: f['19']\n```\n\nThis will print the dict corresponding to the `<scan>` with `num='19'` (see the test file included in the repository).\n\nAlternatively, you can do:\n\n\n```\n#!python\n\nf.get_by_id('19')\n```\n\nwhich will give the same result.\n\nAs a second argument to `get_by_id`, you can specify the attribute name to use for lookup instead of `'num'`.", "markup": "markdown", "html": "<p>Hello, here is a minimal example showing how to retrieve a scan by its <code>'num'</code> attribute:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">pyteomics</span> <span class=\"kn\">import</span> <span class=\"n\">mzxml</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">mzxml</span><span class=\"o\">.</span><span class=\"n\">MzXML</span><span class=\"p\">(</span><span class=\"s1\">&#39;tests/test.mzXML&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"s1\">&#39;19&#39;</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>This will print the dict corresponding to the <code>&lt;scan&gt;</code> with <code>num='19'</code> (see the test file included in the repository).</p>\n<p>Alternatively, you can do:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">get_by_id</span><span class=\"p\">(</span><span class=\"s1\">&#39;19&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>which will give the same result.</p>\n<p>As a second argument to <code>get_by_id</code>, you can specify the attribute name to use for lookup instead of <code>'num'</code>.</p>", "type": "rendered"}, "created_on": "2018-05-09T21:26:40.799395+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 45343093}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26/comments/45343415.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/26#comment-45343415"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26.json"}}, "type": "issue", "id": 26, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzXML reader"}, "content": {"raw": "Thanks a lot for the fast reply. When I tried it on my example mzXML, it output the folllowing:\n{'id': '19', 'offset': '18933'}\n\nIs this normal?\n\nWhat I would like to obtain is the information for scan number '19'. Desired return data in XML is given below:\n\n  <scan num=\"19\"\n   msLevel=\"1\"\n   scanEvent=\"0\"\n   masterIndex=\"-1\"\n   peaksCount=\"1\"\n   ionInjectionTime=\"100\"\n   elapsedScanTime=\"0.0408431\"\n   polarity=\"+\"\n   scanType=\"Z\"\n   filterLine=\"FTMS + c NSI SIM ms [1025.90-1029.90]\"\n   filterLine_analyzer=\"FTMS\"\n   filterLine_activation_type=\"CID\"\n   filterLine_low_m_z=\"1025.9\"\n   filterLine_high_m_z=\"1029.9\"\n   filterLine_activation_energy=\"-1\"\n   retentionTime=\"PT3.80985S\"\n   startMz=\"1025.9\"\n   endMz=\"1029.9\"\n   lowMz=\"1027.01\"\n   highMz=\"1027.01\"\n   basePeakMz=\"1027.01\"\n   basePeakIntensity=\"1304.58\"\n   totIonCurrent=\"1304.75\" >\n   <peaks precision=\"32\"\n    byteOrder=\"network\"\n    contentType=\"m/z-int\"\n    compressionType=\"none\"\n    compressedLen=\"0\" >RIBgQESjEnk=</peaks>\n   <labelData precision=\"32\"\n    byteOrder=\"network\"\n    contentType=\"m/z-int\"\n    compressionType=\"none\"\n    compressedLen=\"0\"\n    numDataPoints=\"1\" >RIBgQEILZIBEoBwO</labelData>\n  </scan>", "markup": "markdown", "html": "<p>Thanks a lot for the fast reply. When I tried it on my example mzXML, it output the folllowing:\n{'id': '19', 'offset': '18933'}</p>\n<p>Is this normal?</p>\n<p>What I would like to obtain is the information for scan number '19'. Desired return data in XML is given below:</p>\n<p>&lt;scan num=\"19\"\n   msLevel=\"1\"\n   scanEvent=\"0\"\n   masterIndex=\"-1\"\n   peaksCount=\"1\"\n   ionInjectionTime=\"100\"\n   elapsedScanTime=\"0.<a href=\"#!/levitsky/pyteomics/commits/0408431\" rel=\"nofollow\" class=\"ap-connect-link\">0408431</a>\"\n   polarity=\"+\"\n   scanType=\"Z\"\n   filterLine=\"FTMS + c NSI SIM ms [1025.90-1029.90]\"\n   filterLine_analyzer=\"FTMS\"\n   filterLine_activation_type=\"CID\"\n   filterLine_low_m_z=\"1025.9\"\n   filterLine_high_m_z=\"1029.9\"\n   filterLine_activation_energy=\"-1\"\n   retentionTime=\"PT3.80985S\"\n   startMz=\"1025.9\"\n   endMz=\"1029.9\"\n   lowMz=\"1027.01\"\n   highMz=\"1027.01\"\n   basePeakMz=\"1027.01\"\n   basePeakIntensity=\"1304.58\"\n   totIonCurrent=\"1304.75\" &gt;\n   &lt;peaks precision=\"32\"\n    byteOrder=\"network\"\n    contentType=\"m/z-int\"\n    compressionType=\"none\"\n    compressedLen=\"0\" &gt;RIBgQESjEnk=&lt;/peaks&gt;\n   &lt;labelData precision=\"32\"\n    byteOrder=\"network\"\n    contentType=\"m/z-int\"\n    compressionType=\"none\"\n    compressedLen=\"0\"\n    numDataPoints=\"1\" &gt;RIBgQEILZIBEoBwO&lt;/labelData&gt;\n  &lt;/scan&gt;</p>", "type": "rendered"}, "created_on": "2018-05-09T21:54:19.668472+00:00", "user": {"display_name": "lubwen", "uuid": "{c752b9e8-f6dc-4d32-b0fb-09866d73a7cd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc752b9e8-f6dc-4d32-b0fb-09866d73a7cd%7D"}, "html": {"href": "https://bitbucket.org/%7Bc752b9e8-f6dc-4d32-b0fb-09866d73a7cd%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/500475aaf839ad9d7619b00022424f90d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsL-2.png"}}, "nickname": "lubwen", "type": "user", "account_id": "5af36d1baee07a11b87fc9a9"}, "updated_on": "2018-05-09T21:54:55.052221+00:00", "type": "issue_comment", "id": 45343415}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26/comments/45343727.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/26#comment-45343727"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26.json"}}, "type": "issue", "id": 26, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzXML reader"}, "content": {"raw": "Since it returned something with `id='19'` rather than `num='19'`, I suspect that you are using the parser which defaults to `'id'` as the scan ID key. That would be the case if you are using the latest release version, as opposed to the development version of pyteomics. This issue was discussed [on our mailing list](https://groups.google.com/forum/#!topic/pyteomics/MbCNisVtq4Q), and unfortunately there hasn't been a new release since then.\n\nIf that is the case, you should be able to get the correct result by explicitly specifying `'num'` as the ID key:\n\n\n```\n#!python\n\nf.get_by_id('19', 'num')\n```\n\n... or by installing the latest pyteomics version from the repository.\n\nIf neither of those help, please share the example file and we'll look into the problem.", "markup": "markdown", "html": "<p>Since it returned something with <code>id='19'</code> rather than <code>num='19'</code>, I suspect that you are using the parser which defaults to <code>'id'</code> as the scan ID key. That would be the case if you are using the latest release version, as opposed to the development version of pyteomics. This issue was discussed <a data-is-external-link=\"true\" href=\"https://groups.google.com/forum/#!topic/pyteomics/MbCNisVtq4Q\" rel=\"nofollow\">on our mailing list</a>, and unfortunately there hasn't been a new release since then.</p>\n<p>If that is the case, you should be able to get the correct result by explicitly specifying <code>'num'</code> as the ID key:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">get_by_id</span><span class=\"p\">(</span><span class=\"s1\">&#39;19&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;num&#39;</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>... or by installing the latest pyteomics version from the repository.</p>\n<p>If neither of those help, please share the example file and we'll look into the problem.</p>", "type": "rendered"}, "created_on": "2018-05-09T22:28:36.368556+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 45343727}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26/comments/45343783.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/26#comment-45343783"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26.json"}}, "type": "issue", "id": 26, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzXML reader"}, "content": {"raw": "Specifying 'num' as the ID key works. \nThanks a lot. \nBest regards,", "markup": "markdown", "html": "<p>Specifying 'num' as the ID key works. \nThanks a lot. \nBest regards,</p>", "type": "rendered"}, "created_on": "2018-05-09T22:34:56.931627+00:00", "user": {"display_name": "lubwen", "uuid": "{c752b9e8-f6dc-4d32-b0fb-09866d73a7cd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc752b9e8-f6dc-4d32-b0fb-09866d73a7cd%7D"}, "html": {"href": "https://bitbucket.org/%7Bc752b9e8-f6dc-4d32-b0fb-09866d73a7cd%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/500475aaf839ad9d7619b00022424f90d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsL-2.png"}}, "nickname": "lubwen", "type": "user", "account_id": "5af36d1baee07a11b87fc9a9"}, "updated_on": null, "type": "issue_comment", "id": 45343783}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26/comments/45344327.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/26#comment-45344327"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26.json"}}, "type": "issue", "id": 26, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzXML reader"}, "content": {"raw": "Thanks again for the nice work. The mz array and intensity array I obtained from 'get_by_id' are somewhat abbreviated like this:\n\nm/z array\n[  300.23007202   300.88702393   302.18899536 ...,  1946.82299805\n  1968.59606934  1999.88500977]\n\n\nintensity array\n[ 14.15967369  20.15131378   5.67225409 ...,   5.34055567   5.00847483\n  16.29590607]\n\nWhat I like to have are the complete arrays. Any advice on how to do that is appreciated. Or let me know if I did something wrong here?", "markup": "markdown", "html": "<p>Thanks again for the nice work. The mz array and intensity array I obtained from 'get_by_id' are somewhat abbreviated like this:</p>\n<p>m/z array\n[  300.<a href=\"#!/levitsky/pyteomics/commits/23007202\" rel=\"nofollow\" class=\"ap-connect-link\">23007202</a>   300.<a href=\"#!/levitsky/pyteomics/commits/88702393\" rel=\"nofollow\" class=\"ap-connect-link\">88702393</a>   302.<a href=\"#!/levitsky/pyteomics/commits/18899536\" rel=\"nofollow\" class=\"ap-connect-link\">18899536</a> ...,  1946.<a href=\"#!/levitsky/pyteomics/commits/82299805\" rel=\"nofollow\" class=\"ap-connect-link\">82299805</a>\n  1968.<a href=\"#!/levitsky/pyteomics/commits/59606934\" rel=\"nofollow\" class=\"ap-connect-link\">59606934</a>  1999.<a href=\"#!/levitsky/pyteomics/commits/88500977\" rel=\"nofollow\" class=\"ap-connect-link\">88500977</a>]</p>\n<p>intensity array\n[ 14.<a href=\"#!/levitsky/pyteomics/commits/15967369\" rel=\"nofollow\" class=\"ap-connect-link\">15967369</a>  20.<a href=\"#!/levitsky/pyteomics/commits/15131378\" rel=\"nofollow\" class=\"ap-connect-link\">15131378</a>   5.<a href=\"#!/levitsky/pyteomics/commits/67225409\" rel=\"nofollow\" class=\"ap-connect-link\">67225409</a> ...,   5.<a href=\"#!/levitsky/pyteomics/commits/34055567\" rel=\"nofollow\" class=\"ap-connect-link\">34055567</a>   5.<a href=\"#!/levitsky/pyteomics/commits/00847483\" rel=\"nofollow\" class=\"ap-connect-link\">00847483</a>\n  16.<a href=\"#!/levitsky/pyteomics/commits/29590607\" rel=\"nofollow\" class=\"ap-connect-link\">29590607</a>]</p>\n<p>What I like to have are the complete arrays. Any advice on how to do that is appreciated. Or let me know if I did something wrong here?</p>", "type": "rendered"}, "created_on": "2018-05-10T00:02:16.730459+00:00", "user": {"display_name": "lubwen", "uuid": "{c752b9e8-f6dc-4d32-b0fb-09866d73a7cd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc752b9e8-f6dc-4d32-b0fb-09866d73a7cd%7D"}, "html": {"href": "https://bitbucket.org/%7Bc752b9e8-f6dc-4d32-b0fb-09866d73a7cd%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/500475aaf839ad9d7619b00022424f90d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsL-2.png"}}, "nickname": "lubwen", "type": "user", "account_id": "5af36d1baee07a11b87fc9a9"}, "updated_on": null, "type": "issue_comment", "id": 45344327}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26/comments/45348629.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/26#comment-45348629"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26.json"}}, "type": "issue", "id": 26, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzXML reader"}, "content": {"raw": "This is the standard behavior of NumPy arrays. They are not printed in full, but they are there. See e.g. [this StackOverflow question](https://stackoverflow.com/q/1987694/1258041).", "markup": "markdown", "html": "<p>This is the standard behavior of NumPy arrays. They are not printed in full, but they are there. See e.g. <a data-is-external-link=\"true\" href=\"https://stackoverflow.com/q/1987694/1258041\" rel=\"nofollow\">this StackOverflow question</a>.</p>", "type": "rendered"}, "created_on": "2018-05-10T07:26:25.466454+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": "2018-05-10T07:53:38.302346+00:00", "type": "issue_comment", "id": 45348629}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26/comments/45358929.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/26#comment-45358929"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26.json"}}, "type": "issue", "id": 26, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzXML reader"}, "content": {"raw": "Thanks a lot. Best regards,", "markup": "markdown", "html": "<p>Thanks a lot. Best regards,</p>", "type": "rendered"}, "created_on": "2018-05-10T15:36:38.636588+00:00", "user": {"display_name": "lubwen", "uuid": "{c752b9e8-f6dc-4d32-b0fb-09866d73a7cd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc752b9e8-f6dc-4d32-b0fb-09866d73a7cd%7D"}, "html": {"href": "https://bitbucket.org/%7Bc752b9e8-f6dc-4d32-b0fb-09866d73a7cd%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/500475aaf839ad9d7619b00022424f90d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsL-2.png"}}, "nickname": "lubwen", "type": "user", "account_id": "5af36d1baee07a11b87fc9a9"}, "updated_on": null, "type": "issue_comment", "id": 45358929}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26/comments/45380856.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/26#comment-45380856"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26.json"}}, "type": "issue", "id": 26, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzXML reader"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2018-05-11T15:07:05.291559+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 45380856}], "page": 1, "size": 9}