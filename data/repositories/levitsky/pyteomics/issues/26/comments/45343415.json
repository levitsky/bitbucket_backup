{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26/comments/45343415.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/26#comment-45343415"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/26.json"}}, "type": "issue", "id": 26, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzXML reader"}, "content": {"raw": "Thanks a lot for the fast reply. When I tried it on my example mzXML, it output the folllowing:\n{'id': '19', 'offset': '18933'}\n\nIs this normal?\n\nWhat I would like to obtain is the information for scan number '19'. Desired return data in XML is given below:\n\n  <scan num=\"19\"\n   msLevel=\"1\"\n   scanEvent=\"0\"\n   masterIndex=\"-1\"\n   peaksCount=\"1\"\n   ionInjectionTime=\"100\"\n   elapsedScanTime=\"0.0408431\"\n   polarity=\"+\"\n   scanType=\"Z\"\n   filterLine=\"FTMS + c NSI SIM ms [1025.90-1029.90]\"\n   filterLine_analyzer=\"FTMS\"\n   filterLine_activation_type=\"CID\"\n   filterLine_low_m_z=\"1025.9\"\n   filterLine_high_m_z=\"1029.9\"\n   filterLine_activation_energy=\"-1\"\n   retentionTime=\"PT3.80985S\"\n   startMz=\"1025.9\"\n   endMz=\"1029.9\"\n   lowMz=\"1027.01\"\n   highMz=\"1027.01\"\n   basePeakMz=\"1027.01\"\n   basePeakIntensity=\"1304.58\"\n   totIonCurrent=\"1304.75\" >\n   <peaks precision=\"32\"\n    byteOrder=\"network\"\n    contentType=\"m/z-int\"\n    compressionType=\"none\"\n    compressedLen=\"0\" >RIBgQESjEnk=</peaks>\n   <labelData precision=\"32\"\n    byteOrder=\"network\"\n    contentType=\"m/z-int\"\n    compressionType=\"none\"\n    compressedLen=\"0\"\n    numDataPoints=\"1\" >RIBgQEILZIBEoBwO</labelData>\n  </scan>", "markup": "markdown", "html": "<p>Thanks a lot for the fast reply. When I tried it on my example mzXML, it output the folllowing:\n{'id': '19', 'offset': '18933'}</p>\n<p>Is this normal?</p>\n<p>What I would like to obtain is the information for scan number '19'. Desired return data in XML is given below:</p>\n<p>&lt;scan num=\"19\"\n   msLevel=\"1\"\n   scanEvent=\"0\"\n   masterIndex=\"-1\"\n   peaksCount=\"1\"\n   ionInjectionTime=\"100\"\n   elapsedScanTime=\"0.<a href=\"#!/levitsky/pyteomics/commits/0408431\" rel=\"nofollow\" class=\"ap-connect-link\">0408431</a>\"\n   polarity=\"+\"\n   scanType=\"Z\"\n   filterLine=\"FTMS + c NSI SIM ms [1025.90-1029.90]\"\n   filterLine_analyzer=\"FTMS\"\n   filterLine_activation_type=\"CID\"\n   filterLine_low_m_z=\"1025.9\"\n   filterLine_high_m_z=\"1029.9\"\n   filterLine_activation_energy=\"-1\"\n   retentionTime=\"PT3.80985S\"\n   startMz=\"1025.9\"\n   endMz=\"1029.9\"\n   lowMz=\"1027.01\"\n   highMz=\"1027.01\"\n   basePeakMz=\"1027.01\"\n   basePeakIntensity=\"1304.58\"\n   totIonCurrent=\"1304.75\" &gt;\n   &lt;peaks precision=\"32\"\n    byteOrder=\"network\"\n    contentType=\"m/z-int\"\n    compressionType=\"none\"\n    compressedLen=\"0\" &gt;RIBgQESjEnk=&lt;/peaks&gt;\n   &lt;labelData precision=\"32\"\n    byteOrder=\"network\"\n    contentType=\"m/z-int\"\n    compressionType=\"none\"\n    compressedLen=\"0\"\n    numDataPoints=\"1\" &gt;RIBgQEILZIBEoBwO&lt;/labelData&gt;\n  &lt;/scan&gt;</p>", "type": "rendered"}, "created_on": "2018-05-09T21:54:19.668472+00:00", "user": {"display_name": "lubwen", "uuid": "{c752b9e8-f6dc-4d32-b0fb-09866d73a7cd}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc752b9e8-f6dc-4d32-b0fb-09866d73a7cd%7D"}, "html": {"href": "https://bitbucket.org/%7Bc752b9e8-f6dc-4d32-b0fb-09866d73a7cd%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/500475aaf839ad9d7619b00022424f90d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsL-2.png"}}, "nickname": "lubwen", "type": "user", "account_id": "5af36d1baee07a11b87fc9a9"}, "updated_on": "2018-05-09T21:54:55.052221+00:00", "type": "issue_comment", "id": 45343415}