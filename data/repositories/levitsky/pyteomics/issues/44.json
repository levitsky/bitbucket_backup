{"priority": "minor", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "links": {"attachments": {"href": "data/repositories/levitsky/pyteomics/issues/44/attachments_page=1.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/issues/44.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/issues/44/watch"}, "comments": {"href": "data/repositories/levitsky/pyteomics/issues/44/comments_page=1.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/44/multiprocessing-queue-maxsize-too-large"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/issues/44/vote"}}, "reporter": {"display_name": "Will Fondrie", "uuid": "{bd46207e-6e18-410d-8eb9-8e8b0cfc8048}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bbd46207e-6e18-410d-8eb9-8e8b0cfc8048%7D"}, "html": {"href": "https://bitbucket.org/%7Bbd46207e-6e18-410d-8eb9-8e8b0cfc8048%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ef8b9dd3cbea3a9b5c9fb40afd0da5d0d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsWF-4.png"}}, "nickname": "wfondrie", "type": "user", "account_id": "557058:9a8caef5-c480-445b-8104-16aba2db1e8b"}, "title": "Multiprocessing Queue maxsize too large for MacOS", "component": null, "votes": 0, "watches": 1, "content": {"raw": "When attempting to use the `pyteomics.mzml.MzML.map()` method on MacOS, I ran into the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"read.py\", line 37, in <module>\r\n    x = test(\"test.mzML\")\r\n  File \"read.py\", line 28, in test\r\n    for f in mzml_data.map():\r\n  File \"/Users/wfondrie/anaconda3/lib/python3.7/site-packages/pyteomics/auxiliary/file_helpers.py\", line 1012, in map\r\n    in_queue = mp.Queue(int(1e7))\r\n  File \"/Users/wfondrie/anaconda3/lib/python3.7/multiprocessing/context.py\", line 102, in Queue\r\n    return Queue(maxsize, ctx=self.get_context())\r\n  File \"/Users/wfondrie/anaconda3/lib/python3.7/multiprocessing/queues.py\", line 48, in __init__\r\n    self._sem = ctx.BoundedSemaphore(maxsize)\r\n  File \"/Users/wfondrie/anaconda3/lib/python3.7/multiprocessing/context.py\", line 87, in BoundedSemaphore\r\n    return BoundedSemaphore(value, ctx=self.get_context())\r\n  File \"/Users/wfondrie/anaconda3/lib/python3.7/multiprocessing/synchronize.py\", line 145, in __init__\r\n    SemLock.__init__(self, SEMAPHORE, value, value, ctx=ctx)\r\n  File \"/Users/wfondrie/anaconda3/lib/python3.7/multiprocessing/synchronize.py\", line 59, in __init__\r\n    unlink_now)\r\nOSError: [Errno 22] Invalid argument\r\n```\r\n\r\nOn MacOS, it seems the maximum size for `mp.Queue()` is capped at 32767 \\(or 2^15 - 1, the largest 16-bit integer\\). What would be the effects of making the following change to `auxiliary/file_helpers.py`?\r\n\r\n```python\r\n# Current lines 1012 & 1013:\r\n        in_queue = mp.Queue(int(1e7))\r\n        out_queue = mp.Queue(int(1e7))\r\n\r\n# Proposed change:\r\n        in_queue = mp.Queue(32767)\r\n        out_queue = mp.Queue(32767)\r\n```", "markup": "markdown", "html": "<p>When attempting to use the <code>pyteomics.mzml.MzML.map()</code> method on MacOS, I ran into the following error:</p>\n<div class=\"codehilite\"><pre><span></span>Traceback (most recent call last):\n  File &quot;read.py&quot;, line 37, in &lt;module&gt;\n    x = test(&quot;test.mzML&quot;)\n  File &quot;read.py&quot;, line 28, in test\n    for f in mzml_data.map():\n  File &quot;/Users/wfondrie/anaconda3/lib/python3.7/site-packages/pyteomics/auxiliary/file_helpers.py&quot;, line 1012, in map\n    in_queue = mp.Queue(int(1e7))\n  File &quot;/Users/wfondrie/anaconda3/lib/python3.7/multiprocessing/context.py&quot;, line 102, in Queue\n    return Queue(maxsize, ctx=self.get_context())\n  File &quot;/Users/wfondrie/anaconda3/lib/python3.7/multiprocessing/queues.py&quot;, line 48, in __init__\n    self._sem = ctx.BoundedSemaphore(maxsize)\n  File &quot;/Users/wfondrie/anaconda3/lib/python3.7/multiprocessing/context.py&quot;, line 87, in BoundedSemaphore\n    return BoundedSemaphore(value, ctx=self.get_context())\n  File &quot;/Users/wfondrie/anaconda3/lib/python3.7/multiprocessing/synchronize.py&quot;, line 145, in __init__\n    SemLock.__init__(self, SEMAPHORE, value, value, ctx=ctx)\n  File &quot;/Users/wfondrie/anaconda3/lib/python3.7/multiprocessing/synchronize.py&quot;, line 59, in __init__\n    unlink_now)\nOSError: [Errno 22] Invalid argument\n</pre></div>\n\n\n<p>On MacOS, it seems the maximum size for <code>mp.Queue()</code> is capped at 32767 (or 2^15 - 1, the largest 16-bit integer). What would be the effects of making the following change to <code>auxiliary/file_helpers.py</code>?</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"c1\"># Current lines 1012 &amp; 1013:</span>\n        <span class=\"n\">in_queue</span> <span class=\"o\">=</span> <span class=\"n\">mp</span><span class=\"o\">.</span><span class=\"n\">Queue</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mf\">1e7</span><span class=\"p\">))</span>\n        <span class=\"n\">out_queue</span> <span class=\"o\">=</span> <span class=\"n\">mp</span><span class=\"o\">.</span><span class=\"n\">Queue</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mf\">1e7</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Proposed change:</span>\n        <span class=\"n\">in_queue</span> <span class=\"o\">=</span> <span class=\"n\">mp</span><span class=\"o\">.</span><span class=\"n\">Queue</span><span class=\"p\">(</span><span class=\"mi\">32767</span><span class=\"p\">)</span>\n        <span class=\"n\">out_queue</span> <span class=\"o\">=</span> <span class=\"n\">mp</span><span class=\"o\">.</span><span class=\"n\">Queue</span><span class=\"p\">(</span><span class=\"mi\">32767</span><span class=\"p\">)</span>\n</pre></div>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-08-18T21:08:04.002242+00:00", "milestone": null, "updated_on": "2019-11-30T20:16:25.398499+00:00", "type": "issue", "id": 44}