{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53622479.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53622479"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Hi Carolina,\n\nthank you for the kindness, I\u2019m glad pyteomics is helpful in your work. Your request pertains to `pyteomics.cythonize`, which is written and [maintained separately](https://github.com/mobiusklein/pyteomics.cythonize) by @{557058:ff82222f-afe5-4135-a1b7-8de99a00f669} \\(which is very much appreciated\\).\n\nLet\u2019s see what he has to say about this.", "markup": "markdown", "html": "<p>Hi Carolina,</p>\n<p>thank you for the kindness, I\u2019m glad pyteomics is helpful in your work. Your request pertains to <code>pyteomics.cythonize</code>, which is written and <a data-is-external-link=\"true\" href=\"https://github.com/mobiusklein/pyteomics.cythonize\" rel=\"nofollow\">maintained separately</a> by <span class=\"ap-mention\" data-atlassian-id=\"557058:ff82222f-afe5-4135-a1b7-8de99a00f669\">@Joshua Klein</span> (which is very much appreciated).</p>\n<p>Let\u2019s see what he has to say about this.</p>", "type": "rendered"}, "created_on": "2019-08-27T20:49:17.919043+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 53622479}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53622512.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53622512"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Thank you Lev for passing along the info to Joshua! I will be looking forward for a positive response.", "markup": "markdown", "html": "<p>Thank you Lev for passing along the info to Joshua! I will be looking forward for a positive response.</p>", "type": "rendered"}, "created_on": "2019-08-27T20:53:38.732654+00:00", "user": {"display_name": "Carolina Rojas Ramirez", "uuid": "{da497e9e-eafd-4d28-a0fc-6cb8f16d0260}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D"}, "html": {"href": "https://bitbucket.org/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f3a0aaa19bbaf653952441586f3f4b0ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-1.png"}}, "nickname": "MSChemicalGeek", "type": "user", "account_id": "5b71cbac6ae601076b7a1a12"}, "updated_on": null, "type": "issue_comment", "id": 53622512}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53624561.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53624561"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "It looks like `isoforms` should be amenable to optimization. I have my own, less sane, implementation that I might borrow from. Do you use large sequences \\(like intact proteins\\) or large numbers of variable modifications? I can use this information when selecting strategies to optimize for.", "markup": "markdown", "html": "<p>It looks like <code>isoforms</code> should be amenable to optimization. I have my own, less sane, implementation that I might borrow from. Do you use large sequences (like intact proteins) or large numbers of variable modifications? I can use this information when selecting strategies to optimize for.</p>", "type": "rendered"}, "created_on": "2019-08-28T00:14:58.736505+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 53624561}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53624606.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53624606"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Hello, Joshua\n\nThat would be great!! Indeed I do native topdown sequencing and I have both large sequences \\(70-200 residues\\) and several variable modifications at once. I have encountered several memory crashes at this point. \n\nCarolina", "markup": "markdown", "html": "<p>Hello, Joshua</p>\n<p>That would be great!! Indeed I do native topdown sequencing and I have both large sequences (70-200 residues) and several variable modifications at once. I have encountered several memory crashes at this point. </p>\n<p>Carolina</p>", "type": "rendered"}, "created_on": "2019-08-28T00:25:09.572700+00:00", "user": {"display_name": "Carolina Rojas Ramirez", "uuid": "{da497e9e-eafd-4d28-a0fc-6cb8f16d0260}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D"}, "html": {"href": "https://bitbucket.org/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f3a0aaa19bbaf653952441586f3f4b0ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-1.png"}}, "nickname": "MSChemicalGeek", "type": "user", "account_id": "5b71cbac6ae601076b7a1a12"}, "updated_on": null, "type": "issue_comment", "id": 53624606}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53624743.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53624743"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Okay, it sounds like you\u2019ll want to retain the lazy generation of the proteoforms then. Do you store all the generated sequences in memory, or is something else causing the memory inflation?", "markup": "markdown", "html": "<p>Okay, it sounds like you\u2019ll want to retain the lazy generation of the proteoforms then. Do you store all the generated sequences in memory, or is something else causing the memory inflation?</p>", "type": "rendered"}, "created_on": "2019-08-28T00:50:53.335779+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 53624743}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53625368.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53625368"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "I am currently implementing pyteomics in a group of python scripts, which has worked fine for generating theoretical ions with several charges and several ion types from large sequences \\(e.g Bovine Serum Albumin\\). Things slow down once I start adding modifications, in which at the core of this part of code is the isoform module.\n\nAll the generated isoforms are then further modified to obtain double modified residues at the termini, if needed, and then they are used to generate theoretical ions. The list of ions are then \u201cdumped\u201d into a file using the pickle package. This non-text file will be used for current and future peak matching analysis \\(for only one protein\\). This is a brief summary of what happens in our predictor module.\n\nDoes this answer your question? I have minimal background in programming and computer science. Currently, I am the only one working on optimizing this code \\(inherited from my now graduated mentor\\). My apologies if the procedure above might sound terribly inefficient.\n\nThank you so much for your help!", "markup": "markdown", "html": "<p>I am currently implementing pyteomics in a group of python scripts, which has worked fine for generating theoretical ions with several charges and several ion types from large sequences (e.g Bovine Serum Albumin). Things slow down once I start adding modifications, in which at the core of this part of code is the isoform module.</p>\n<p>All the generated isoforms are then further modified to obtain double modified residues at the termini, if needed, and then they are used to generate theoretical ions. The list of ions are then \u201cdumped\u201d into a file using the pickle package. This non-text file will be used for current and future peak matching analysis (for only one protein). This is a brief summary of what happens in our predictor module.</p>\n<p>Does this answer your question? I have minimal background in programming and computer science. Currently, I am the only one working on optimizing this code (inherited from my now graduated mentor). My apologies if the procedure above might sound terribly inefficient.</p>\n<p>Thank you so much for your help!</p>", "type": "rendered"}, "created_on": "2019-08-28T02:22:18.060958+00:00", "user": {"display_name": "Carolina Rojas Ramirez", "uuid": "{da497e9e-eafd-4d28-a0fc-6cb8f16d0260}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D"}, "html": {"href": "https://bitbucket.org/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f3a0aaa19bbaf653952441586f3f4b0ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-1.png"}}, "nickname": "MSChemicalGeek", "type": "user", "account_id": "5b71cbac6ae601076b7a1a12"}, "updated_on": null, "type": "issue_comment", "id": 53625368}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53700945.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53700945"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "After a few tries, I've observed that the two real bottleneck are re-allocating the `list` that holds the sequence, and manipulating the sequence structure. Using static typing and a data structure that knows more about its terminal modification state, manipulating the sequence structure is reasonably quick, around 50% faster. \n\nThe other bottleneck is harder to fix without totally changing the function's behavior. When you use the existing `isoforms` function, each iteration has to copy the entire sequence list, and then replace the positions to be modified in that next iteration. For short sequences, that copy operation is negligible, but for long sequences like the ones you\u2019re dealing with, the copy operation is way more expensive than applying the modifications. If I could assume that the list was not going to be saved without an external copy being made in the next iteration, I could probably get another 40-50% improvement by just re-using the existing list from one iteration to the next. It does complicate the book keeping slightly though.", "markup": "markdown", "html": "<p>After a few tries, I've observed that the two real bottleneck are re-allocating the <code>list</code> that holds the sequence, and manipulating the sequence structure. Using static typing and a data structure that knows more about its terminal modification state, manipulating the sequence structure is reasonably quick, around 50% faster. </p>\n<p>The other bottleneck is harder to fix without totally changing the function's behavior. When you use the existing <code>isoforms</code> function, each iteration has to copy the entire sequence list, and then replace the positions to be modified in that next iteration. For short sequences, that copy operation is negligible, but for long sequences like the ones you\u2019re dealing with, the copy operation is way more expensive than applying the modifications. If I could assume that the list was not going to be saved without an external copy being made in the next iteration, I could probably get another 40-50% improvement by just re-using the existing list from one iteration to the next. It does complicate the book keeping slightly though.</p>", "type": "rendered"}, "created_on": "2019-09-01T22:14:18.450370+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 53700945}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53700996.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53700996"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Hello, Joshua\n\nWhile thinking about your questions these last couple of days, I went ahead and replaced two of the functions with generator functions \\(two whole days of research\\). So now, I have no memory crashes. It does still take its dear time to calculate though \\(I had to really limit my search space and expect some missed identifications\\). Thank you for your feedback.", "markup": "markdown", "html": "<p>Hello, Joshua</p>\n<p>While thinking about your questions these last couple of days, I went ahead and replaced two of the functions with generator functions (two whole days of research). So now, I have no memory crashes. It does still take its dear time to calculate though (I had to really limit my search space and expect some missed identifications). Thank you for your feedback.</p>", "type": "rendered"}, "created_on": "2019-09-01T22:26:57.586944+00:00", "user": {"display_name": "Carolina Rojas Ramirez", "uuid": "{da497e9e-eafd-4d28-a0fc-6cb8f16d0260}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D"}, "html": {"href": "https://bitbucket.org/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f3a0aaa19bbaf653952441586f3f4b0ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-1.png"}}, "nickname": "MSChemicalGeek", "type": "user", "account_id": "5b71cbac6ae601076b7a1a12"}, "updated_on": "2019-09-01T22:29:51.247503+00:00", "type": "issue_comment", "id": 53700996}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53702222.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53702222"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "I\u2019ve pushed a commit to [https://github.com/mobiusklein/pyteomics.cythonize](https://github.com/mobiusklein/pyteomics.cythonize) which adds `isoforms` to `cparser`. Can you install it from source to test?", "markup": "markdown", "html": "<p>I\u2019ve pushed a commit to <a data-is-external-link=\"true\" href=\"https://github.com/mobiusklein/pyteomics.cythonize\" rel=\"nofollow\">https://github.com/mobiusklein/pyteomics.cythonize</a> which adds <code>isoforms</code> to <code>cparser</code>. Can you install it from source to test?</p>", "type": "rendered"}, "created_on": "2019-09-02T02:38:16.246860+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 53702222}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53730343.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53730343"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Thank you so much!\n\nSo, do you mean not to install by using the \u201cpip install\u201d in the terminal, right? \n\nAlso the previous occasion that I used _pyteomics.cythonize 0.2.2_ I could not use _cmass_ and _mass_ at the same time. Once the cython package is downloaded _mass_ and _parser_ become unusable. Is this normal? In the the pytemoics.cythonize PyPI website there is an example  where I can see _mass_ and _cmass_ are being used at the same time.", "markup": "markdown", "html": "<p>Thank you so much!</p>\n<p>So, do you mean not to install by using the \u201cpip install\u201d in the terminal, right? </p>\n<p>Also the previous occasion that I used <em>pyteomics.cythonize 0.2.2</em> I could not use <em>cmass</em> and <em>mass</em> at the same time. Once the cython package is downloaded <em>mass</em> and <em>parser</em> become unusable. Is this normal? In the the pytemoics.cythonize PyPI website there is an example  where I can see <em>mass</em> and <em>cmass</em> are being used at the same time.</p>", "type": "rendered"}, "created_on": "2019-09-03T17:55:12.124512+00:00", "user": {"display_name": "Carolina Rojas Ramirez", "uuid": "{da497e9e-eafd-4d28-a0fc-6cb8f16d0260}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D"}, "html": {"href": "https://bitbucket.org/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f3a0aaa19bbaf653952441586f3f4b0ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-1.png"}}, "nickname": "MSChemicalGeek", "type": "user", "account_id": "5b71cbac6ae601076b7a1a12"}, "updated_on": "2019-09-03T18:17:00.764877+00:00", "type": "issue_comment", "id": 53730343}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53730734.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53730734"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "You can install it by running \"pip install git+\nhttps://github.com/mobiusklein/pyteomics.cythonize\" from the terminal, but\nyou may not see the error message if the C compiler fails.", "markup": "markdown", "html": "<p>You can install it by running \"pip install git+\n<a href=\"https://github.com/mobiusklein/pyteomics.cythonize\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/mobiusklein/pyteomics.cythonize</a>\" from the terminal, but\nyou may not see the error message if the C compiler fails.</p>", "type": "rendered"}, "created_on": "2019-09-03T18:30:13.319153+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 53730734}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53732508.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53732508"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Could you explain what happened when you try to use `mass` and `cmass` at the same time? I didn\u2019t see that part of your comment initially. While we\u2019re at it, can you share your platform \\(Windows/Mac/Linux\\) and Python version too please?", "markup": "markdown", "html": "<p>Could you explain what happened when you try to use <code>mass</code> and <code>cmass</code> at the same time? I didn\u2019t see that part of your comment initially. While we\u2019re at it, can you share your platform (Windows/Mac/Linux) and Python version too please?</p>", "type": "rendered"}, "created_on": "2019-09-03T21:22:37.537121+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 53732508}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53732712.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53732712"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Platform: Windows 10, PyCharm\n\nPython: 3.7\n\nI have attached some screenshots. As you see cmass is fine, but mass is underline in red. Also, a screenshot of both pyteomics and pyteomics.cythonize installed.\n\n![](data/bitbucket.org/repo/7BxBr/images/3241655945-pyteomics-cython-glitch1.JPG)\n\u200c\n\n![](data/bitbucket.org/repo/7BxBr/images/4124807269-pyteomics-cython-glitch2.JPG)", "markup": "markdown", "html": "<p>Platform: Windows 10, PyCharm</p>\n<p>Python: 3.7</p>\n<p>I have attached some screenshots. As you see cmass is fine, but mass is underline in red. Also, a screenshot of both pyteomics and pyteomics.cythonize installed.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/7BxBr/images/3241655945-pyteomics-cython-glitch1.JPG\" />\n\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/7BxBr/images/4124807269-pyteomics-cython-glitch2.JPG\" /></p>", "type": "rendered"}, "created_on": "2019-09-03T21:45:50.599475+00:00", "user": {"display_name": "Carolina Rojas Ramirez", "uuid": "{da497e9e-eafd-4d28-a0fc-6cb8f16d0260}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D"}, "html": {"href": "https://bitbucket.org/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f3a0aaa19bbaf653952441586f3f4b0ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-1.png"}}, "nickname": "MSChemicalGeek", "type": "user", "account_id": "5b71cbac6ae601076b7a1a12"}, "updated_on": "2019-09-03T21:46:35.675126+00:00", "type": "issue_comment", "id": 53732712}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53752680.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53752680"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "I don\u2019t use Pycharm, but I\u2019ve heard its static analysis tools are supposed to be very good, so that is odd. There is no reason those two modules _should_ conflict though. What happens when you try to actually run code that imports both `cmass` and `mass`?", "markup": "markdown", "html": "<p>I don\u2019t use Pycharm, but I\u2019ve heard its static analysis tools are supposed to be very good, so that is odd. There is no reason those two modules <em>should</em> conflict though. What happens when you try to actually run code that imports both <code>cmass</code> and <code>mass</code>?</p>", "type": "rendered"}, "created_on": "2019-09-05T01:23:02.860627+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 53752680}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53775121.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53775121"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Hi, Joshua\n\nActually the code runs! It is quite odd. So the issue about _cmass_ and _cparser_ conflicting with the noncythonized versions actually it does not happen, even though Pycharm complains.\n\n![](data/bitbucket.org/repo/7BxBr/images/1026848491-image.png)\nI then proceeded to download from source, the commit you pushed days ago.\n\nI first uninstall the pyteomics.cythonize version that I already had, I then proceeded to install your commit, but then there was an error:c1: fatal error C1083\n\n![](data/bitbucket.org/repo/7BxBr/images/1528092391-image.png)\n\u200c\n\n![](data/bitbucket.org/repo/7BxBr/images/2182274471-image.png)\nIf I reinstalled the old version and then tryp to upgrade to your commit, the same error shows again.\n\nIs this the error about the C compiler failing?\n\nThanks for your patience and help.\n\nCarolina", "markup": "markdown", "html": "<p>Hi, Joshua</p>\n<p>Actually the code runs! It is quite odd. So the issue about <em>cmass</em> and <em>cparser</em> conflicting with the noncythonized versions actually it does not happen, even though Pycharm complains.</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/7BxBr/images/1026848491-image.png\" />\nI then proceeded to download from source, the commit you pushed days ago.</p>\n<p>I first uninstall the pyteomics.cythonize version that I already had, I then proceeded to install your commit, but then there was an error:c1: fatal error C1083</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/7BxBr/images/1528092391-image.png\" />\n\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/7BxBr/images/2182274471-image.png\" />\nIf I reinstalled the old version and then tryp to upgrade to your commit, the same error shows again.</p>\n<p>Is this the error about the C compiler failing?</p>\n<p>Thanks for your patience and help.</p>\n<p>Carolina</p>", "type": "rendered"}, "created_on": "2019-09-05T18:42:48.675953+00:00", "user": {"display_name": "Carolina Rojas Ramirez", "uuid": "{da497e9e-eafd-4d28-a0fc-6cb8f16d0260}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D"}, "html": {"href": "https://bitbucket.org/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f3a0aaa19bbaf653952441586f3f4b0ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-1.png"}}, "nickname": "MSChemicalGeek", "type": "user", "account_id": "5b71cbac6ae601076b7a1a12"}, "updated_on": "2019-09-05T18:47:22.794926+00:00", "type": "issue_comment", "id": 53775121}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53777296.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53777296"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Ah, right. You need to install `Cython` prior to installing `pyteomics.cythonize` from source \\(and not a release\\) in order to translate the `.pyx` files into `.c` files for the C compiler.\n\nIt looks like you have MSVC 2019, which should work for doing the actual compilation. \n\nMaybe Pycharm doesn't like the fact that two packages point to `site-packages/pyteomics` and that the package metadata for the more recent one doesn't include `mass` and `parser`? Does it complain about other modules like `mgf` or `fasta`?", "markup": "markdown", "html": "<p>Ah, right. You need to install <code>Cython</code> prior to installing <code>pyteomics.cythonize</code> from source (and not a release) in order to translate the <code>.pyx</code> files into <code>.c</code> files for the C compiler.</p>\n<p>It looks like you have MSVC 2019, which should work for doing the actual compilation. </p>\n<p>Maybe Pycharm doesn't like the fact that two packages point to <code>site-packages/pyteomics</code> and that the package metadata for the more recent one doesn't include <code>mass</code> and <code>parser</code>? Does it complain about other modules like <code>mgf</code> or <code>fasta</code>?</p>", "type": "rendered"}, "created_on": "2019-09-05T21:56:35.680510+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": "2019-09-05T22:03:06.738217+00:00", "type": "issue_comment", "id": 53777296}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53797504.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53797504"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Hi, Joshua\n\nAfter downloading Cython the pyteomics.cythonize upgrade from 0.2.2 from your github was a success! I then proceeded to test the code in PyCharm. As you can see both fasta and mgf are also underline in red.\n\nUsing mass.fast\\_mass and cmass.fast\\_mass is fine.\n\nWhen I try to use parser.isoforms and cparser.isoforms, the generator objects that are produced looked different.\n\n\u200c\n\n![](data/bitbucket.org/repo/7BxBr/images/1373771527-image.png)\nThen if I proceed to print out each item in the generator object,  I receive an error from the cparser.isoforms: \n\n![](data/bitbucket.org/repo/7BxBr/images/3386669189-image.png)\nThe above error was encountered when running the code in PyChram and thru Git-Bash\n\nCarolina", "markup": "markdown", "html": "<p>Hi, Joshua</p>\n<p>After downloading Cython the pyteomics.cythonize upgrade from 0.2.2 from your github was a success! I then proceeded to test the code in PyCharm. As you can see both fasta and mgf are also underline in red.</p>\n<p>Using mass.fast_mass and cmass.fast_mass is fine.</p>\n<p>When I try to use parser.isoforms and cparser.isoforms, the generator objects that are produced looked different.</p>\n<p>\u200c</p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/7BxBr/images/1373771527-image.png\" />\nThen if I proceed to print out each item in the generator object,  I receive an error from the cparser.isoforms: </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/7BxBr/images/3386669189-image.png\" />\nThe above error was encountered when running the code in PyChram and thru Git-Bash</p>\n<p>Carolina</p>", "type": "rendered"}, "created_on": "2019-09-07T13:42:20.471536+00:00", "user": {"display_name": "Carolina Rojas Ramirez", "uuid": "{da497e9e-eafd-4d28-a0fc-6cb8f16d0260}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D"}, "html": {"href": "https://bitbucket.org/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f3a0aaa19bbaf653952441586f3f4b0ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-1.png"}}, "nickname": "MSChemicalGeek", "type": "user", "account_id": "5b71cbac6ae601076b7a1a12"}, "updated_on": null, "type": "issue_comment", "id": 53797504}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53797879.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53797879"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "If I read your editor screenshot correctly, one of your variable modification's targets was specified as a `str`, when based on the docstring I expected it to be a `list`. It works with the original code because we really just needed any iterable of `str` objects there \\(`str` implicitly satisfying this\\). I've altered `coerce_modification_dict` to relax that assumption and pushed the change. Please pull in the latest commit to `pyteomics.cythonize` and try it again.", "markup": "markdown", "html": "<p>If I read your editor screenshot correctly, one of your variable modification's targets was specified as a <code>str</code>, when based on the docstring I expected it to be a <code>list</code>. It works with the original code because we really just needed any iterable of <code>str</code> objects there (<code>str</code> implicitly satisfying this). I've altered <code>coerce_modification_dict</code> to relax that assumption and pushed the change. Please pull in the latest commit to <code>pyteomics.cythonize</code> and try it again.</p>", "type": "rendered"}, "created_on": "2019-09-07T14:44:47.305988+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 53797879}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53798845.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53798845"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Joshua,\n\n\u200c\n\nMany thanks for your help. It works! I use the time library and there is no time for cparser.isoforms. \n\n![](data/bitbucket.org/repo/7BxBr/images/326360550-image.png)\nUsing Bovine Serum Albumin and several variable modifications the parser.isoforms time increased 10x, while cparser.isoforms remained the same. \n\nI am very grateful! Next step is to implement in to my research scripts.\n\nCarolina", "markup": "markdown", "html": "<p>Joshua,</p>\n<p>\u200c</p>\n<p>Many thanks for your help. It works! I use the time library and there is no time for cparser.isoforms. </p>\n<p><img alt=\"\" src=\"data/bitbucket.org/repo/7BxBr/images/326360550-image.png\" />\nUsing Bovine Serum Albumin and several variable modifications the parser.isoforms time increased 10x, while cparser.isoforms remained the same. </p>\n<p>I am very grateful! Next step is to implement in to my research scripts.</p>\n<p>Carolina</p>", "type": "rendered"}, "created_on": "2019-09-07T18:01:58.940987+00:00", "user": {"display_name": "Carolina Rojas Ramirez", "uuid": "{da497e9e-eafd-4d28-a0fc-6cb8f16d0260}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D"}, "html": {"href": "https://bitbucket.org/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f3a0aaa19bbaf653952441586f3f4b0ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-1.png"}}, "nickname": "MSChemicalGeek", "type": "user", "account_id": "5b71cbac6ae601076b7a1a12"}, "updated_on": null, "type": "issue_comment", "id": 53798845}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53798936.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53798936"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "When you use `isoforms` in your research scripts, do you use specify the `format` argument? By default it is `\"str\"` which has considerable overhead compared to the other option, `\"split\"`. The `\"split\"` format will match the format returned by `parse` with the `split` argument set to `True`. If after you generate the isoforms, you parse the string using `parse(x, split=True)` you can save more time.\n\nThat said, `cparser.isoforms` yields `list`s of `SequencePosition` objects, not `tuple`s the way that `parser.isoforms` does. For most things, `SequencePosition` should behave the same way as `tuple`, except when trying to concatenate them.", "markup": "markdown", "html": "<p>When you use <code>isoforms</code> in your research scripts, do you use specify the <code>format</code> argument? By default it is <code>\"str\"</code> which has considerable overhead compared to the other option, <code>\"split\"</code>. The <code>\"split\"</code> format will match the format returned by <code>parse</code> with the <code>split</code> argument set to <code>True</code>. If after you generate the isoforms, you parse the string using <code>parse(x, split=True)</code> you can save more time.</p>\n<p>That said, <code>cparser.isoforms</code> yields <code>list</code>s of <code>SequencePosition</code> objects, not <code>tuple</code>s the way that <code>parser.isoforms</code> does. For most things, <code>SequencePosition</code> should behave the same way as <code>tuple</code>, except when trying to concatenate them.</p>", "type": "rendered"}, "created_on": "2019-09-07T18:17:08.848887+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 53798936}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/54388925.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-54388925"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "@{5b71cbac6ae601076b7a1a12} , did I fix your problem? Can this issue be closed?", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"5b71cbac6ae601076b7a1a12\">@Carolina Rojas Ramirez</span> , did I fix your problem? Can this issue be closed?</p>", "type": "rendered"}, "created_on": "2019-10-17T02:10:52.724433+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 54388925}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/54389213.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-54389213"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "Hi, Joshua\n\nI have not been able to test the code completely due to classes and a new semester starting, but from what I have tested so far. Yes, I would say the issue can be closed. \n\nAgain many thanks for your help. If I have any questions I will let you know. \n\nBest wishes, \n\nCarolina", "markup": "markdown", "html": "<p>Hi, Joshua</p>\n<p>I have not been able to test the code completely due to classes and a new semester starting, but from what I have tested so far. Yes, I would say the issue can be closed. </p>\n<p>Again many thanks for your help. If I have any questions I will let you know. </p>\n<p>Best wishes, </p>\n<p>Carolina</p>", "type": "rendered"}, "created_on": "2019-10-17T02:50:16.642168+00:00", "user": {"display_name": "Carolina Rojas Ramirez", "uuid": "{da497e9e-eafd-4d28-a0fc-6cb8f16d0260}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D"}, "html": {"href": "https://bitbucket.org/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f3a0aaa19bbaf653952441586f3f4b0ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-1.png"}}, "nickname": "MSChemicalGeek", "type": "user", "account_id": "5b71cbac6ae601076b7a1a12"}, "updated_on": null, "type": "issue_comment", "id": 54389213}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/54482993.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-54482993"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2019-10-22T14:30:43.095499+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 54482993}], "page": 1, "size": 23}