{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45/comments/53625368.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/45#comment-53625368"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/45.json"}}, "type": "issue", "id": 45, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Pyteomics cparser.isoforms module feature request"}, "content": {"raw": "I am currently implementing pyteomics in a group of python scripts, which has worked fine for generating theoretical ions with several charges and several ion types from large sequences \\(e.g Bovine Serum Albumin\\). Things slow down once I start adding modifications, in which at the core of this part of code is the isoform module.\n\nAll the generated isoforms are then further modified to obtain double modified residues at the termini, if needed, and then they are used to generate theoretical ions. The list of ions are then \u201cdumped\u201d into a file using the pickle package. This non-text file will be used for current and future peak matching analysis \\(for only one protein\\). This is a brief summary of what happens in our predictor module.\n\nDoes this answer your question? I have minimal background in programming and computer science. Currently, I am the only one working on optimizing this code \\(inherited from my now graduated mentor\\). My apologies if the procedure above might sound terribly inefficient.\n\nThank you so much for your help!", "markup": "markdown", "html": "<p>I am currently implementing pyteomics in a group of python scripts, which has worked fine for generating theoretical ions with several charges and several ion types from large sequences (e.g Bovine Serum Albumin). Things slow down once I start adding modifications, in which at the core of this part of code is the isoform module.</p>\n<p>All the generated isoforms are then further modified to obtain double modified residues at the termini, if needed, and then they are used to generate theoretical ions. The list of ions are then \u201cdumped\u201d into a file using the pickle package. This non-text file will be used for current and future peak matching analysis (for only one protein). This is a brief summary of what happens in our predictor module.</p>\n<p>Does this answer your question? I have minimal background in programming and computer science. Currently, I am the only one working on optimizing this code (inherited from my now graduated mentor). My apologies if the procedure above might sound terribly inefficient.</p>\n<p>Thank you so much for your help!</p>", "type": "rendered"}, "created_on": "2019-08-28T02:22:18.060958+00:00", "user": {"display_name": "Carolina Rojas Ramirez", "uuid": "{da497e9e-eafd-4d28-a0fc-6cb8f16d0260}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D"}, "html": {"href": "https://bitbucket.org/%7Bda497e9e-eafd-4d28-a0fc-6cb8f16d0260%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/f3a0aaa19bbaf653952441586f3f4b0ad=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCR-1.png"}}, "nickname": "MSChemicalGeek", "type": "user", "account_id": "5b71cbac6ae601076b7a1a12"}, "updated_on": null, "type": "issue_comment", "id": 53625368}