{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "links": {"attachments": {"href": "data/repositories/levitsky/pyteomics/issues/33/attachments_page=1.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/issues/33.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/issues/33/watch"}, "comments": {"href": "data/repositories/levitsky/pyteomics/issues/33/comments_page=1.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/33/problems-w-creating-dataframe-from-xtandem"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/issues/33/vote"}}, "reporter": null, "title": "Problems w/ creating DataFrame from X!Tandem file", "component": null, "votes": 0, "watches": null, "content": {"raw": "Hello,\r\n\r\nI have run into a problem using tandem.DataFrame() to read an X!Tandem output file.  In particular, a KeyError is raised at the statement near the end of the above mentioned routine at the statement:\r\n\r\n            del protein['peptide']['peptide']\r\n\r\nIf I wrap this in a try block then I hit another KeyError at \r\n\r\n            info['scan'] = item['support']['fragment ion mass spectrum']['note']\r\n\r\nHere is the error message:\r\n\r\n\r\n```\r\nbash-3.2$ ./CuWm_analysis.py -i foo.xml -f 'X!Tandem'\r\nTraceback (most recent call last):\r\n  File \"./CuWm_analysis.py\", line 47, in <module>\r\n    sys.exit(main(ns))\r\n  File \"./CuWm_analysis.py\", line 33, in main\r\n    unprocessed = supported_formats[ns.format].DataFrame(ns.infile)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pyteomics/tandem.py\", line 310, in DataFrame\r\n    del protein['peptide']['peptide']\r\nKeyError: 'peptide'\r\n```", "markup": "markdown", "html": "<p>Hello,</p>\n<p>I have run into a problem using tandem.DataFrame() to read an X!Tandem output file.  In particular, a KeyError is raised at the statement near the end of the above mentioned routine at the statement:</p>\n<div class=\"codehilite\"><pre><span></span>        del protein[&#39;peptide&#39;][&#39;peptide&#39;]\n</pre></div>\n\n\n<p>If I wrap this in a try block then I hit another KeyError at </p>\n<div class=\"codehilite\"><pre><span></span>        info[&#39;scan&#39;] = item[&#39;support&#39;][&#39;fragment ion mass spectrum&#39;][&#39;note&#39;]\n</pre></div>\n\n\n<p>Here is the error message:</p>\n<div class=\"codehilite\"><pre><span></span>bash-3.2$ ./CuWm_analysis.py -i foo.xml -f &#39;X!Tandem&#39;\nTraceback (most recent call last):\n  File &quot;./CuWm_analysis.py&quot;, line 47, in &lt;module&gt;\n    sys.exit(main(ns))\n  File &quot;./CuWm_analysis.py&quot;, line 33, in main\n    unprocessed = supported_formats[ns.format].DataFrame(ns.infile)\n  File &quot;/opt/local/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pyteomics/tandem.py&quot;, line 310, in DataFrame\n    del protein[&#39;peptide&#39;][&#39;peptide&#39;]\nKeyError: &#39;peptide&#39;\n</pre></div>", "type": "rendered"}, "assignee": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-10-29T21:09:36.521506+00:00", "milestone": null, "updated_on": "2019-01-07T15:48:27.068073+00:00", "type": "issue", "id": 33}