{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/16/comments/33613854.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/16#comment-33613854"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/16.json"}}, "type": "issue", "id": 16, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Checking of string inclusivity in _get_info-related dictionaries of formats using base64 encoded data is dangerous"}, "content": {"raw": "Yes, the conditional will short-circuit most of the time, but the try-except would less expensive: http://stackoverflow.com/a/1835844/1137920. Then again, here's the time breakdown to loop over a file with no actual processing for each scan:\n\n```\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n    21322   47.704    0.002   47.704    0.002 {zlib.decompress}\n    21322   17.609    0.001   17.609    0.001 {binascii.a2b_base64}\n    21322   14.409    0.001   14.409    0.001 {method 'encode' of 'str' objects}\n    14249   13.017    0.001  123.122    0.009 xml.py:385(iterfind)\n155944/14248   11.134    0.000  108.205    0.008 xml.py:307(_get_info)\n155944/14248   10.324    0.000  108.338    0.008 mzml.py:83(_get_info_smart)\n```\nso either works, it's just a question of which one will our future selves understand when something else inevitably goes wrong. Then we just need to put the same construct around the `if \"binaryDataArray\"` and equivalent locations in `mzxml` (2-3 places, as the last place is a no-op as of this morning).\n\nI'll do the compound boolean in the if condition send in the pull request.", "markup": "markdown", "html": "<p>Yes, the conditional will short-circuit most of the time, but the try-except would less expensive: <a href=\"http://stackoverflow.com/a/1835844/1137920\" rel=\"nofollow\" class=\"ap-connect-link\">http://stackoverflow.com/a/1835844/1137920</a>. Then again, here's the time breakdown to loop over a file with no actual processing for each scan:</p>\n<div class=\"codehilite\"><pre><span></span>   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\n    21322   47.704    0.002   47.704    0.002 {zlib.decompress}\n    21322   17.609    0.001   17.609    0.001 {binascii.a2b_base64}\n    21322   14.409    0.001   14.409    0.001 {method &#39;encode&#39; of &#39;str&#39; objects}\n    14249   13.017    0.001  123.122    0.009 xml.py:385(iterfind)\n155944/14248   11.134    0.000  108.205    0.008 xml.py:307(_get_info)\n155944/14248   10.324    0.000  108.338    0.008 mzml.py:83(_get_info_smart)\n</pre></div>\n\n\n<p>so either works, it's just a question of which one will our future selves understand when something else inevitably goes wrong. Then we just need to put the same construct around the <code>if \"binaryDataArray\"</code> and equivalent locations in <code>mzxml</code> (2-3 places, as the last place is a no-op as of this morning).</p>\n<p>I'll do the compound boolean in the if condition send in the pull request.</p>", "type": "rendered"}, "created_on": "2017-01-12T22:09:50.690978+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 33613854}