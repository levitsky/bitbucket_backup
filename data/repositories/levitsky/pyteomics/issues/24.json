{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "links": {"attachments": {"href": "data/repositories/levitsky/pyteomics/issues/24/attachments_page=1.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/issues/24.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/issues/24/watch"}, "comments": {"href": "data/repositories/levitsky/pyteomics/issues/24/comments_page=1.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/24/calling-mgfread-with-usage-of-source"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/issues/24/vote"}}, "reporter": null, "title": "calling mgf.read() with usage of source keyword raises IndexError", "component": null, "votes": 0, "watches": null, "content": {"raw": "If I run \r\n\r\n```\r\nmgf.read(source=obsS_MGF_filePath, use_header=True, convert_arrays=1, read_charges=False, dtype=float)\r\n\r\n```\r\nI get \r\n\r\n```\r\n#!File \"/usr/local/lib/python3.5/dist-packages/pyteomics/auxiliary.py\", line 531, in helper return FileReader(args[0], _mode, _func, True, args[1:], kwargs, kwargs.pop('encoding', None)) IndexError: tuple index out of range\r\n\r\nFile \"/usr/local/lib/python3.5/dist-packages/pyteomics/auxiliary.py\", line 531, in helper\r\n    return FileReader(args[0], _mode, _func, True, args[1:], kwargs, kwargs.pop('encoding', None))\r\nIndexError: tuple index out of range\r\n```\r\nBut if I run without explicitly writing the source keyword:\r\n\r\n```\r\nmgf.read(obsS_MGF_filePath, use_header=True, convert_arrays=1, read_charges=False, dtype=float)\r\n\r\n```\r\neverything works just fine. The problem is that the args tuple is empty when you use the source keyword. I strongly advise against using the args tuple in this way, because you are hardcoding your argument order while making it look like you are not (because you specify keywords).", "markup": "markdown", "html": "<p>If I run </p>\n<div class=\"codehilite\"><pre><span></span>mgf.read(source=obsS_MGF_filePath, use_header=True, convert_arrays=1, read_charges=False, dtype=float)\n</pre></div>\n\n\n<p>I get </p>\n<div class=\"codehilite language-file\"><pre><span></span>File &quot;/usr/local/lib/python3.5/dist-packages/pyteomics/auxiliary.py&quot;, line 531, in helper\n    return FileReader(args[0], _mode, _func, True, args[1:], kwargs, kwargs.pop(&#39;encoding&#39;, None))\nIndexError: tuple index out of range\n</pre></div>\n\n\n<p>But if I run without explicitly writing the source keyword:</p>\n<div class=\"codehilite\"><pre><span></span>mgf.read(obsS_MGF_filePath, use_header=True, convert_arrays=1, read_charges=False, dtype=float)\n</pre></div>\n\n\n<p>everything works just fine. The problem is that the args tuple is empty when you use the source keyword. I strongly advise against using the args tuple in this way, because you are hardcoding your argument order while making it look like you are not (because you specify keywords).</p>", "type": "rendered"}, "assignee": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "state": "resolved", "version": null, "edited_on": null, "created_on": "2018-05-04T09:41:54.914905+00:00", "milestone": null, "updated_on": "2018-05-11T15:07:42.172418+00:00", "type": "issue", "id": 24}