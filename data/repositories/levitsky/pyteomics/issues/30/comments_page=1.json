{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/30/comments/46811848.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/30#comment-46811848"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/30.json"}}, "type": "issue", "id": 30, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Can't add other decoy label"}, "content": {"raw": "Hi,\n\nshort answer: you probably want to use `tandem.filter('result.t.xml', fdr=0.05, decoy_prefix = \"generic|D_\")`\n\nLong answer:\n\nWhen you specify a string as `is_decoy`, it is used as a key. In this case you are filtering an array of dicts, so the corresponding key must be present in each dict for this code to work. Another use case for string as `is_decoy` is when you are filtering a record array or a dataframe.\n\nOtherwise, `is_decoy` is supposed to be a function that takes a PSM (a dict in this case) and returns a boolean.\n\n`tandem.filter` has a default value for `is_decoy` which looks for decoy prefix in all proteins for a given PSM, the default prefix is `\"DECOY_\"`. You can keep the function but override the prefix by providing `decoy_prefix`. However, the prefix is matched against the beginning of the FASTA header, hence I specified `\"generic|D_\"` and not just `\"D_\"`.\n\nLet me know if you have any follow-up questions.\n\nBest regards,\n\nLev", "markup": "markdown", "html": "<p>Hi,</p>\n<p>short answer: you probably want to use <code>tandem.filter('result.t.xml', fdr=0.05, decoy_prefix = \"generic|D_\")</code></p>\n<p>Long answer:</p>\n<p>When you specify a string as <code>is_decoy</code>, it is used as a key. In this case you are filtering an array of dicts, so the corresponding key must be present in each dict for this code to work. Another use case for string as <code>is_decoy</code> is when you are filtering a record array or a dataframe.</p>\n<p>Otherwise, <code>is_decoy</code> is supposed to be a function that takes a PSM (a dict in this case) and returns a boolean.</p>\n<p><code>tandem.filter</code> has a default value for <code>is_decoy</code> which looks for decoy prefix in all proteins for a given PSM, the default prefix is <code>\"DECOY_\"</code>. You can keep the function but override the prefix by providing <code>decoy_prefix</code>. However, the prefix is matched against the beginning of the FASTA header, hence I specified <code>\"generic|D_\"</code> and not just <code>\"D_\"</code>.</p>\n<p>Let me know if you have any follow-up questions.</p>\n<p>Best regards,</p>\n<p>Lev</p>", "type": "rendered"}, "created_on": "2018-07-18T18:43:16.804033+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 46811848}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/30/comments/47138404.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/30#comment-47138404"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/30.json"}}, "type": "issue", "id": 30, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Can't add other decoy label"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2018-08-06T17:10:20.927974+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 47138404}], "page": 1, "size": 2}