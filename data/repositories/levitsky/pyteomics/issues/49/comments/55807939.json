{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49/comments/55807939.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/49#comment-55807939"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49.json"}}, "type": "issue", "id": 49, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzidentml wrong annotation in DataFrame"}, "content": {"raw": "Hi Yasset,\n\nthe `read()` and `DataFrame()` functions do not filter out decoys; `filter()` and `filter_df()` do. Can you verify that the tool that produced the MzIdentML did not filter out the decoys?\n\nIt may also be that the tool does not know which PSMs are actually decoys. In any case, the value for isDecoy field is taken directly from the corresponding attribute in the \u201cPeptideEvidence\u201d element on the file.\n\nIf you can find the string `isDecoy=\"true\"` in the file then it\u2019s a problem with Pyteomics. Otherwise you either need to adjust something in the preceding pipeline \\(so that decoy PSMs and their labels are passed through correctly\\), or you can create your own \u201cisDecoy\u201d column post-reading by applying some custom logic, e.g.: \n\n\u200c\n\n```python\ndf = mzid.DataFrame('my.mzid') \ndf['isDecoy'] = df['accession'].apply(lambda r: all(a.endswith('DECOY') for a in r))\n```\n\nThe exact code will depend on how decoy labels are encoded.", "markup": "markdown", "html": "<p>Hi Yasset,</p>\n<p>the <code>read()</code> and <code>DataFrame()</code> functions do not filter out decoys; <code>filter()</code> and <code>filter_df()</code> do. Can you verify that the tool that produced the MzIdentML did not filter out the decoys?</p>\n<p>It may also be that the tool does not know which PSMs are actually decoys. In any case, the value for isDecoy field is taken directly from the corresponding attribute in the \u201cPeptideEvidence\u201d element on the file.</p>\n<p>If you can find the string <code>isDecoy=\"true\"</code> in the file then it\u2019s a problem with Pyteomics. Otherwise you either need to adjust something in the preceding pipeline (so that decoy PSMs and their labels are passed through correctly), or you can create your own \u201cisDecoy\u201d column post-reading by applying some custom logic, e.g.: </p>\n<p>\u200c</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">mzid</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"s1\">&#39;my.mzid&#39;</span><span class=\"p\">)</span> \n<span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">&#39;isDecoy&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">&#39;accession&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">r</span><span class=\"p\">:</span> <span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;DECOY&#39;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"n\">r</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>The exact code will depend on how decoy labels are encoded.</p>", "type": "rendered"}, "created_on": "2020-01-21T19:30:17.635473+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 55807939}