{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49/comments/55807601.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/49#comment-55807601"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49.json"}}, "type": "issue", "id": 49, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzidentml wrong annotation in DataFrame"}, "content": {"raw": "@{557058:986c547b-c50a-40b3-948a-29b4a93b7b30} is Yasset the person that open the issue. \n\n\u200c", "markup": "markdown", "html": "<p><span class=\"ap-mention ap-mention-me\" data-atlassian-id=\"557058:986c547b-c50a-40b3-948a-29b4a93b7b30\">@Lev Levitsky</span> is Yasset the person that open the issue. </p>\n<p>\u200c</p>", "type": "rendered"}, "created_on": "2020-01-21T18:50:44.184725+00:00", "user": {"display_name": "Yasset Perez", "uuid": "{65732fe2-6047-4cf9-bbd0-6b71db8c6bb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65732fe2-6047-4cf9-bbd0-6b71db8c6bb1%7D"}, "html": {"href": "https://bitbucket.org/%7B65732fe2-6047-4cf9-bbd0-6b71db8c6bb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5626cfe6897dc495b83bc9eb61a3f22ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsYP-1.png"}}, "nickname": "Yasset Perez-Riverol", "type": "user", "account_id": "557058:bafc7224-b2a9-46b1-9918-153a342c1455"}, "updated_on": null, "type": "issue_comment", "id": 55807601}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49/comments/55807939.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/49#comment-55807939"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49.json"}}, "type": "issue", "id": 49, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzidentml wrong annotation in DataFrame"}, "content": {"raw": "Hi Yasset,\n\nthe `read()` and `DataFrame()` functions do not filter out decoys; `filter()` and `filter_df()` do. Can you verify that the tool that produced the MzIdentML did not filter out the decoys?\n\nIt may also be that the tool does not know which PSMs are actually decoys. In any case, the value for isDecoy field is taken directly from the corresponding attribute in the \u201cPeptideEvidence\u201d element on the file.\n\nIf you can find the string `isDecoy=\"true\"` in the file then it\u2019s a problem with Pyteomics. Otherwise you either need to adjust something in the preceding pipeline \\(so that decoy PSMs and their labels are passed through correctly\\), or you can create your own \u201cisDecoy\u201d column post-reading by applying some custom logic, e.g.: \n\n\u200c\n\n```python\ndf = mzid.DataFrame('my.mzid') \ndf['isDecoy'] = df['accession'].apply(lambda r: all(a.endswith('DECOY') for a in r))\n```\n\nThe exact code will depend on how decoy labels are encoded.", "markup": "markdown", "html": "<p>Hi Yasset,</p>\n<p>the <code>read()</code> and <code>DataFrame()</code> functions do not filter out decoys; <code>filter()</code> and <code>filter_df()</code> do. Can you verify that the tool that produced the MzIdentML did not filter out the decoys?</p>\n<p>It may also be that the tool does not know which PSMs are actually decoys. In any case, the value for isDecoy field is taken directly from the corresponding attribute in the \u201cPeptideEvidence\u201d element on the file.</p>\n<p>If you can find the string <code>isDecoy=\"true\"</code> in the file then it\u2019s a problem with Pyteomics. Otherwise you either need to adjust something in the preceding pipeline (so that decoy PSMs and their labels are passed through correctly), or you can create your own \u201cisDecoy\u201d column post-reading by applying some custom logic, e.g.: </p>\n<p>\u200c</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">mzid</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"s1\">&#39;my.mzid&#39;</span><span class=\"p\">)</span> \n<span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">&#39;isDecoy&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">&#39;accession&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">r</span><span class=\"p\">:</span> <span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s1\">&#39;DECOY&#39;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"n\">r</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>The exact code will depend on how decoy labels are encoded.</p>", "type": "rendered"}, "created_on": "2020-01-21T19:30:17.635473+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 55807939}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49/comments/55808054.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/49#comment-55808054"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49.json"}}, "type": "issue", "id": 49, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzidentml wrong annotation in DataFrame"}, "content": {"raw": "I think this can be changed because the mzIdentML has a field in the peptide evidence that says it is a decoy or not. You should use that, in that way, the library does not depend on the DECOY prefix. Another possible solution is that we can add a parameter to define the DECOY prefix. \n\nWhat do you think?", "markup": "markdown", "html": "<p>I think this can be changed because the mzIdentML has a field in the peptide evidence that says it is a decoy or not. You should use that, in that way, the library does not depend on the DECOY prefix. Another possible solution is that we can add a parameter to define the DECOY prefix. </p>\n<p>What do you think?</p>", "type": "rendered"}, "created_on": "2020-01-21T19:40:37.903454+00:00", "user": {"display_name": "Yasset Perez", "uuid": "{65732fe2-6047-4cf9-bbd0-6b71db8c6bb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65732fe2-6047-4cf9-bbd0-6b71db8c6bb1%7D"}, "html": {"href": "https://bitbucket.org/%7B65732fe2-6047-4cf9-bbd0-6b71db8c6bb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5626cfe6897dc495b83bc9eb61a3f22ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsYP-1.png"}}, "nickname": "Yasset Perez-Riverol", "type": "user", "account_id": "557058:bafc7224-b2a9-46b1-9918-153a342c1455"}, "updated_on": null, "type": "issue_comment", "id": 55808054}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49/comments/55808120.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/49#comment-55808120"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49.json"}}, "type": "issue", "id": 49, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzidentml wrong annotation in DataFrame"}, "content": {"raw": "The PeptideEvidence attribute is used right now. If you see that all values are false in your dataframe \\(and assuming you are using the `DataFrame()` function\\) my guess is that all the PeptideEvidence isDecoy attributes in the file are false. If that is not the case, then there\u2019s a bug in the parser, but I would need an example file to reproduce it.", "markup": "markdown", "html": "<p>The PeptideEvidence attribute is used right now. If you see that all values are false in your dataframe (and assuming you are using the <code>DataFrame()</code> function) my guess is that all the PeptideEvidence isDecoy attributes in the file are false. If that is not the case, then there\u2019s a bug in the parser, but I would need an example file to reproduce it.</p>", "type": "rendered"}, "created_on": "2020-01-21T19:48:29.548170+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 55808120}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49/comments/55808197.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/49#comment-55808197"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49.json"}}, "type": "issue", "id": 49, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzidentml wrong annotation in DataFrame"}, "content": {"raw": "II have provided an example in the eubic channel for spectral-libraries.", "markup": "markdown", "html": "<p>II have provided an example in the eubic channel for spectral-libraries.</p>", "type": "rendered"}, "created_on": "2020-01-21T19:56:11.211828+00:00", "user": {"display_name": "Yasset Perez", "uuid": "{65732fe2-6047-4cf9-bbd0-6b71db8c6bb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65732fe2-6047-4cf9-bbd0-6b71db8c6bb1%7D"}, "html": {"href": "https://bitbucket.org/%7B65732fe2-6047-4cf9-bbd0-6b71db8c6bb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5626cfe6897dc495b83bc9eb61a3f22ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsYP-1.png"}}, "nickname": "Yasset Perez-Riverol", "type": "user", "account_id": "557058:bafc7224-b2a9-46b1-9918-153a342c1455"}, "updated_on": null, "type": "issue_comment", "id": 55808197}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49/comments/55808465.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/49#comment-55808465"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49.json"}}, "type": "issue", "id": 49, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzidentml wrong annotation in DataFrame"}, "content": {"raw": "Oh, thanks, I didn\u2019t see that. I have opened the file and I see that some entries are correctly marked as decoy in the DataFrame:\n\n\u200c\n\n```python\n>>> df = mzid.DataFrame('Downloads/01650b_BA5-TUM_first_pool_75_01_01-3xHCD-1h-R2-features-index-percolator-fdr-filter.mzid')\n>>> df.isDecoy.sum()\n2034\n```\n\nSo there are 2034 rows for decoy PSMs. I have checked with the latest release and development versions. Can you try this on your system?", "markup": "markdown", "html": "<p>Oh, thanks, I didn\u2019t see that. I have opened the file and I see that some entries are correctly marked as decoy in the DataFrame:</p>\n<p>\u200c</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">mzid</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"s1\">&#39;Downloads/01650b_BA5-TUM_first_pool_75_01_01-3xHCD-1h-R2-features-index-percolator-fdr-filter.mzid&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">isDecoy</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span>\n<span class=\"mi\">2034</span>\n</pre></div>\n\n\n<p>So there are 2034 rows for decoy PSMs. I have checked with the latest release and development versions. Can you try this on your system?</p>", "type": "rendered"}, "created_on": "2020-01-21T20:25:00.899407+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 55808465}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49/comments/55808515.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/49#comment-55808515"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49.json"}}, "type": "issue", "id": 49, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzidentml wrong annotation in DataFrame"}, "content": {"raw": "I will try again here.", "markup": "markdown", "html": "<p>I will try again here.</p>", "type": "rendered"}, "created_on": "2020-01-21T20:32:48.876416+00:00", "user": {"display_name": "Yasset Perez", "uuid": "{65732fe2-6047-4cf9-bbd0-6b71db8c6bb1}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B65732fe2-6047-4cf9-bbd0-6b71db8c6bb1%7D"}, "html": {"href": "https://bitbucket.org/%7B65732fe2-6047-4cf9-bbd0-6b71db8c6bb1%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/5626cfe6897dc495b83bc9eb61a3f22ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsYP-1.png"}}, "nickname": "Yasset Perez-Riverol", "type": "user", "account_id": "557058:bafc7224-b2a9-46b1-9918-153a342c1455"}, "updated_on": null, "type": "issue_comment", "id": 55808515}, {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49/comments/56220192.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/49#comment-56220192"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/49.json"}}, "type": "issue", "id": 49, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "mzidentml wrong annotation in DataFrame"}, "content": {"raw": "@{557058:bafc7224-b2a9-46b1-9918-153a342c1455} please feel free to update if you are able to reproduce the problem.", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:bafc7224-b2a9-46b1-9918-153a342c1455\">@Yasset Perez</span> please feel free to update if you are able to reproduce the problem.</p>", "type": "rendered"}, "created_on": "2020-02-18T16:23:47.722608+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 56220192}], "page": 1, "size": 8}