{"priority": "major", "kind": "enhancement", "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "links": {"attachments": {"href": "data/repositories/levitsky/pyteomics/issues/37/attachments_page=1.json"}, "self": {"href": "data/repositories/levitsky/pyteomics/issues/37.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/issues/37/watch"}, "comments": {"href": "data/repositories/levitsky/pyteomics/issues/37/comments_page=1.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/37/add-numpress-support-in-mzml"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/levitsky/pyteomics/issues/37/vote"}}, "reporter": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "title": "Add numpress support in mzML", "component": null, "votes": 0, "watches": 2, "content": {"raw": "Binary data in mzML files can be compressed using numpress algorithms [[1](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4047472/)] e.g. with MSConvert. Such mzML files cannot be parsed with pyteomics.\r\n\r\nIt looks like support for those compression types can be added using the Python implementation in [[2](https://github.com/ms-numpress/ms-numpress)].", "markup": "markdown", "html": "<p>Binary data in mzML files can be compressed using numpress algorithms [<a data-is-external-link=\"true\" href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4047472/\" rel=\"nofollow\">1</a>] e.g. with MSConvert. Such mzML files cannot be parsed with pyteomics.</p>\n<p>It looks like support for those compression types can be added using the Python implementation in [<a data-is-external-link=\"true\" href=\"https://github.com/ms-numpress/ms-numpress\" rel=\"nofollow\">2</a>].</p>", "type": "rendered"}, "assignee": null, "state": "resolved", "version": null, "edited_on": null, "created_on": "2019-04-01T19:43:45.233168+00:00", "milestone": null, "updated_on": "2019-06-19T13:24:34.033383+00:00", "type": "issue", "id": 37}