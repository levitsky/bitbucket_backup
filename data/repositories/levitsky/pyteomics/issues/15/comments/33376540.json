{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/15/comments/33376540.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/15#comment-33376540"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/15.json"}}, "type": "issue", "id": 15, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "cvParam Unit Awareness"}, "content": {"raw": "By current checks for 'type' I meant the 'type' attribute checking in the current code of `_handle_param`. You're saying we should look at unitCVRef, unitAccession, and unitName instead?\nWhat happens with the 'type' info? *(oh, wait, is \"type\" for `userParam` and \"unitName\" for `cvParam`? Seems like it in my test files)*\n\nAlso, there is much more code for conversion of non-cvparam stuff using `_schema_info`, which also uses the same kind of checks for \"type\" attribute (although on the schema tree elements). I remember having to edit `_schema_defaults` manually for some elements. Do we want to keep these mechanisms separate?\n\nIn the end there is no difference between values from cvParam tags and other elements in the final dict. Do we want to keep everything as is except for `_handle_param` and have both regular floats and unitfloats mixed in the output? I'm just asking because these things have always seemed quite abstract for me, and I never really got into the philosophy behind the structure when I was writing the parsers (which you helped re-write at least once already), so I'm not sure what would be the \"proper\" way. I see that your proposal doesn't break anything, though, so I have no reasons to oppose it.", "markup": "markdown", "html": "<p>By current checks for 'type' I meant the 'type' attribute checking in the current code of <code>_handle_param</code>. You're saying we should look at unitCVRef, unitAccession, and unitName instead?\nWhat happens with the 'type' info? <em>(oh, wait, is \"type\" for <code>userParam</code> and \"unitName\" for <code>cvParam</code>? Seems like it in my test files)</em></p>\n<p>Also, there is much more code for conversion of non-cvparam stuff using <code>_schema_info</code>, which also uses the same kind of checks for \"type\" attribute (although on the schema tree elements). I remember having to edit <code>_schema_defaults</code> manually for some elements. Do we want to keep these mechanisms separate?</p>\n<p>In the end there is no difference between values from cvParam tags and other elements in the final dict. Do we want to keep everything as is except for <code>_handle_param</code> and have both regular floats and unitfloats mixed in the output? I'm just asking because these things have always seemed quite abstract for me, and I never really got into the philosophy behind the structure when I was writing the parsers (which you helped re-write at least once already), so I'm not sure what would be the \"proper\" way. I see that your proposal doesn't break anything, though, so I have no reasons to oppose it.</p>", "type": "rendered"}, "created_on": "2017-01-05T10:26:53.771015+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": null, "type": "issue_comment", "id": 33376540}