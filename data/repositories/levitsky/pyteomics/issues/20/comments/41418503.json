{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/20/comments/41418503.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/20#comment-41418503"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/20.json"}}, "type": "issue", "id": 20, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Modifying peptides with options \u2018ntermX\u2019 and \u2018ctermY\u2019"}, "content": {"raw": "Hi,\n\nthe way it's supposed to work is like this:\n\n\n```\n#!ipython\n\nIn [1]: from pyteomics import parser\n\nIn [2]: set(parser.isoforms(\"PEPTIDE\", variable_mods={'p': ['ntermP']}))\nOut[2]: {'PEPTIDE', 'pPEPTIDE'}\n```\n\n`ntermX` is an example which means, you can set a modification on \"P\" or on \"ntermP\", etc.\n\nAlternatively, you can set an N-terminal modification:\n\n```\n#!python\n\nIn [3]: set(parser.isoforms(\"PEPTIDE\", variable_mods={'p-': ['P']}))\nOut[3]: {'PEPTIDE', 'p-PEPTIDE'}\n\nIn [4]: set(parser.isoforms(\"PEPTIDE\", variable_mods={'p-': True}))\nOut[4]: {'PEPTIDE', 'p-PEPTIDE'}\n```", "markup": "markdown", "html": "<p>Hi,</p>\n<p>the way it's supposed to work is like this:</p>\n<div class=\"codehilite language-ipython\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">pyteomics</span> <span class=\"kn\">import</span> <span class=\"n\">parser</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">isoforms</span><span class=\"p\">(</span><span class=\"s2\">&quot;PEPTIDE&quot;</span><span class=\"p\">,</span> <span class=\"n\">variable_mods</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;p&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ntermP&#39;</span><span class=\"p\">]}))</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;PEPTIDE&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pPEPTIDE&#39;</span><span class=\"p\">}</span>\n</pre></div>\n\n\n<p><code>ntermX</code> is an example which means, you can set a modification on \"P\" or on \"ntermP\", etc.</p>\n<p>Alternatively, you can set an N-terminal modification:</p>\n<div class=\"codehilite language-python\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">isoforms</span><span class=\"p\">(</span><span class=\"s2\">&quot;PEPTIDE&quot;</span><span class=\"p\">,</span> <span class=\"n\">variable_mods</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;p-&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">&#39;P&#39;</span><span class=\"p\">]}))</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;PEPTIDE&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;p-PEPTIDE&#39;</span><span class=\"p\">}</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">isoforms</span><span class=\"p\">(</span><span class=\"s2\">&quot;PEPTIDE&quot;</span><span class=\"p\">,</span> <span class=\"n\">variable_mods</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;p-&#39;</span><span class=\"p\">:</span> <span class=\"bp\">True</span><span class=\"p\">}))</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"p\">{</span><span class=\"s1\">&#39;PEPTIDE&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;p-PEPTIDE&#39;</span><span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2017-11-24T13:54:19.116778+00:00", "user": {"display_name": "Lev Levitsky", "uuid": "{eb44325f-4ee0-4e0b-a27c-f2ea23122a56}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D"}, "html": {"href": "https://bitbucket.org/%7Beb44325f-4ee0-4e0b-a27c-f2ea23122a56%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/a2593c44c42429c503d2e5e9e307e241d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsLL-6.png"}}, "nickname": "levitsky", "type": "user", "account_id": "557058:986c547b-c50a-40b3-948a-29b4a93b7b30"}, "updated_on": "2017-11-24T13:58:08.074224+00:00", "type": "issue_comment", "id": 41418503}