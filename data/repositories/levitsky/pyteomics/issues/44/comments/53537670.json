{"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/44/comments/53537670.json"}, "html": {"href": "#!/levitsky/pyteomics/issues/44#comment-53537670"}}, "issue": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics/issues/44.json"}}, "type": "issue", "id": 44, "repository": {"links": {"self": {"href": "data/repositories/levitsky/pyteomics.json"}, "html": {"href": "#!/levitsky/pyteomics"}, "avatar": {"href": "data/bytebucket.org/ravatar/{3f6302de-10da-4d3c-b258-0bb6a2368972}ts=74456"}}, "type": "repository", "name": "pyteomics", "full_name": "levitsky/pyteomics", "uuid": "{3f6302de-10da-4d3c-b258-0bb6a2368972}"}, "title": "Multiprocessing Queue maxsize too large for MacOS"}, "content": {"raw": "That is an unexpected, and surprisingly undocumented limitation.\n\nIt shouldn't have any practical effect except in bizarre scenarios where a file contains hundreds of thousands of trivial entries and the main process can't consume them fast enough \\(not calling `next`\\) on the iterator returned by `map`.", "markup": "markdown", "html": "<p>That is an unexpected, and surprisingly undocumented limitation.</p>\n<p>It shouldn't have any practical effect except in bizarre scenarios where a file contains hundreds of thousands of trivial entries and the main process can't consume them fast enough (not calling <code>next</code>) on the iterator returned by <code>map</code>.</p>", "type": "rendered"}, "created_on": "2019-08-22T02:51:00.811513+00:00", "user": {"display_name": "Joshua Klein", "uuid": "{919f0add-304d-4b9a-8889-d2622a3dbc96}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D"}, "html": {"href": "https://bitbucket.org/%7B919f0add-304d-4b9a-8889-d2622a3dbc96%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/7d0e70bc74f783efa621a2bdd228ca22d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-3.png"}}, "nickname": "mobiusklein", "type": "user", "account_id": "557058:ff82222f-afe5-4135-a1b7-8de99a00f669"}, "updated_on": null, "type": "issue_comment", "id": 53537670}